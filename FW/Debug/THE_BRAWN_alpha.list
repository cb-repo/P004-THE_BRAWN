
THE_BRAWN_alpha.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001f9c  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800205c  0800205c  00020074  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800205c  0800205c  00020074  2**0
                  CONTENTS
  4 .ARM          00000000  0800205c  0800205c  00020074  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800205c  0800205c  00020074  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800205c  0800205c  0001205c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08002060  08002060  00012060  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000074  20000000  08002064  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000e0  20000074  080020d8  00020074  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000154  080020d8  00020154  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00020074  2**0
                  CONTENTS, READONLY
 12 .debug_info   00006c6f  00000000  00000000  0002009c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001adc  00000000  00000000  00026d0b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000628  00000000  00000000  000287e8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000550  00000000  00000000  00028e10  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000113e1  00000000  00000000  00029360  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00007cf0  00000000  00000000  0003a741  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00068db9  00000000  00000000  00042431  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000ab1ea  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000013a8  00000000  00000000  000ab240  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000074 	.word	0x20000074
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08002044 	.word	0x08002044

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000078 	.word	0x20000078
 8000104:	08002044 	.word	0x08002044

08000108 <__udivsi3>:
 8000108:	2200      	movs	r2, #0
 800010a:	0843      	lsrs	r3, r0, #1
 800010c:	428b      	cmp	r3, r1
 800010e:	d374      	bcc.n	80001fa <__udivsi3+0xf2>
 8000110:	0903      	lsrs	r3, r0, #4
 8000112:	428b      	cmp	r3, r1
 8000114:	d35f      	bcc.n	80001d6 <__udivsi3+0xce>
 8000116:	0a03      	lsrs	r3, r0, #8
 8000118:	428b      	cmp	r3, r1
 800011a:	d344      	bcc.n	80001a6 <__udivsi3+0x9e>
 800011c:	0b03      	lsrs	r3, r0, #12
 800011e:	428b      	cmp	r3, r1
 8000120:	d328      	bcc.n	8000174 <__udivsi3+0x6c>
 8000122:	0c03      	lsrs	r3, r0, #16
 8000124:	428b      	cmp	r3, r1
 8000126:	d30d      	bcc.n	8000144 <__udivsi3+0x3c>
 8000128:	22ff      	movs	r2, #255	; 0xff
 800012a:	0209      	lsls	r1, r1, #8
 800012c:	ba12      	rev	r2, r2
 800012e:	0c03      	lsrs	r3, r0, #16
 8000130:	428b      	cmp	r3, r1
 8000132:	d302      	bcc.n	800013a <__udivsi3+0x32>
 8000134:	1212      	asrs	r2, r2, #8
 8000136:	0209      	lsls	r1, r1, #8
 8000138:	d065      	beq.n	8000206 <__udivsi3+0xfe>
 800013a:	0b03      	lsrs	r3, r0, #12
 800013c:	428b      	cmp	r3, r1
 800013e:	d319      	bcc.n	8000174 <__udivsi3+0x6c>
 8000140:	e000      	b.n	8000144 <__udivsi3+0x3c>
 8000142:	0a09      	lsrs	r1, r1, #8
 8000144:	0bc3      	lsrs	r3, r0, #15
 8000146:	428b      	cmp	r3, r1
 8000148:	d301      	bcc.n	800014e <__udivsi3+0x46>
 800014a:	03cb      	lsls	r3, r1, #15
 800014c:	1ac0      	subs	r0, r0, r3
 800014e:	4152      	adcs	r2, r2
 8000150:	0b83      	lsrs	r3, r0, #14
 8000152:	428b      	cmp	r3, r1
 8000154:	d301      	bcc.n	800015a <__udivsi3+0x52>
 8000156:	038b      	lsls	r3, r1, #14
 8000158:	1ac0      	subs	r0, r0, r3
 800015a:	4152      	adcs	r2, r2
 800015c:	0b43      	lsrs	r3, r0, #13
 800015e:	428b      	cmp	r3, r1
 8000160:	d301      	bcc.n	8000166 <__udivsi3+0x5e>
 8000162:	034b      	lsls	r3, r1, #13
 8000164:	1ac0      	subs	r0, r0, r3
 8000166:	4152      	adcs	r2, r2
 8000168:	0b03      	lsrs	r3, r0, #12
 800016a:	428b      	cmp	r3, r1
 800016c:	d301      	bcc.n	8000172 <__udivsi3+0x6a>
 800016e:	030b      	lsls	r3, r1, #12
 8000170:	1ac0      	subs	r0, r0, r3
 8000172:	4152      	adcs	r2, r2
 8000174:	0ac3      	lsrs	r3, r0, #11
 8000176:	428b      	cmp	r3, r1
 8000178:	d301      	bcc.n	800017e <__udivsi3+0x76>
 800017a:	02cb      	lsls	r3, r1, #11
 800017c:	1ac0      	subs	r0, r0, r3
 800017e:	4152      	adcs	r2, r2
 8000180:	0a83      	lsrs	r3, r0, #10
 8000182:	428b      	cmp	r3, r1
 8000184:	d301      	bcc.n	800018a <__udivsi3+0x82>
 8000186:	028b      	lsls	r3, r1, #10
 8000188:	1ac0      	subs	r0, r0, r3
 800018a:	4152      	adcs	r2, r2
 800018c:	0a43      	lsrs	r3, r0, #9
 800018e:	428b      	cmp	r3, r1
 8000190:	d301      	bcc.n	8000196 <__udivsi3+0x8e>
 8000192:	024b      	lsls	r3, r1, #9
 8000194:	1ac0      	subs	r0, r0, r3
 8000196:	4152      	adcs	r2, r2
 8000198:	0a03      	lsrs	r3, r0, #8
 800019a:	428b      	cmp	r3, r1
 800019c:	d301      	bcc.n	80001a2 <__udivsi3+0x9a>
 800019e:	020b      	lsls	r3, r1, #8
 80001a0:	1ac0      	subs	r0, r0, r3
 80001a2:	4152      	adcs	r2, r2
 80001a4:	d2cd      	bcs.n	8000142 <__udivsi3+0x3a>
 80001a6:	09c3      	lsrs	r3, r0, #7
 80001a8:	428b      	cmp	r3, r1
 80001aa:	d301      	bcc.n	80001b0 <__udivsi3+0xa8>
 80001ac:	01cb      	lsls	r3, r1, #7
 80001ae:	1ac0      	subs	r0, r0, r3
 80001b0:	4152      	adcs	r2, r2
 80001b2:	0983      	lsrs	r3, r0, #6
 80001b4:	428b      	cmp	r3, r1
 80001b6:	d301      	bcc.n	80001bc <__udivsi3+0xb4>
 80001b8:	018b      	lsls	r3, r1, #6
 80001ba:	1ac0      	subs	r0, r0, r3
 80001bc:	4152      	adcs	r2, r2
 80001be:	0943      	lsrs	r3, r0, #5
 80001c0:	428b      	cmp	r3, r1
 80001c2:	d301      	bcc.n	80001c8 <__udivsi3+0xc0>
 80001c4:	014b      	lsls	r3, r1, #5
 80001c6:	1ac0      	subs	r0, r0, r3
 80001c8:	4152      	adcs	r2, r2
 80001ca:	0903      	lsrs	r3, r0, #4
 80001cc:	428b      	cmp	r3, r1
 80001ce:	d301      	bcc.n	80001d4 <__udivsi3+0xcc>
 80001d0:	010b      	lsls	r3, r1, #4
 80001d2:	1ac0      	subs	r0, r0, r3
 80001d4:	4152      	adcs	r2, r2
 80001d6:	08c3      	lsrs	r3, r0, #3
 80001d8:	428b      	cmp	r3, r1
 80001da:	d301      	bcc.n	80001e0 <__udivsi3+0xd8>
 80001dc:	00cb      	lsls	r3, r1, #3
 80001de:	1ac0      	subs	r0, r0, r3
 80001e0:	4152      	adcs	r2, r2
 80001e2:	0883      	lsrs	r3, r0, #2
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d301      	bcc.n	80001ec <__udivsi3+0xe4>
 80001e8:	008b      	lsls	r3, r1, #2
 80001ea:	1ac0      	subs	r0, r0, r3
 80001ec:	4152      	adcs	r2, r2
 80001ee:	0843      	lsrs	r3, r0, #1
 80001f0:	428b      	cmp	r3, r1
 80001f2:	d301      	bcc.n	80001f8 <__udivsi3+0xf0>
 80001f4:	004b      	lsls	r3, r1, #1
 80001f6:	1ac0      	subs	r0, r0, r3
 80001f8:	4152      	adcs	r2, r2
 80001fa:	1a41      	subs	r1, r0, r1
 80001fc:	d200      	bcs.n	8000200 <__udivsi3+0xf8>
 80001fe:	4601      	mov	r1, r0
 8000200:	4152      	adcs	r2, r2
 8000202:	4610      	mov	r0, r2
 8000204:	4770      	bx	lr
 8000206:	e7ff      	b.n	8000208 <__udivsi3+0x100>
 8000208:	b501      	push	{r0, lr}
 800020a:	2000      	movs	r0, #0
 800020c:	f000 f806 	bl	800021c <__aeabi_idiv0>
 8000210:	bd02      	pop	{r1, pc}
 8000212:	46c0      	nop			; (mov r8, r8)

08000214 <__aeabi_uidivmod>:
 8000214:	2900      	cmp	r1, #0
 8000216:	d0f7      	beq.n	8000208 <__udivsi3+0x100>
 8000218:	e776      	b.n	8000108 <__udivsi3>
 800021a:	4770      	bx	lr

0800021c <__aeabi_idiv0>:
 800021c:	4770      	bx	lr
 800021e:	46c0      	nop			; (mov r8, r8)

08000220 <ADC_Init>:
 8000220:	b580      	push	{r7, lr}
 8000222:	af00      	add	r7, sp, #0
 8000224:	f000 f94e 	bl	80004c4 <CLK_EnableADCCLK>
 8000228:	4b29      	ldr	r3, [pc, #164]	; (80002d0 <ADC_Init+0xb0>)
 800022a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800022c:	4b28      	ldr	r3, [pc, #160]	; (80002d0 <ADC_Init+0xb0>)
 800022e:	2180      	movs	r1, #128	; 0x80
 8000230:	0089      	lsls	r1, r1, #2
 8000232:	430a      	orrs	r2, r1
 8000234:	635a      	str	r2, [r3, #52]	; 0x34
 8000236:	4b27      	ldr	r3, [pc, #156]	; (80002d4 <ADC_Init+0xb4>)
 8000238:	4a27      	ldr	r2, [pc, #156]	; (80002d8 <ADC_Init+0xb8>)
 800023a:	601a      	str	r2, [r3, #0]
 800023c:	4b25      	ldr	r3, [pc, #148]	; (80002d4 <ADC_Init+0xb4>)
 800023e:	2280      	movs	r2, #128	; 0x80
 8000240:	0312      	lsls	r2, r2, #12
 8000242:	605a      	str	r2, [r3, #4]
 8000244:	4b23      	ldr	r3, [pc, #140]	; (80002d4 <ADC_Init+0xb4>)
 8000246:	2200      	movs	r2, #0
 8000248:	609a      	str	r2, [r3, #8]
 800024a:	4b22      	ldr	r3, [pc, #136]	; (80002d4 <ADC_Init+0xb4>)
 800024c:	2200      	movs	r2, #0
 800024e:	60da      	str	r2, [r3, #12]
 8000250:	4b20      	ldr	r3, [pc, #128]	; (80002d4 <ADC_Init+0xb4>)
 8000252:	2201      	movs	r2, #1
 8000254:	611a      	str	r2, [r3, #16]
 8000256:	4b1f      	ldr	r3, [pc, #124]	; (80002d4 <ADC_Init+0xb4>)
 8000258:	2204      	movs	r2, #4
 800025a:	615a      	str	r2, [r3, #20]
 800025c:	4b1d      	ldr	r3, [pc, #116]	; (80002d4 <ADC_Init+0xb4>)
 800025e:	2200      	movs	r2, #0
 8000260:	619a      	str	r2, [r3, #24]
 8000262:	4b1c      	ldr	r3, [pc, #112]	; (80002d4 <ADC_Init+0xb4>)
 8000264:	2200      	movs	r2, #0
 8000266:	61da      	str	r2, [r3, #28]
 8000268:	4b1a      	ldr	r3, [pc, #104]	; (80002d4 <ADC_Init+0xb4>)
 800026a:	2220      	movs	r2, #32
 800026c:	2100      	movs	r1, #0
 800026e:	5499      	strb	r1, [r3, r2]
 8000270:	4b18      	ldr	r3, [pc, #96]	; (80002d4 <ADC_Init+0xb4>)
 8000272:	2221      	movs	r2, #33	; 0x21
 8000274:	2100      	movs	r1, #0
 8000276:	5499      	strb	r1, [r3, r2]
 8000278:	4b16      	ldr	r3, [pc, #88]	; (80002d4 <ADC_Init+0xb4>)
 800027a:	22c2      	movs	r2, #194	; 0xc2
 800027c:	32ff      	adds	r2, #255	; 0xff
 800027e:	625a      	str	r2, [r3, #36]	; 0x24
 8000280:	4b14      	ldr	r3, [pc, #80]	; (80002d4 <ADC_Init+0xb4>)
 8000282:	2200      	movs	r2, #0
 8000284:	629a      	str	r2, [r3, #40]	; 0x28
 8000286:	4b13      	ldr	r3, [pc, #76]	; (80002d4 <ADC_Init+0xb4>)
 8000288:	222c      	movs	r2, #44	; 0x2c
 800028a:	2100      	movs	r1, #0
 800028c:	5499      	strb	r1, [r3, r2]
 800028e:	4b11      	ldr	r3, [pc, #68]	; (80002d4 <ADC_Init+0xb4>)
 8000290:	2200      	movs	r2, #0
 8000292:	631a      	str	r2, [r3, #48]	; 0x30
 8000294:	4b0f      	ldr	r3, [pc, #60]	; (80002d4 <ADC_Init+0xb4>)
 8000296:	2200      	movs	r2, #0
 8000298:	635a      	str	r2, [r3, #52]	; 0x34
 800029a:	4b0e      	ldr	r3, [pc, #56]	; (80002d4 <ADC_Init+0xb4>)
 800029c:	2200      	movs	r2, #0
 800029e:	63da      	str	r2, [r3, #60]	; 0x3c
 80002a0:	4b0c      	ldr	r3, [pc, #48]	; (80002d4 <ADC_Init+0xb4>)
 80002a2:	2206      	movs	r2, #6
 80002a4:	639a      	str	r2, [r3, #56]	; 0x38
 80002a6:	4b0b      	ldr	r3, [pc, #44]	; (80002d4 <ADC_Init+0xb4>)
 80002a8:	0018      	movs	r0, r3
 80002aa:	f001 fc1b 	bl	8001ae4 <HAL_ADC_Init>
 80002ae:	f000 f875 	bl	800039c <ADC_Calibrate>
 80002b2:	4b08      	ldr	r3, [pc, #32]	; (80002d4 <ADC_Init+0xb4>)
 80002b4:	681b      	ldr	r3, [r3, #0]
 80002b6:	689a      	ldr	r2, [r3, #8]
 80002b8:	4b06      	ldr	r3, [pc, #24]	; (80002d4 <ADC_Init+0xb4>)
 80002ba:	681b      	ldr	r3, [r3, #0]
 80002bc:	2101      	movs	r1, #1
 80002be:	430a      	orrs	r2, r1
 80002c0:	609a      	str	r2, [r3, #8]
 80002c2:	2001      	movs	r0, #1
 80002c4:	f000 f858 	bl	8000378 <ADC_WaitForFlag>
 80002c8:	46c0      	nop			; (mov r8, r8)
 80002ca:	46bd      	mov	sp, r7
 80002cc:	bd80      	pop	{r7, pc}
 80002ce:	46c0      	nop			; (mov r8, r8)
 80002d0:	40021000 	.word	0x40021000
 80002d4:	20000090 	.word	0x20000090
 80002d8:	40012400 	.word	0x40012400

080002dc <ADC_Read>:
 80002dc:	b580      	push	{r7, lr}
 80002de:	b082      	sub	sp, #8
 80002e0:	af00      	add	r7, sp, #0
 80002e2:	6078      	str	r0, [r7, #4]
 80002e4:	4b0d      	ldr	r3, [pc, #52]	; (800031c <ADC_Read+0x40>)
 80002e6:	681b      	ldr	r3, [r3, #0]
 80002e8:	687a      	ldr	r2, [r7, #4]
 80002ea:	0352      	lsls	r2, r2, #13
 80002ec:	0b52      	lsrs	r2, r2, #13
 80002ee:	629a      	str	r2, [r3, #40]	; 0x28
 80002f0:	4b0a      	ldr	r3, [pc, #40]	; (800031c <ADC_Read+0x40>)
 80002f2:	681b      	ldr	r3, [r3, #0]
 80002f4:	221c      	movs	r2, #28
 80002f6:	601a      	str	r2, [r3, #0]
 80002f8:	4b08      	ldr	r3, [pc, #32]	; (800031c <ADC_Read+0x40>)
 80002fa:	681b      	ldr	r3, [r3, #0]
 80002fc:	689a      	ldr	r2, [r3, #8]
 80002fe:	4b07      	ldr	r3, [pc, #28]	; (800031c <ADC_Read+0x40>)
 8000300:	681b      	ldr	r3, [r3, #0]
 8000302:	2104      	movs	r1, #4
 8000304:	430a      	orrs	r2, r1
 8000306:	609a      	str	r2, [r3, #8]
 8000308:	2004      	movs	r0, #4
 800030a:	f000 f835 	bl	8000378 <ADC_WaitForFlag>
 800030e:	4b03      	ldr	r3, [pc, #12]	; (800031c <ADC_Read+0x40>)
 8000310:	681b      	ldr	r3, [r3, #0]
 8000312:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000314:	0018      	movs	r0, r3
 8000316:	46bd      	mov	sp, r7
 8000318:	b002      	add	sp, #8
 800031a:	bd80      	pop	{r7, pc}
 800031c:	20000090 	.word	0x20000090

08000320 <AIN_AinToDivider>:
 8000320:	b580      	push	{r7, lr}
 8000322:	b084      	sub	sp, #16
 8000324:	af00      	add	r7, sp, #0
 8000326:	60f8      	str	r0, [r7, #12]
 8000328:	60b9      	str	r1, [r7, #8]
 800032a:	607a      	str	r2, [r7, #4]
 800032c:	68fb      	ldr	r3, [r7, #12]
 800032e:	0018      	movs	r0, r3
 8000330:	f000 f80e 	bl	8000350 <AIN_AinToMv>
 8000334:	0001      	movs	r1, r0
 8000336:	687a      	ldr	r2, [r7, #4]
 8000338:	68bb      	ldr	r3, [r7, #8]
 800033a:	18d3      	adds	r3, r2, r3
 800033c:	434b      	muls	r3, r1
 800033e:	68b9      	ldr	r1, [r7, #8]
 8000340:	0018      	movs	r0, r3
 8000342:	f7ff fee1 	bl	8000108 <__udivsi3>
 8000346:	0003      	movs	r3, r0
 8000348:	0018      	movs	r0, r3
 800034a:	46bd      	mov	sp, r7
 800034c:	b004      	add	sp, #16
 800034e:	bd80      	pop	{r7, pc}

08000350 <AIN_AinToMv>:
 8000350:	b580      	push	{r7, lr}
 8000352:	b082      	sub	sp, #8
 8000354:	af00      	add	r7, sp, #0
 8000356:	6078      	str	r0, [r7, #4]
 8000358:	687b      	ldr	r3, [r7, #4]
 800035a:	4a05      	ldr	r2, [pc, #20]	; (8000370 <AIN_AinToMv+0x20>)
 800035c:	4353      	muls	r3, r2
 800035e:	4905      	ldr	r1, [pc, #20]	; (8000374 <AIN_AinToMv+0x24>)
 8000360:	0018      	movs	r0, r3
 8000362:	f7ff fed1 	bl	8000108 <__udivsi3>
 8000366:	0003      	movs	r3, r0
 8000368:	0018      	movs	r0, r3
 800036a:	46bd      	mov	sp, r7
 800036c:	b002      	add	sp, #8
 800036e:	bd80      	pop	{r7, pc}
 8000370:	00000ce4 	.word	0x00000ce4
 8000374:	00000fff 	.word	0x00000fff

08000378 <ADC_WaitForFlag>:
 8000378:	b580      	push	{r7, lr}
 800037a:	b082      	sub	sp, #8
 800037c:	af00      	add	r7, sp, #0
 800037e:	6078      	str	r0, [r7, #4]
 8000380:	46c0      	nop			; (mov r8, r8)
 8000382:	4b05      	ldr	r3, [pc, #20]	; (8000398 <ADC_WaitForFlag+0x20>)
 8000384:	681b      	ldr	r3, [r3, #0]
 8000386:	681b      	ldr	r3, [r3, #0]
 8000388:	687a      	ldr	r2, [r7, #4]
 800038a:	4013      	ands	r3, r2
 800038c:	d0f9      	beq.n	8000382 <ADC_WaitForFlag+0xa>
 800038e:	46c0      	nop			; (mov r8, r8)
 8000390:	46c0      	nop			; (mov r8, r8)
 8000392:	46bd      	mov	sp, r7
 8000394:	b002      	add	sp, #8
 8000396:	bd80      	pop	{r7, pc}
 8000398:	20000090 	.word	0x20000090

0800039c <ADC_Calibrate>:
 800039c:	b580      	push	{r7, lr}
 800039e:	af00      	add	r7, sp, #0
 80003a0:	4b09      	ldr	r3, [pc, #36]	; (80003c8 <ADC_Calibrate+0x2c>)
 80003a2:	681b      	ldr	r3, [r3, #0]
 80003a4:	689a      	ldr	r2, [r3, #8]
 80003a6:	4b08      	ldr	r3, [pc, #32]	; (80003c8 <ADC_Calibrate+0x2c>)
 80003a8:	681b      	ldr	r3, [r3, #0]
 80003aa:	2180      	movs	r1, #128	; 0x80
 80003ac:	0609      	lsls	r1, r1, #24
 80003ae:	430a      	orrs	r2, r1
 80003b0:	609a      	str	r2, [r3, #8]
 80003b2:	46c0      	nop			; (mov r8, r8)
 80003b4:	4b04      	ldr	r3, [pc, #16]	; (80003c8 <ADC_Calibrate+0x2c>)
 80003b6:	681b      	ldr	r3, [r3, #0]
 80003b8:	689b      	ldr	r3, [r3, #8]
 80003ba:	2b00      	cmp	r3, #0
 80003bc:	dbfa      	blt.n	80003b4 <ADC_Calibrate+0x18>
 80003be:	46c0      	nop			; (mov r8, r8)
 80003c0:	46c0      	nop			; (mov r8, r8)
 80003c2:	46bd      	mov	sp, r7
 80003c4:	bd80      	pop	{r7, pc}
 80003c6:	46c0      	nop			; (mov r8, r8)
 80003c8:	20000090 	.word	0x20000090

080003cc <CLK_InitSYSCLK>:
 80003cc:	b580      	push	{r7, lr}
 80003ce:	af00      	add	r7, sp, #0
 80003d0:	4b34      	ldr	r3, [pc, #208]	; (80004a4 <CLK_InitSYSCLK+0xd8>)
 80003d2:	681a      	ldr	r2, [r3, #0]
 80003d4:	4b33      	ldr	r3, [pc, #204]	; (80004a4 <CLK_InitSYSCLK+0xd8>)
 80003d6:	2101      	movs	r1, #1
 80003d8:	430a      	orrs	r2, r1
 80003da:	601a      	str	r2, [r3, #0]
 80003dc:	4b32      	ldr	r3, [pc, #200]	; (80004a8 <CLK_InitSYSCLK+0xdc>)
 80003de:	685b      	ldr	r3, [r3, #4]
 80003e0:	4a32      	ldr	r2, [pc, #200]	; (80004ac <CLK_InitSYSCLK+0xe0>)
 80003e2:	401a      	ands	r2, r3
 80003e4:	4b30      	ldr	r3, [pc, #192]	; (80004a8 <CLK_InitSYSCLK+0xdc>)
 80003e6:	2180      	movs	r1, #128	; 0x80
 80003e8:	0149      	lsls	r1, r1, #5
 80003ea:	430a      	orrs	r2, r1
 80003ec:	605a      	str	r2, [r3, #4]
 80003ee:	4b2e      	ldr	r3, [pc, #184]	; (80004a8 <CLK_InitSYSCLK+0xdc>)
 80003f0:	681b      	ldr	r3, [r3, #0]
 80003f2:	2209      	movs	r2, #9
 80003f4:	4393      	bics	r3, r2
 80003f6:	001a      	movs	r2, r3
 80003f8:	4b2b      	ldr	r3, [pc, #172]	; (80004a8 <CLK_InitSYSCLK+0xdc>)
 80003fa:	2101      	movs	r1, #1
 80003fc:	430a      	orrs	r2, r1
 80003fe:	601a      	str	r2, [r3, #0]
 8000400:	46c0      	nop			; (mov r8, r8)
 8000402:	4b29      	ldr	r3, [pc, #164]	; (80004a8 <CLK_InitSYSCLK+0xdc>)
 8000404:	681b      	ldr	r3, [r3, #0]
 8000406:	2204      	movs	r2, #4
 8000408:	4013      	ands	r3, r2
 800040a:	d0fa      	beq.n	8000402 <CLK_InitSYSCLK+0x36>
 800040c:	4b26      	ldr	r3, [pc, #152]	; (80004a8 <CLK_InitSYSCLK+0xdc>)
 800040e:	681a      	ldr	r2, [r3, #0]
 8000410:	4b25      	ldr	r3, [pc, #148]	; (80004a8 <CLK_InitSYSCLK+0xdc>)
 8000412:	4927      	ldr	r1, [pc, #156]	; (80004b0 <CLK_InitSYSCLK+0xe4>)
 8000414:	400a      	ands	r2, r1
 8000416:	601a      	str	r2, [r3, #0]
 8000418:	46c0      	nop			; (mov r8, r8)
 800041a:	4b23      	ldr	r3, [pc, #140]	; (80004a8 <CLK_InitSYSCLK+0xdc>)
 800041c:	681a      	ldr	r2, [r3, #0]
 800041e:	2380      	movs	r3, #128	; 0x80
 8000420:	049b      	lsls	r3, r3, #18
 8000422:	4013      	ands	r3, r2
 8000424:	d1f9      	bne.n	800041a <CLK_InitSYSCLK+0x4e>
 8000426:	4b20      	ldr	r3, [pc, #128]	; (80004a8 <CLK_InitSYSCLK+0xdc>)
 8000428:	68db      	ldr	r3, [r3, #12]
 800042a:	4a22      	ldr	r2, [pc, #136]	; (80004b4 <CLK_InitSYSCLK+0xe8>)
 800042c:	401a      	ands	r2, r3
 800042e:	4b1e      	ldr	r3, [pc, #120]	; (80004a8 <CLK_InitSYSCLK+0xdc>)
 8000430:	2188      	movs	r1, #136	; 0x88
 8000432:	03c9      	lsls	r1, r1, #15
 8000434:	430a      	orrs	r2, r1
 8000436:	60da      	str	r2, [r3, #12]
 8000438:	4b1b      	ldr	r3, [pc, #108]	; (80004a8 <CLK_InitSYSCLK+0xdc>)
 800043a:	681a      	ldr	r2, [r3, #0]
 800043c:	4b1a      	ldr	r3, [pc, #104]	; (80004a8 <CLK_InitSYSCLK+0xdc>)
 800043e:	2180      	movs	r1, #128	; 0x80
 8000440:	0449      	lsls	r1, r1, #17
 8000442:	430a      	orrs	r2, r1
 8000444:	601a      	str	r2, [r3, #0]
 8000446:	46c0      	nop			; (mov r8, r8)
 8000448:	4b17      	ldr	r3, [pc, #92]	; (80004a8 <CLK_InitSYSCLK+0xdc>)
 800044a:	681a      	ldr	r2, [r3, #0]
 800044c:	2380      	movs	r3, #128	; 0x80
 800044e:	049b      	lsls	r3, r3, #18
 8000450:	4013      	ands	r3, r2
 8000452:	d0f9      	beq.n	8000448 <CLK_InitSYSCLK+0x7c>
 8000454:	4b14      	ldr	r3, [pc, #80]	; (80004a8 <CLK_InitSYSCLK+0xdc>)
 8000456:	68da      	ldr	r2, [r3, #12]
 8000458:	4b13      	ldr	r3, [pc, #76]	; (80004a8 <CLK_InitSYSCLK+0xdc>)
 800045a:	21f0      	movs	r1, #240	; 0xf0
 800045c:	438a      	bics	r2, r1
 800045e:	60da      	str	r2, [r3, #12]
 8000460:	4b11      	ldr	r3, [pc, #68]	; (80004a8 <CLK_InitSYSCLK+0xdc>)
 8000462:	68da      	ldr	r2, [r3, #12]
 8000464:	4b10      	ldr	r3, [pc, #64]	; (80004a8 <CLK_InitSYSCLK+0xdc>)
 8000466:	2103      	movs	r1, #3
 8000468:	430a      	orrs	r2, r1
 800046a:	60da      	str	r2, [r3, #12]
 800046c:	46c0      	nop			; (mov r8, r8)
 800046e:	4b0e      	ldr	r3, [pc, #56]	; (80004a8 <CLK_InitSYSCLK+0xdc>)
 8000470:	68db      	ldr	r3, [r3, #12]
 8000472:	220c      	movs	r2, #12
 8000474:	4013      	ands	r3, r2
 8000476:	2b0c      	cmp	r3, #12
 8000478:	d1f9      	bne.n	800046e <CLK_InitSYSCLK+0xa2>
 800047a:	4b0b      	ldr	r3, [pc, #44]	; (80004a8 <CLK_InitSYSCLK+0xdc>)
 800047c:	68da      	ldr	r2, [r3, #12]
 800047e:	4b0a      	ldr	r3, [pc, #40]	; (80004a8 <CLK_InitSYSCLK+0xdc>)
 8000480:	490d      	ldr	r1, [pc, #52]	; (80004b8 <CLK_InitSYSCLK+0xec>)
 8000482:	400a      	ands	r2, r1
 8000484:	60da      	str	r2, [r3, #12]
 8000486:	4b08      	ldr	r3, [pc, #32]	; (80004a8 <CLK_InitSYSCLK+0xdc>)
 8000488:	68da      	ldr	r2, [r3, #12]
 800048a:	4b07      	ldr	r3, [pc, #28]	; (80004a8 <CLK_InitSYSCLK+0xdc>)
 800048c:	490b      	ldr	r1, [pc, #44]	; (80004bc <CLK_InitSYSCLK+0xf0>)
 800048e:	400a      	ands	r2, r1
 8000490:	60da      	str	r2, [r3, #12]
 8000492:	4b05      	ldr	r3, [pc, #20]	; (80004a8 <CLK_InitSYSCLK+0xdc>)
 8000494:	681a      	ldr	r2, [r3, #0]
 8000496:	4b04      	ldr	r3, [pc, #16]	; (80004a8 <CLK_InitSYSCLK+0xdc>)
 8000498:	4909      	ldr	r1, [pc, #36]	; (80004c0 <CLK_InitSYSCLK+0xf4>)
 800049a:	400a      	ands	r2, r1
 800049c:	601a      	str	r2, [r3, #0]
 800049e:	46c0      	nop			; (mov r8, r8)
 80004a0:	46bd      	mov	sp, r7
 80004a2:	bd80      	pop	{r7, pc}
 80004a4:	40022000 	.word	0x40022000
 80004a8:	40021000 	.word	0x40021000
 80004ac:	ffffe0ff 	.word	0xffffe0ff
 80004b0:	feffffff 	.word	0xfeffffff
 80004b4:	ff02ffff 	.word	0xff02ffff
 80004b8:	fffff8ff 	.word	0xfffff8ff
 80004bc:	ffffc7ff 	.word	0xffffc7ff
 80004c0:	fffffeff 	.word	0xfffffeff

080004c4 <CLK_EnableADCCLK>:
 80004c4:	b580      	push	{r7, lr}
 80004c6:	af00      	add	r7, sp, #0
 80004c8:	46c0      	nop			; (mov r8, r8)
 80004ca:	46bd      	mov	sp, r7
 80004cc:	bd80      	pop	{r7, pc}
	...

080004d0 <CORE_GetTick>:
 80004d0:	b580      	push	{r7, lr}
 80004d2:	af00      	add	r7, sp, #0
 80004d4:	4b02      	ldr	r3, [pc, #8]	; (80004e0 <CORE_GetTick+0x10>)
 80004d6:	681b      	ldr	r3, [r3, #0]
 80004d8:	0018      	movs	r0, r3
 80004da:	46bd      	mov	sp, r7
 80004dc:	bd80      	pop	{r7, pc}
 80004de:	46c0      	nop			; (mov r8, r8)
 80004e0:	200000ec 	.word	0x200000ec

080004e4 <GPIO_Deinit>:
 80004e4:	b580      	push	{r7, lr}
 80004e6:	b082      	sub	sp, #8
 80004e8:	af00      	add	r7, sp, #0
 80004ea:	6078      	str	r0, [r7, #4]
 80004ec:	6039      	str	r1, [r7, #0]
 80004ee:	6839      	ldr	r1, [r7, #0]
 80004f0:	687b      	ldr	r3, [r7, #4]
 80004f2:	2203      	movs	r2, #3
 80004f4:	0018      	movs	r0, r3
 80004f6:	f000 f931 	bl	800075c <GPIO_Init>
 80004fa:	46c0      	nop			; (mov r8, r8)
 80004fc:	46bd      	mov	sp, r7
 80004fe:	b002      	add	sp, #8
 8000500:	bd80      	pop	{r7, pc}
	...

08000504 <CLK_GetHCLKFreq>:
 8000504:	b580      	push	{r7, lr}
 8000506:	af00      	add	r7, sp, #0
 8000508:	4b01      	ldr	r3, [pc, #4]	; (8000510 <CLK_GetHCLKFreq+0xc>)
 800050a:	0018      	movs	r0, r3
 800050c:	46bd      	mov	sp, r7
 800050e:	bd80      	pop	{r7, pc}
 8000510:	01e84800 	.word	0x01e84800

08000514 <CORE_Init>:
 8000514:	b580      	push	{r7, lr}
 8000516:	af00      	add	r7, sp, #0
 8000518:	4b15      	ldr	r3, [pc, #84]	; (8000570 <CORE_Init+0x5c>)
 800051a:	681a      	ldr	r2, [r3, #0]
 800051c:	4b14      	ldr	r3, [pc, #80]	; (8000570 <CORE_Init+0x5c>)
 800051e:	2140      	movs	r1, #64	; 0x40
 8000520:	430a      	orrs	r2, r1
 8000522:	601a      	str	r2, [r3, #0]
 8000524:	4b13      	ldr	r3, [pc, #76]	; (8000574 <CORE_Init+0x60>)
 8000526:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000528:	4b12      	ldr	r3, [pc, #72]	; (8000574 <CORE_Init+0x60>)
 800052a:	2101      	movs	r1, #1
 800052c:	430a      	orrs	r2, r1
 800052e:	635a      	str	r2, [r3, #52]	; 0x34
 8000530:	4b10      	ldr	r3, [pc, #64]	; (8000574 <CORE_Init+0x60>)
 8000532:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8000534:	4b0f      	ldr	r3, [pc, #60]	; (8000574 <CORE_Init+0x60>)
 8000536:	2180      	movs	r1, #128	; 0x80
 8000538:	0549      	lsls	r1, r1, #21
 800053a:	430a      	orrs	r2, r1
 800053c:	639a      	str	r2, [r3, #56]	; 0x38
 800053e:	4b0e      	ldr	r3, [pc, #56]	; (8000578 <CORE_Init+0x64>)
 8000540:	681a      	ldr	r2, [r3, #0]
 8000542:	4b0d      	ldr	r3, [pc, #52]	; (8000578 <CORE_Init+0x64>)
 8000544:	21c0      	movs	r1, #192	; 0xc0
 8000546:	00c9      	lsls	r1, r1, #3
 8000548:	430a      	orrs	r2, r1
 800054a:	601a      	str	r2, [r3, #0]
 800054c:	4b0a      	ldr	r3, [pc, #40]	; (8000578 <CORE_Init+0x64>)
 800054e:	681b      	ldr	r3, [r3, #0]
 8000550:	4a0a      	ldr	r2, [pc, #40]	; (800057c <CORE_Init+0x68>)
 8000552:	401a      	ands	r2, r3
 8000554:	4b08      	ldr	r3, [pc, #32]	; (8000578 <CORE_Init+0x64>)
 8000556:	2180      	movs	r1, #128	; 0x80
 8000558:	0109      	lsls	r1, r1, #4
 800055a:	430a      	orrs	r2, r1
 800055c:	601a      	str	r2, [r3, #0]
 800055e:	f7ff ff35 	bl	80003cc <CLK_InitSYSCLK>
 8000562:	f000 f82e 	bl	80005c2 <CORE_InitSysTick>
 8000566:	f000 f845 	bl	80005f4 <CORE_InitGPIO>
 800056a:	46c0      	nop			; (mov r8, r8)
 800056c:	46bd      	mov	sp, r7
 800056e:	bd80      	pop	{r7, pc}
 8000570:	40022000 	.word	0x40022000
 8000574:	40021000 	.word	0x40021000
 8000578:	40007000 	.word	0x40007000
 800057c:	ffffe7ff 	.word	0xffffe7ff

08000580 <CORE_Idle>:
 8000580:	b580      	push	{r7, lr}
 8000582:	af00      	add	r7, sp, #0
 8000584:	bf30      	wfi
 8000586:	46c0      	nop			; (mov r8, r8)
 8000588:	46bd      	mov	sp, r7
 800058a:	bd80      	pop	{r7, pc}

0800058c <CORE_Delay>:
 800058c:	b580      	push	{r7, lr}
 800058e:	b084      	sub	sp, #16
 8000590:	af00      	add	r7, sp, #0
 8000592:	6078      	str	r0, [r7, #4]
 8000594:	687b      	ldr	r3, [r7, #4]
 8000596:	3301      	adds	r3, #1
 8000598:	607b      	str	r3, [r7, #4]
 800059a:	f7ff ff99 	bl	80004d0 <CORE_GetTick>
 800059e:	0003      	movs	r3, r0
 80005a0:	60fb      	str	r3, [r7, #12]
 80005a2:	e001      	b.n	80005a8 <CORE_Delay+0x1c>
 80005a4:	f7ff ffec 	bl	8000580 <CORE_Idle>
 80005a8:	f7ff ff92 	bl	80004d0 <CORE_GetTick>
 80005ac:	0002      	movs	r2, r0
 80005ae:	68fb      	ldr	r3, [r7, #12]
 80005b0:	1ad3      	subs	r3, r2, r3
 80005b2:	687a      	ldr	r2, [r7, #4]
 80005b4:	429a      	cmp	r2, r3
 80005b6:	d8f5      	bhi.n	80005a4 <CORE_Delay+0x18>
 80005b8:	46c0      	nop			; (mov r8, r8)
 80005ba:	46c0      	nop			; (mov r8, r8)
 80005bc:	46bd      	mov	sp, r7
 80005be:	b004      	add	sp, #16
 80005c0:	bd80      	pop	{r7, pc}

080005c2 <CORE_InitSysTick>:
 80005c2:	b580      	push	{r7, lr}
 80005c4:	af00      	add	r7, sp, #0
 80005c6:	f7ff ff9d 	bl	8000504 <CLK_GetHCLKFreq>
 80005ca:	0002      	movs	r2, r0
 80005cc:	23fa      	movs	r3, #250	; 0xfa
 80005ce:	0099      	lsls	r1, r3, #2
 80005d0:	0010      	movs	r0, r2
 80005d2:	f7ff fd99 	bl	8000108 <__udivsi3>
 80005d6:	0003      	movs	r3, r0
 80005d8:	0018      	movs	r0, r3
 80005da:	f001 fd02 	bl	8001fe2 <HAL_SYSTICK_Config>
 80005de:	2301      	movs	r3, #1
 80005e0:	425b      	negs	r3, r3
 80005e2:	2200      	movs	r2, #0
 80005e4:	2100      	movs	r1, #0
 80005e6:	0018      	movs	r0, r3
 80005e8:	f001 fcc6 	bl	8001f78 <HAL_NVIC_SetPriority>
 80005ec:	46c0      	nop			; (mov r8, r8)
 80005ee:	46bd      	mov	sp, r7
 80005f0:	bd80      	pop	{r7, pc}
	...

080005f4 <CORE_InitGPIO>:
 80005f4:	b580      	push	{r7, lr}
 80005f6:	b084      	sub	sp, #16
 80005f8:	af00      	add	r7, sp, #0
 80005fa:	4b1d      	ldr	r3, [pc, #116]	; (8000670 <CORE_InitGPIO+0x7c>)
 80005fc:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80005fe:	4b1c      	ldr	r3, [pc, #112]	; (8000670 <CORE_InitGPIO+0x7c>)
 8000600:	2101      	movs	r1, #1
 8000602:	430a      	orrs	r2, r1
 8000604:	62da      	str	r2, [r3, #44]	; 0x2c
 8000606:	4b1a      	ldr	r3, [pc, #104]	; (8000670 <CORE_InitGPIO+0x7c>)
 8000608:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800060a:	2201      	movs	r2, #1
 800060c:	4013      	ands	r3, r2
 800060e:	60fb      	str	r3, [r7, #12]
 8000610:	68fb      	ldr	r3, [r7, #12]
 8000612:	4a18      	ldr	r2, [pc, #96]	; (8000674 <CORE_InitGPIO+0x80>)
 8000614:	23a0      	movs	r3, #160	; 0xa0
 8000616:	05db      	lsls	r3, r3, #23
 8000618:	0011      	movs	r1, r2
 800061a:	0018      	movs	r0, r3
 800061c:	f7ff ff62 	bl	80004e4 <GPIO_Deinit>
 8000620:	4b13      	ldr	r3, [pc, #76]	; (8000670 <CORE_InitGPIO+0x7c>)
 8000622:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8000624:	4b12      	ldr	r3, [pc, #72]	; (8000670 <CORE_InitGPIO+0x7c>)
 8000626:	2102      	movs	r1, #2
 8000628:	430a      	orrs	r2, r1
 800062a:	62da      	str	r2, [r3, #44]	; 0x2c
 800062c:	4b10      	ldr	r3, [pc, #64]	; (8000670 <CORE_InitGPIO+0x7c>)
 800062e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8000630:	2202      	movs	r2, #2
 8000632:	4013      	ands	r3, r2
 8000634:	60bb      	str	r3, [r7, #8]
 8000636:	68bb      	ldr	r3, [r7, #8]
 8000638:	4a0f      	ldr	r2, [pc, #60]	; (8000678 <CORE_InitGPIO+0x84>)
 800063a:	4b10      	ldr	r3, [pc, #64]	; (800067c <CORE_InitGPIO+0x88>)
 800063c:	0011      	movs	r1, r2
 800063e:	0018      	movs	r0, r3
 8000640:	f7ff ff50 	bl	80004e4 <GPIO_Deinit>
 8000644:	4b0a      	ldr	r3, [pc, #40]	; (8000670 <CORE_InitGPIO+0x7c>)
 8000646:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8000648:	4b09      	ldr	r3, [pc, #36]	; (8000670 <CORE_InitGPIO+0x7c>)
 800064a:	2104      	movs	r1, #4
 800064c:	430a      	orrs	r2, r1
 800064e:	62da      	str	r2, [r3, #44]	; 0x2c
 8000650:	4b07      	ldr	r3, [pc, #28]	; (8000670 <CORE_InitGPIO+0x7c>)
 8000652:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8000654:	2204      	movs	r2, #4
 8000656:	4013      	ands	r3, r2
 8000658:	607b      	str	r3, [r7, #4]
 800065a:	687b      	ldr	r3, [r7, #4]
 800065c:	4a06      	ldr	r2, [pc, #24]	; (8000678 <CORE_InitGPIO+0x84>)
 800065e:	4b08      	ldr	r3, [pc, #32]	; (8000680 <CORE_InitGPIO+0x8c>)
 8000660:	0011      	movs	r1, r2
 8000662:	0018      	movs	r0, r3
 8000664:	f7ff ff3e 	bl	80004e4 <GPIO_Deinit>
 8000668:	46c0      	nop			; (mov r8, r8)
 800066a:	46bd      	mov	sp, r7
 800066c:	b004      	add	sp, #16
 800066e:	bd80      	pop	{r7, pc}
 8000670:	40021000 	.word	0x40021000
 8000674:	00009fff 	.word	0x00009fff
 8000678:	0000ffff 	.word	0x0000ffff
 800067c:	50000400 	.word	0x50000400
 8000680:	50000800 	.word	0x50000800

08000684 <SysTick_Handler>:
 8000684:	b580      	push	{r7, lr}
 8000686:	af00      	add	r7, sp, #0
 8000688:	4b03      	ldr	r3, [pc, #12]	; (8000698 <SysTick_Handler+0x14>)
 800068a:	681b      	ldr	r3, [r3, #0]
 800068c:	1c5a      	adds	r2, r3, #1
 800068e:	4b02      	ldr	r3, [pc, #8]	; (8000698 <SysTick_Handler+0x14>)
 8000690:	601a      	str	r2, [r3, #0]
 8000692:	46c0      	nop			; (mov r8, r8)
 8000694:	46bd      	mov	sp, r7
 8000696:	bd80      	pop	{r7, pc}
 8000698:	200000ec 	.word	0x200000ec

0800069c <GPIO_Set>:
 800069c:	b580      	push	{r7, lr}
 800069e:	b082      	sub	sp, #8
 80006a0:	af00      	add	r7, sp, #0
 80006a2:	6078      	str	r0, [r7, #4]
 80006a4:	6039      	str	r1, [r7, #0]
 80006a6:	687b      	ldr	r3, [r7, #4]
 80006a8:	683a      	ldr	r2, [r7, #0]
 80006aa:	619a      	str	r2, [r3, #24]
 80006ac:	46c0      	nop			; (mov r8, r8)
 80006ae:	46bd      	mov	sp, r7
 80006b0:	b002      	add	sp, #8
 80006b2:	bd80      	pop	{r7, pc}

080006b4 <GPIO_Reset>:
 80006b4:	b580      	push	{r7, lr}
 80006b6:	b082      	sub	sp, #8
 80006b8:	af00      	add	r7, sp, #0
 80006ba:	6078      	str	r0, [r7, #4]
 80006bc:	6039      	str	r1, [r7, #0]
 80006be:	687b      	ldr	r3, [r7, #4]
 80006c0:	683a      	ldr	r2, [r7, #0]
 80006c2:	629a      	str	r2, [r3, #40]	; 0x28
 80006c4:	46c0      	nop			; (mov r8, r8)
 80006c6:	46bd      	mov	sp, r7
 80006c8:	b002      	add	sp, #8
 80006ca:	bd80      	pop	{r7, pc}

080006cc <GPIO_Write>:
 80006cc:	b580      	push	{r7, lr}
 80006ce:	b084      	sub	sp, #16
 80006d0:	af00      	add	r7, sp, #0
 80006d2:	60f8      	str	r0, [r7, #12]
 80006d4:	60b9      	str	r1, [r7, #8]
 80006d6:	1dfb      	adds	r3, r7, #7
 80006d8:	701a      	strb	r2, [r3, #0]
 80006da:	1dfb      	adds	r3, r7, #7
 80006dc:	781b      	ldrb	r3, [r3, #0]
 80006de:	2b00      	cmp	r3, #0
 80006e0:	d006      	beq.n	80006f0 <GPIO_Write+0x24>
 80006e2:	68ba      	ldr	r2, [r7, #8]
 80006e4:	68fb      	ldr	r3, [r7, #12]
 80006e6:	0011      	movs	r1, r2
 80006e8:	0018      	movs	r0, r3
 80006ea:	f7ff ffd7 	bl	800069c <GPIO_Set>
 80006ee:	e005      	b.n	80006fc <GPIO_Write+0x30>
 80006f0:	68ba      	ldr	r2, [r7, #8]
 80006f2:	68fb      	ldr	r3, [r7, #12]
 80006f4:	0011      	movs	r1, r2
 80006f6:	0018      	movs	r0, r3
 80006f8:	f7ff ffdc 	bl	80006b4 <GPIO_Reset>
 80006fc:	46c0      	nop			; (mov r8, r8)
 80006fe:	46bd      	mov	sp, r7
 8000700:	b004      	add	sp, #16
 8000702:	bd80      	pop	{r7, pc}

08000704 <GPIO_OnChange>:
 8000704:	b580      	push	{r7, lr}
 8000706:	b086      	sub	sp, #24
 8000708:	af00      	add	r7, sp, #0
 800070a:	60f8      	str	r0, [r7, #12]
 800070c:	60b9      	str	r1, [r7, #8]
 800070e:	603b      	str	r3, [r7, #0]
 8000710:	1dfb      	adds	r3, r7, #7
 8000712:	701a      	strb	r2, [r3, #0]
 8000714:	2300      	movs	r3, #0
 8000716:	617b      	str	r3, [r7, #20]
 8000718:	e002      	b.n	8000720 <GPIO_OnChange+0x1c>
 800071a:	697b      	ldr	r3, [r7, #20]
 800071c:	3301      	adds	r3, #1
 800071e:	617b      	str	r3, [r7, #20]
 8000720:	2201      	movs	r2, #1
 8000722:	697b      	ldr	r3, [r7, #20]
 8000724:	409a      	lsls	r2, r3
 8000726:	0013      	movs	r3, r2
 8000728:	001a      	movs	r2, r3
 800072a:	68bb      	ldr	r3, [r7, #8]
 800072c:	4013      	ands	r3, r2
 800072e:	d0f4      	beq.n	800071a <GPIO_OnChange+0x16>
 8000730:	4b09      	ldr	r3, [pc, #36]	; (8000758 <GPIO_OnChange+0x54>)
 8000732:	697a      	ldr	r2, [r7, #20]
 8000734:	0092      	lsls	r2, r2, #2
 8000736:	6839      	ldr	r1, [r7, #0]
 8000738:	50d1      	str	r1, [r2, r3]
 800073a:	1dfb      	adds	r3, r7, #7
 800073c:	781a      	ldrb	r2, [r3, #0]
 800073e:	6979      	ldr	r1, [r7, #20]
 8000740:	68fb      	ldr	r3, [r7, #12]
 8000742:	0018      	movs	r0, r3
 8000744:	f000 f87a 	bl	800083c <GPIO_ConfigInterrupt>
 8000748:	697b      	ldr	r3, [r7, #20]
 800074a:	0018      	movs	r0, r3
 800074c:	f000 f956 	bl	80009fc <EXTIx_EnableIRQn>
 8000750:	46c0      	nop			; (mov r8, r8)
 8000752:	46bd      	mov	sp, r7
 8000754:	b006      	add	sp, #24
 8000756:	bd80      	pop	{r7, pc}
 8000758:	200000f0 	.word	0x200000f0

0800075c <GPIO_Init>:
 800075c:	b580      	push	{r7, lr}
 800075e:	b088      	sub	sp, #32
 8000760:	af00      	add	r7, sp, #0
 8000762:	60f8      	str	r0, [r7, #12]
 8000764:	60b9      	str	r1, [r7, #8]
 8000766:	1dbb      	adds	r3, r7, #6
 8000768:	801a      	strh	r2, [r3, #0]
 800076a:	68bb      	ldr	r3, [r7, #8]
 800076c:	0018      	movs	r0, r3
 800076e:	f000 f8eb 	bl	8000948 <GPIO_SWARBitDouble>
 8000772:	0003      	movs	r3, r0
 8000774:	61fb      	str	r3, [r7, #28]
 8000776:	1dbb      	adds	r3, r7, #6
 8000778:	881b      	ldrh	r3, [r3, #0]
 800077a:	b2da      	uxtb	r2, r3
 800077c:	201b      	movs	r0, #27
 800077e:	183b      	adds	r3, r7, r0
 8000780:	2103      	movs	r1, #3
 8000782:	400a      	ands	r2, r1
 8000784:	701a      	strb	r2, [r3, #0]
 8000786:	183b      	adds	r3, r7, r0
 8000788:	781b      	ldrb	r3, [r3, #0]
 800078a:	2b02      	cmp	r3, #2
 800078c:	d003      	beq.n	8000796 <GPIO_Init+0x3a>
 800078e:	183b      	adds	r3, r7, r0
 8000790:	781b      	ldrb	r3, [r3, #0]
 8000792:	2b01      	cmp	r3, #1
 8000794:	d126      	bne.n	80007e4 <GPIO_Init+0x88>
 8000796:	1dbb      	adds	r3, r7, #6
 8000798:	881b      	ldrh	r3, [r3, #0]
 800079a:	121b      	asrs	r3, r3, #8
 800079c:	001a      	movs	r2, r3
 800079e:	2303      	movs	r3, #3
 80007a0:	4013      	ands	r3, r2
 80007a2:	617b      	str	r3, [r7, #20]
 80007a4:	68fb      	ldr	r3, [r7, #12]
 80007a6:	6899      	ldr	r1, [r3, #8]
 80007a8:	69fa      	ldr	r2, [r7, #28]
 80007aa:	0013      	movs	r3, r2
 80007ac:	005b      	lsls	r3, r3, #1
 80007ae:	189b      	adds	r3, r3, r2
 80007b0:	43db      	mvns	r3, r3
 80007b2:	400b      	ands	r3, r1
 80007b4:	001a      	movs	r2, r3
 80007b6:	69fb      	ldr	r3, [r7, #28]
 80007b8:	6979      	ldr	r1, [r7, #20]
 80007ba:	434b      	muls	r3, r1
 80007bc:	431a      	orrs	r2, r3
 80007be:	68fb      	ldr	r3, [r7, #12]
 80007c0:	609a      	str	r2, [r3, #8]
 80007c2:	68fb      	ldr	r3, [r7, #12]
 80007c4:	685b      	ldr	r3, [r3, #4]
 80007c6:	68ba      	ldr	r2, [r7, #8]
 80007c8:	43d2      	mvns	r2, r2
 80007ca:	401a      	ands	r2, r3
 80007cc:	1dbb      	adds	r3, r7, #6
 80007ce:	8819      	ldrh	r1, [r3, #0]
 80007d0:	2380      	movs	r3, #128	; 0x80
 80007d2:	015b      	lsls	r3, r3, #5
 80007d4:	400b      	ands	r3, r1
 80007d6:	d001      	beq.n	80007dc <GPIO_Init+0x80>
 80007d8:	68bb      	ldr	r3, [r7, #8]
 80007da:	e000      	b.n	80007de <GPIO_Init+0x82>
 80007dc:	2300      	movs	r3, #0
 80007de:	431a      	orrs	r2, r3
 80007e0:	68fb      	ldr	r3, [r7, #12]
 80007e2:	605a      	str	r2, [r3, #4]
 80007e4:	68fb      	ldr	r3, [r7, #12]
 80007e6:	6819      	ldr	r1, [r3, #0]
 80007e8:	69fa      	ldr	r2, [r7, #28]
 80007ea:	0013      	movs	r3, r2
 80007ec:	005b      	lsls	r3, r3, #1
 80007ee:	189b      	adds	r3, r3, r2
 80007f0:	43db      	mvns	r3, r3
 80007f2:	400b      	ands	r3, r1
 80007f4:	001a      	movs	r2, r3
 80007f6:	231b      	movs	r3, #27
 80007f8:	18fb      	adds	r3, r7, r3
 80007fa:	781b      	ldrb	r3, [r3, #0]
 80007fc:	69f9      	ldr	r1, [r7, #28]
 80007fe:	434b      	muls	r3, r1
 8000800:	431a      	orrs	r2, r3
 8000802:	68fb      	ldr	r3, [r7, #12]
 8000804:	601a      	str	r2, [r3, #0]
 8000806:	1dbb      	adds	r3, r7, #6
 8000808:	881b      	ldrh	r3, [r3, #0]
 800080a:	111b      	asrs	r3, r3, #4
 800080c:	001a      	movs	r2, r3
 800080e:	2303      	movs	r3, #3
 8000810:	4013      	ands	r3, r2
 8000812:	613b      	str	r3, [r7, #16]
 8000814:	68fb      	ldr	r3, [r7, #12]
 8000816:	68d9      	ldr	r1, [r3, #12]
 8000818:	69fa      	ldr	r2, [r7, #28]
 800081a:	0013      	movs	r3, r2
 800081c:	005b      	lsls	r3, r3, #1
 800081e:	189b      	adds	r3, r3, r2
 8000820:	43db      	mvns	r3, r3
 8000822:	400b      	ands	r3, r1
 8000824:	001a      	movs	r2, r3
 8000826:	69fb      	ldr	r3, [r7, #28]
 8000828:	6939      	ldr	r1, [r7, #16]
 800082a:	434b      	muls	r3, r1
 800082c:	431a      	orrs	r2, r3
 800082e:	68fb      	ldr	r3, [r7, #12]
 8000830:	60da      	str	r2, [r3, #12]
 8000832:	46c0      	nop			; (mov r8, r8)
 8000834:	46bd      	mov	sp, r7
 8000836:	b008      	add	sp, #32
 8000838:	bd80      	pop	{r7, pc}
	...

0800083c <GPIO_ConfigInterrupt>:
 800083c:	b580      	push	{r7, lr}
 800083e:	b088      	sub	sp, #32
 8000840:	af00      	add	r7, sp, #0
 8000842:	60f8      	str	r0, [r7, #12]
 8000844:	60b9      	str	r1, [r7, #8]
 8000846:	1dfb      	adds	r3, r7, #7
 8000848:	701a      	strb	r2, [r3, #0]
 800084a:	2201      	movs	r2, #1
 800084c:	68bb      	ldr	r3, [r7, #8]
 800084e:	409a      	lsls	r2, r3
 8000850:	0013      	movs	r3, r2
 8000852:	61fb      	str	r3, [r7, #28]
 8000854:	1dfb      	adds	r3, r7, #7
 8000856:	781b      	ldrb	r3, [r3, #0]
 8000858:	2b00      	cmp	r3, #0
 800085a:	d107      	bne.n	800086c <GPIO_ConfigInterrupt+0x30>
 800085c:	4b35      	ldr	r3, [pc, #212]	; (8000934 <GPIO_ConfigInterrupt+0xf8>)
 800085e:	681a      	ldr	r2, [r3, #0]
 8000860:	69fb      	ldr	r3, [r7, #28]
 8000862:	43d9      	mvns	r1, r3
 8000864:	4b33      	ldr	r3, [pc, #204]	; (8000934 <GPIO_ConfigInterrupt+0xf8>)
 8000866:	400a      	ands	r2, r1
 8000868:	601a      	str	r2, [r3, #0]
 800086a:	e05e      	b.n	800092a <GPIO_ConfigInterrupt+0xee>
 800086c:	4b32      	ldr	r3, [pc, #200]	; (8000938 <GPIO_ConfigInterrupt+0xfc>)
 800086e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000870:	4b31      	ldr	r3, [pc, #196]	; (8000938 <GPIO_ConfigInterrupt+0xfc>)
 8000872:	2101      	movs	r1, #1
 8000874:	430a      	orrs	r2, r1
 8000876:	635a      	str	r2, [r3, #52]	; 0x34
 8000878:	68fa      	ldr	r2, [r7, #12]
 800087a:	23a0      	movs	r3, #160	; 0xa0
 800087c:	05db      	lsls	r3, r3, #23
 800087e:	429a      	cmp	r2, r3
 8000880:	d00d      	beq.n	800089e <GPIO_ConfigInterrupt+0x62>
 8000882:	68fb      	ldr	r3, [r7, #12]
 8000884:	4a2d      	ldr	r2, [pc, #180]	; (800093c <GPIO_ConfigInterrupt+0x100>)
 8000886:	4293      	cmp	r3, r2
 8000888:	d007      	beq.n	800089a <GPIO_ConfigInterrupt+0x5e>
 800088a:	68fb      	ldr	r3, [r7, #12]
 800088c:	4a2c      	ldr	r2, [pc, #176]	; (8000940 <GPIO_ConfigInterrupt+0x104>)
 800088e:	4293      	cmp	r3, r2
 8000890:	d101      	bne.n	8000896 <GPIO_ConfigInterrupt+0x5a>
 8000892:	2302      	movs	r3, #2
 8000894:	e004      	b.n	80008a0 <GPIO_ConfigInterrupt+0x64>
 8000896:	2306      	movs	r3, #6
 8000898:	e002      	b.n	80008a0 <GPIO_ConfigInterrupt+0x64>
 800089a:	2301      	movs	r3, #1
 800089c:	e000      	b.n	80008a0 <GPIO_ConfigInterrupt+0x64>
 800089e:	2300      	movs	r3, #0
 80008a0:	61bb      	str	r3, [r7, #24]
 80008a2:	68bb      	ldr	r3, [r7, #8]
 80008a4:	2203      	movs	r2, #3
 80008a6:	4013      	ands	r3, r2
 80008a8:	009b      	lsls	r3, r3, #2
 80008aa:	617b      	str	r3, [r7, #20]
 80008ac:	4a25      	ldr	r2, [pc, #148]	; (8000944 <GPIO_ConfigInterrupt+0x108>)
 80008ae:	68bb      	ldr	r3, [r7, #8]
 80008b0:	109b      	asrs	r3, r3, #2
 80008b2:	3302      	adds	r3, #2
 80008b4:	009b      	lsls	r3, r3, #2
 80008b6:	589b      	ldr	r3, [r3, r2]
 80008b8:	210f      	movs	r1, #15
 80008ba:	697a      	ldr	r2, [r7, #20]
 80008bc:	4091      	lsls	r1, r2
 80008be:	000a      	movs	r2, r1
 80008c0:	43d2      	mvns	r2, r2
 80008c2:	401a      	ands	r2, r3
 80008c4:	0011      	movs	r1, r2
 80008c6:	69ba      	ldr	r2, [r7, #24]
 80008c8:	697b      	ldr	r3, [r7, #20]
 80008ca:	409a      	lsls	r2, r3
 80008cc:	481d      	ldr	r0, [pc, #116]	; (8000944 <GPIO_ConfigInterrupt+0x108>)
 80008ce:	68bb      	ldr	r3, [r7, #8]
 80008d0:	109b      	asrs	r3, r3, #2
 80008d2:	430a      	orrs	r2, r1
 80008d4:	3302      	adds	r3, #2
 80008d6:	009b      	lsls	r3, r3, #2
 80008d8:	501a      	str	r2, [r3, r0]
 80008da:	4b16      	ldr	r3, [pc, #88]	; (8000934 <GPIO_ConfigInterrupt+0xf8>)
 80008dc:	6819      	ldr	r1, [r3, #0]
 80008de:	4b15      	ldr	r3, [pc, #84]	; (8000934 <GPIO_ConfigInterrupt+0xf8>)
 80008e0:	69fa      	ldr	r2, [r7, #28]
 80008e2:	430a      	orrs	r2, r1
 80008e4:	601a      	str	r2, [r3, #0]
 80008e6:	4b13      	ldr	r3, [pc, #76]	; (8000934 <GPIO_ConfigInterrupt+0xf8>)
 80008e8:	689b      	ldr	r3, [r3, #8]
 80008ea:	69fa      	ldr	r2, [r7, #28]
 80008ec:	43d2      	mvns	r2, r2
 80008ee:	401a      	ands	r2, r3
 80008f0:	0011      	movs	r1, r2
 80008f2:	1dfb      	adds	r3, r7, #7
 80008f4:	781b      	ldrb	r3, [r3, #0]
 80008f6:	2201      	movs	r2, #1
 80008f8:	4013      	ands	r3, r2
 80008fa:	d001      	beq.n	8000900 <GPIO_ConfigInterrupt+0xc4>
 80008fc:	69fa      	ldr	r2, [r7, #28]
 80008fe:	e000      	b.n	8000902 <GPIO_ConfigInterrupt+0xc6>
 8000900:	2200      	movs	r2, #0
 8000902:	4b0c      	ldr	r3, [pc, #48]	; (8000934 <GPIO_ConfigInterrupt+0xf8>)
 8000904:	430a      	orrs	r2, r1
 8000906:	609a      	str	r2, [r3, #8]
 8000908:	4b0a      	ldr	r3, [pc, #40]	; (8000934 <GPIO_ConfigInterrupt+0xf8>)
 800090a:	68db      	ldr	r3, [r3, #12]
 800090c:	69fa      	ldr	r2, [r7, #28]
 800090e:	43d2      	mvns	r2, r2
 8000910:	401a      	ands	r2, r3
 8000912:	0011      	movs	r1, r2
 8000914:	1dfb      	adds	r3, r7, #7
 8000916:	781b      	ldrb	r3, [r3, #0]
 8000918:	2202      	movs	r2, #2
 800091a:	4013      	ands	r3, r2
 800091c:	d001      	beq.n	8000922 <GPIO_ConfigInterrupt+0xe6>
 800091e:	69fa      	ldr	r2, [r7, #28]
 8000920:	e000      	b.n	8000924 <GPIO_ConfigInterrupt+0xe8>
 8000922:	2200      	movs	r2, #0
 8000924:	4b03      	ldr	r3, [pc, #12]	; (8000934 <GPIO_ConfigInterrupt+0xf8>)
 8000926:	430a      	orrs	r2, r1
 8000928:	60da      	str	r2, [r3, #12]
 800092a:	46c0      	nop			; (mov r8, r8)
 800092c:	46bd      	mov	sp, r7
 800092e:	b008      	add	sp, #32
 8000930:	bd80      	pop	{r7, pc}
 8000932:	46c0      	nop			; (mov r8, r8)
 8000934:	40010400 	.word	0x40010400
 8000938:	40021000 	.word	0x40021000
 800093c:	50000400 	.word	0x50000400
 8000940:	50000800 	.word	0x50000800
 8000944:	40010000 	.word	0x40010000

08000948 <GPIO_SWARBitDouble>:
 8000948:	b580      	push	{r7, lr}
 800094a:	b082      	sub	sp, #8
 800094c:	af00      	add	r7, sp, #0
 800094e:	6078      	str	r0, [r7, #4]
 8000950:	687b      	ldr	r3, [r7, #4]
 8000952:	4a14      	ldr	r2, [pc, #80]	; (80009a4 <GPIO_SWARBitDouble+0x5c>)
 8000954:	401a      	ands	r2, r3
 8000956:	687b      	ldr	r3, [r7, #4]
 8000958:	0219      	lsls	r1, r3, #8
 800095a:	23ff      	movs	r3, #255	; 0xff
 800095c:	041b      	lsls	r3, r3, #16
 800095e:	400b      	ands	r3, r1
 8000960:	4313      	orrs	r3, r2
 8000962:	607b      	str	r3, [r7, #4]
 8000964:	687b      	ldr	r3, [r7, #4]
 8000966:	4a10      	ldr	r2, [pc, #64]	; (80009a8 <GPIO_SWARBitDouble+0x60>)
 8000968:	401a      	ands	r2, r3
 800096a:	687b      	ldr	r3, [r7, #4]
 800096c:	011b      	lsls	r3, r3, #4
 800096e:	490f      	ldr	r1, [pc, #60]	; (80009ac <GPIO_SWARBitDouble+0x64>)
 8000970:	400b      	ands	r3, r1
 8000972:	4313      	orrs	r3, r2
 8000974:	607b      	str	r3, [r7, #4]
 8000976:	687b      	ldr	r3, [r7, #4]
 8000978:	4a0d      	ldr	r2, [pc, #52]	; (80009b0 <GPIO_SWARBitDouble+0x68>)
 800097a:	401a      	ands	r2, r3
 800097c:	687b      	ldr	r3, [r7, #4]
 800097e:	009b      	lsls	r3, r3, #2
 8000980:	490c      	ldr	r1, [pc, #48]	; (80009b4 <GPIO_SWARBitDouble+0x6c>)
 8000982:	400b      	ands	r3, r1
 8000984:	4313      	orrs	r3, r2
 8000986:	607b      	str	r3, [r7, #4]
 8000988:	687b      	ldr	r3, [r7, #4]
 800098a:	4a0b      	ldr	r2, [pc, #44]	; (80009b8 <GPIO_SWARBitDouble+0x70>)
 800098c:	401a      	ands	r2, r3
 800098e:	687b      	ldr	r3, [r7, #4]
 8000990:	005b      	lsls	r3, r3, #1
 8000992:	490a      	ldr	r1, [pc, #40]	; (80009bc <GPIO_SWARBitDouble+0x74>)
 8000994:	400b      	ands	r3, r1
 8000996:	4313      	orrs	r3, r2
 8000998:	607b      	str	r3, [r7, #4]
 800099a:	687b      	ldr	r3, [r7, #4]
 800099c:	0018      	movs	r0, r3
 800099e:	46bd      	mov	sp, r7
 80009a0:	b002      	add	sp, #8
 80009a2:	bd80      	pop	{r7, pc}
 80009a4:	00ff00ff 	.word	0x00ff00ff
 80009a8:	0f0f0f0f 	.word	0x0f0f0f0f
 80009ac:	0f0f0f00 	.word	0x0f0f0f00
 80009b0:	33333333 	.word	0x33333333
 80009b4:	33333330 	.word	0x33333330
 80009b8:	55555555 	.word	0x55555555
 80009bc:	55555554 	.word	0x55555554

080009c0 <EXTIx_IRQHandler>:
 80009c0:	b580      	push	{r7, lr}
 80009c2:	b082      	sub	sp, #8
 80009c4:	af00      	add	r7, sp, #0
 80009c6:	6078      	str	r0, [r7, #4]
 80009c8:	4b0a      	ldr	r3, [pc, #40]	; (80009f4 <EXTIx_IRQHandler+0x34>)
 80009ca:	695b      	ldr	r3, [r3, #20]
 80009cc:	2101      	movs	r1, #1
 80009ce:	687a      	ldr	r2, [r7, #4]
 80009d0:	4091      	lsls	r1, r2
 80009d2:	000a      	movs	r2, r1
 80009d4:	4013      	ands	r3, r2
 80009d6:	d009      	beq.n	80009ec <EXTIx_IRQHandler+0x2c>
 80009d8:	2201      	movs	r2, #1
 80009da:	687b      	ldr	r3, [r7, #4]
 80009dc:	409a      	lsls	r2, r3
 80009de:	4b05      	ldr	r3, [pc, #20]	; (80009f4 <EXTIx_IRQHandler+0x34>)
 80009e0:	615a      	str	r2, [r3, #20]
 80009e2:	4b05      	ldr	r3, [pc, #20]	; (80009f8 <EXTIx_IRQHandler+0x38>)
 80009e4:	687a      	ldr	r2, [r7, #4]
 80009e6:	0092      	lsls	r2, r2, #2
 80009e8:	58d3      	ldr	r3, [r2, r3]
 80009ea:	4798      	blx	r3
 80009ec:	46c0      	nop			; (mov r8, r8)
 80009ee:	46bd      	mov	sp, r7
 80009f0:	b002      	add	sp, #8
 80009f2:	bd80      	pop	{r7, pc}
 80009f4:	40010400 	.word	0x40010400
 80009f8:	200000f0 	.word	0x200000f0

080009fc <EXTIx_EnableIRQn>:
 80009fc:	b580      	push	{r7, lr}
 80009fe:	b082      	sub	sp, #8
 8000a00:	af00      	add	r7, sp, #0
 8000a02:	6078      	str	r0, [r7, #4]
 8000a04:	687b      	ldr	r3, [r7, #4]
 8000a06:	2b01      	cmp	r3, #1
 8000a08:	dc03      	bgt.n	8000a12 <EXTIx_EnableIRQn+0x16>
 8000a0a:	2005      	movs	r0, #5
 8000a0c:	f001 fac9 	bl	8001fa2 <HAL_NVIC_EnableIRQ>
 8000a10:	e009      	b.n	8000a26 <EXTIx_EnableIRQn+0x2a>
 8000a12:	687b      	ldr	r3, [r7, #4]
 8000a14:	2b03      	cmp	r3, #3
 8000a16:	dc03      	bgt.n	8000a20 <EXTIx_EnableIRQn+0x24>
 8000a18:	2006      	movs	r0, #6
 8000a1a:	f001 fac2 	bl	8001fa2 <HAL_NVIC_EnableIRQ>
 8000a1e:	e002      	b.n	8000a26 <EXTIx_EnableIRQn+0x2a>
 8000a20:	2007      	movs	r0, #7
 8000a22:	f001 fabe 	bl	8001fa2 <HAL_NVIC_EnableIRQ>
 8000a26:	46c0      	nop			; (mov r8, r8)
 8000a28:	46bd      	mov	sp, r7
 8000a2a:	b002      	add	sp, #8
 8000a2c:	bd80      	pop	{r7, pc}

08000a2e <EXTI4_15_IRQHandler>:
 8000a2e:	b580      	push	{r7, lr}
 8000a30:	af00      	add	r7, sp, #0
 8000a32:	2008      	movs	r0, #8
 8000a34:	f7ff ffc4 	bl	80009c0 <EXTIx_IRQHandler>
 8000a38:	200f      	movs	r0, #15
 8000a3a:	f7ff ffc1 	bl	80009c0 <EXTIx_IRQHandler>
 8000a3e:	46c0      	nop			; (mov r8, r8)
 8000a40:	46bd      	mov	sp, r7
 8000a42:	bd80      	pop	{r7, pc}

08000a44 <GPIO_EnableOutput>:
{
	GPIO_Init(gpio, pin, GPIO_Mode_Analog);
}

static inline void GPIO_EnableOutput(GPIO_t * gpio, uint32_t pin, GPIO_State_t state)
{
 8000a44:	b580      	push	{r7, lr}
 8000a46:	b084      	sub	sp, #16
 8000a48:	af00      	add	r7, sp, #0
 8000a4a:	60f8      	str	r0, [r7, #12]
 8000a4c:	60b9      	str	r1, [r7, #8]
 8000a4e:	1dfb      	adds	r3, r7, #7
 8000a50:	701a      	strb	r2, [r3, #0]
	GPIO_Write(gpio, pin, state);
 8000a52:	1dfb      	adds	r3, r7, #7
 8000a54:	781a      	ldrb	r2, [r3, #0]
 8000a56:	68b9      	ldr	r1, [r7, #8]
 8000a58:	68fb      	ldr	r3, [r7, #12]
 8000a5a:	0018      	movs	r0, r3
 8000a5c:	f7ff fe36 	bl	80006cc <GPIO_Write>
	GPIO_Init(gpio, pin, GPIO_Mode_Output);
 8000a60:	68b9      	ldr	r1, [r7, #8]
 8000a62:	68fb      	ldr	r3, [r7, #12]
 8000a64:	2201      	movs	r2, #1
 8000a66:	0018      	movs	r0, r3
 8000a68:	f7ff fe78 	bl	800075c <GPIO_Init>
}
 8000a6c:	46c0      	nop			; (mov r8, r8)
 8000a6e:	46bd      	mov	sp, r7
 8000a70:	b004      	add	sp, #16
 8000a72:	bd80      	pop	{r7, pc}

08000a74 <GPIO_Set>:

// IO calls
static inline void GPIO_Set(GPIO_t * gpio, uint32_t pin)
{
 8000a74:	b580      	push	{r7, lr}
 8000a76:	b082      	sub	sp, #8
 8000a78:	af00      	add	r7, sp, #0
 8000a7a:	6078      	str	r0, [r7, #4]
 8000a7c:	6039      	str	r1, [r7, #0]
	gpio->BSRR = (uint32_t)pin;
 8000a7e:	687b      	ldr	r3, [r7, #4]
 8000a80:	683a      	ldr	r2, [r7, #0]
 8000a82:	619a      	str	r2, [r3, #24]
}
 8000a84:	46c0      	nop			; (mov r8, r8)
 8000a86:	46bd      	mov	sp, r7
 8000a88:	b002      	add	sp, #8
 8000a8a:	bd80      	pop	{r7, pc}

08000a8c <GPIO_Reset>:

static inline void GPIO_Reset(GPIO_t * gpio, uint32_t pin)
{
 8000a8c:	b580      	push	{r7, lr}
 8000a8e:	b082      	sub	sp, #8
 8000a90:	af00      	add	r7, sp, #0
 8000a92:	6078      	str	r0, [r7, #4]
 8000a94:	6039      	str	r1, [r7, #0]
	gpio->BRR = (uint32_t)pin;
 8000a96:	687b      	ldr	r3, [r7, #4]
 8000a98:	683a      	ldr	r2, [r7, #0]
 8000a9a:	629a      	str	r2, [r3, #40]	; 0x28
}
 8000a9c:	46c0      	nop			; (mov r8, r8)
 8000a9e:	46bd      	mov	sp, r7
 8000aa0:	b002      	add	sp, #8
 8000aa2:	bd80      	pop	{r7, pc}

08000aa4 <MOTOR_Init>:
/*
 * PUBLIC FUNCTIONS
 */

void MOTOR_Init (void)
{
 8000aa4:	b580      	push	{r7, lr}
 8000aa6:	af00      	add	r7, sp, #0
	GPIO_EnableOutput(FET_P1_GPIO, FET_P1_PIN, GPIO_PIN_RESET);
 8000aa8:	23a0      	movs	r3, #160	; 0xa0
 8000aaa:	05db      	lsls	r3, r3, #23
 8000aac:	2200      	movs	r2, #0
 8000aae:	2102      	movs	r1, #2
 8000ab0:	0018      	movs	r0, r3
 8000ab2:	f7ff ffc7 	bl	8000a44 <GPIO_EnableOutput>
	GPIO_EnableOutput(FET_P2_GPIO, FET_P2_PIN, GPIO_PIN_RESET);
 8000ab6:	23a0      	movs	r3, #160	; 0xa0
 8000ab8:	05db      	lsls	r3, r3, #23
 8000aba:	2200      	movs	r2, #0
 8000abc:	2108      	movs	r1, #8
 8000abe:	0018      	movs	r0, r3
 8000ac0:	f7ff ffc0 	bl	8000a44 <GPIO_EnableOutput>
	GPIO_EnableOutput(FET_N1_GPIO, FET_N1_PIN, GPIO_PIN_RESET);
 8000ac4:	23a0      	movs	r3, #160	; 0xa0
 8000ac6:	05db      	lsls	r3, r3, #23
 8000ac8:	2200      	movs	r2, #0
 8000aca:	2101      	movs	r1, #1
 8000acc:	0018      	movs	r0, r3
 8000ace:	f7ff ffb9 	bl	8000a44 <GPIO_EnableOutput>
	GPIO_EnableOutput(FET_N2_GPIO, FET_N2_PIN, GPIO_PIN_RESET);
 8000ad2:	2380      	movs	r3, #128	; 0x80
 8000ad4:	00d9      	lsls	r1, r3, #3
 8000ad6:	23a0      	movs	r3, #160	; 0xa0
 8000ad8:	05db      	lsls	r3, r3, #23
 8000ada:	2200      	movs	r2, #0
 8000adc:	0018      	movs	r0, r3
 8000ade:	f7ff ffb1 	bl	8000a44 <GPIO_EnableOutput>


}
 8000ae2:	46c0      	nop			; (mov r8, r8)
 8000ae4:	46bd      	mov	sp, r7
 8000ae6:	bd80      	pop	{r7, pc}

08000ae8 <MOTOR_Update>:

/*
 * UPDATE THE MOTOR SPEED
 */
void MOTOR_Update (void)
{
 8000ae8:	b580      	push	{r7, lr}
 8000aea:	b084      	sub	sp, #16
 8000aec:	af00      	add	r7, sp, #0
	static bool fwd_p = false;
	static bool stop_p = true;
	static int32_t duty_p = MOTOR_OFF;

	// CURRENT LOOP VARIABLES
	bool rvs = false;
 8000aee:	230f      	movs	r3, #15
 8000af0:	18fb      	adds	r3, r7, r3
 8000af2:	2200      	movs	r2, #0
 8000af4:	701a      	strb	r2, [r3, #0]
	bool fwd = false;
 8000af6:	230e      	movs	r3, #14
 8000af8:	18fb      	adds	r3, r7, r3
 8000afa:	2200      	movs	r2, #0
 8000afc:	701a      	strb	r2, [r3, #0]
	bool stop = true;
 8000afe:	230d      	movs	r3, #13
 8000b00:	18fb      	adds	r3, r7, r3
 8000b02:	2201      	movs	r2, #1
 8000b04:	701a      	strb	r2, [r3, #0]
	bool direction_changed = false;
 8000b06:	230c      	movs	r3, #12
 8000b08:	18fb      	adds	r3, r7, r3
 8000b0a:	2200      	movs	r2, #0
 8000b0c:	701a      	strb	r2, [r3, #0]
	int32_t duty = (int32_t)input;
 8000b0e:	4b61      	ldr	r3, [pc, #388]	; (8000c94 <MOTOR_Update+0x1ac>)
 8000b10:	881b      	ldrh	r3, [r3, #0]
 8000b12:	b29b      	uxth	r3, r3
 8000b14:	60bb      	str	r3, [r7, #8]
	bool speed_changed = false;
 8000b16:	1dfb      	adds	r3, r7, #7
 8000b18:	2200      	movs	r2, #0
 8000b1a:	701a      	strb	r2, [r3, #0]

	// CHECK FOR OVERRIDE CONDITIONS
	if (duty == 0 || status.faultInput == true || status.faultBatt == true)
 8000b1c:	68bb      	ldr	r3, [r7, #8]
 8000b1e:	2b00      	cmp	r3, #0
 8000b20:	d007      	beq.n	8000b32 <MOTOR_Update+0x4a>
 8000b22:	4b5d      	ldr	r3, [pc, #372]	; (8000c98 <MOTOR_Update+0x1b0>)
 8000b24:	781b      	ldrb	r3, [r3, #0]
 8000b26:	2b00      	cmp	r3, #0
 8000b28:	d103      	bne.n	8000b32 <MOTOR_Update+0x4a>
 8000b2a:	4b5b      	ldr	r3, [pc, #364]	; (8000c98 <MOTOR_Update+0x1b0>)
 8000b2c:	785b      	ldrb	r3, [r3, #1]
 8000b2e:	2b00      	cmp	r3, #0
 8000b30:	d001      	beq.n	8000b36 <MOTOR_Update+0x4e>
	{
		duty = RADIO_CENTER;
 8000b32:	4b5a      	ldr	r3, [pc, #360]	; (8000c9c <MOTOR_Update+0x1b4>)
 8000b34:	60bb      	str	r3, [r7, #8]
	}

	// TRUNCATE RADIO INPUT TO LIMITS
	if (duty > RADIO_MAX)
 8000b36:	68ba      	ldr	r2, [r7, #8]
 8000b38:	23fa      	movs	r3, #250	; 0xfa
 8000b3a:	00db      	lsls	r3, r3, #3
 8000b3c:	429a      	cmp	r2, r3
 8000b3e:	dd03      	ble.n	8000b48 <MOTOR_Update+0x60>
	{
		duty = RADIO_MAX;
 8000b40:	23fa      	movs	r3, #250	; 0xfa
 8000b42:	00db      	lsls	r3, r3, #3
 8000b44:	60bb      	str	r3, [r7, #8]
 8000b46:	e007      	b.n	8000b58 <MOTOR_Update+0x70>
	}
	else if (duty < RADIO_MIN)
 8000b48:	68ba      	ldr	r2, [r7, #8]
 8000b4a:	23fa      	movs	r3, #250	; 0xfa
 8000b4c:	009b      	lsls	r3, r3, #2
 8000b4e:	429a      	cmp	r2, r3
 8000b50:	da02      	bge.n	8000b58 <MOTOR_Update+0x70>
	{
		duty = RADIO_MIN;
 8000b52:	23fa      	movs	r3, #250	; 0xfa
 8000b54:	009b      	lsls	r3, r3, #2
 8000b56:	60bb      	str	r3, [r7, #8]
	}

	// PROCESS INPUT TO MOTOR PWM
	if (duty >= (RADIO_CENTER - RADIO_HYST) && duty <= (RADIO_CENTER + RADIO_HYST))
 8000b58:	68bb      	ldr	r3, [r7, #8]
 8000b5a:	4a51      	ldr	r2, [pc, #324]	; (8000ca0 <MOTOR_Update+0x1b8>)
 8000b5c:	4293      	cmp	r3, r2
 8000b5e:	dd12      	ble.n	8000b86 <MOTOR_Update+0x9e>
 8000b60:	68bb      	ldr	r3, [r7, #8]
 8000b62:	4a50      	ldr	r2, [pc, #320]	; (8000ca4 <MOTOR_Update+0x1bc>)
 8000b64:	4293      	cmp	r3, r2
 8000b66:	dc0e      	bgt.n	8000b86 <MOTOR_Update+0x9e>
	{
		duty = MOTOR_OFF;
 8000b68:	2300      	movs	r3, #0
 8000b6a:	60bb      	str	r3, [r7, #8]
		stop = true;
 8000b6c:	230d      	movs	r3, #13
 8000b6e:	18fb      	adds	r3, r7, r3
 8000b70:	2201      	movs	r2, #1
 8000b72:	701a      	strb	r2, [r3, #0]
		fwd = false;
 8000b74:	230e      	movs	r3, #14
 8000b76:	18fb      	adds	r3, r7, r3
 8000b78:	2200      	movs	r2, #0
 8000b7a:	701a      	strb	r2, [r3, #0]
		rvs = false;
 8000b7c:	230f      	movs	r3, #15
 8000b7e:	18fb      	adds	r3, r7, r3
 8000b80:	2200      	movs	r2, #0
 8000b82:	701a      	strb	r2, [r3, #0]
 8000b84:	e025      	b.n	8000bd2 <MOTOR_Update+0xea>
	}
	else if (duty < (RADIO_CENTER - RADIO_HYST))
 8000b86:	68bb      	ldr	r3, [r7, #8]
 8000b88:	4a45      	ldr	r2, [pc, #276]	; (8000ca0 <MOTOR_Update+0x1b8>)
 8000b8a:	4293      	cmp	r3, r2
 8000b8c:	dc10      	bgt.n	8000bb0 <MOTOR_Update+0xc8>
	{
		duty = RADIO_CENTER - duty;
 8000b8e:	68bb      	ldr	r3, [r7, #8]
 8000b90:	4a42      	ldr	r2, [pc, #264]	; (8000c9c <MOTOR_Update+0x1b4>)
 8000b92:	1ad3      	subs	r3, r2, r3
 8000b94:	60bb      	str	r3, [r7, #8]
		stop = false;
 8000b96:	230d      	movs	r3, #13
 8000b98:	18fb      	adds	r3, r7, r3
 8000b9a:	2200      	movs	r2, #0
 8000b9c:	701a      	strb	r2, [r3, #0]
		rvs = true;
 8000b9e:	230f      	movs	r3, #15
 8000ba0:	18fb      	adds	r3, r7, r3
 8000ba2:	2201      	movs	r2, #1
 8000ba4:	701a      	strb	r2, [r3, #0]
		fwd = false;
 8000ba6:	230e      	movs	r3, #14
 8000ba8:	18fb      	adds	r3, r7, r3
 8000baa:	2200      	movs	r2, #0
 8000bac:	701a      	strb	r2, [r3, #0]
 8000bae:	e010      	b.n	8000bd2 <MOTOR_Update+0xea>
	}
	else
	{
		duty = duty - RADIO_CENTER;
 8000bb0:	68bb      	ldr	r3, [r7, #8]
 8000bb2:	4a3d      	ldr	r2, [pc, #244]	; (8000ca8 <MOTOR_Update+0x1c0>)
 8000bb4:	4694      	mov	ip, r2
 8000bb6:	4463      	add	r3, ip
 8000bb8:	60bb      	str	r3, [r7, #8]
		stop = false;
 8000bba:	230d      	movs	r3, #13
 8000bbc:	18fb      	adds	r3, r7, r3
 8000bbe:	2200      	movs	r2, #0
 8000bc0:	701a      	strb	r2, [r3, #0]
		rvs = false;
 8000bc2:	230f      	movs	r3, #15
 8000bc4:	18fb      	adds	r3, r7, r3
 8000bc6:	2200      	movs	r2, #0
 8000bc8:	701a      	strb	r2, [r3, #0]
		fwd = true;
 8000bca:	230e      	movs	r3, #14
 8000bcc:	18fb      	adds	r3, r7, r3
 8000bce:	2201      	movs	r2, #1
 8000bd0:	701a      	strb	r2, [r3, #0]
	}


	// SET THE DIRECTION CHANGE FLAG
	if (rvs == rvs_p && fwd == fwd_p)
 8000bd2:	4b36      	ldr	r3, [pc, #216]	; (8000cac <MOTOR_Update+0x1c4>)
 8000bd4:	781b      	ldrb	r3, [r3, #0]
 8000bd6:	220f      	movs	r2, #15
 8000bd8:	18ba      	adds	r2, r7, r2
 8000bda:	7812      	ldrb	r2, [r2, #0]
 8000bdc:	429a      	cmp	r2, r3
 8000bde:	d10b      	bne.n	8000bf8 <MOTOR_Update+0x110>
 8000be0:	4b33      	ldr	r3, [pc, #204]	; (8000cb0 <MOTOR_Update+0x1c8>)
 8000be2:	781b      	ldrb	r3, [r3, #0]
 8000be4:	220e      	movs	r2, #14
 8000be6:	18ba      	adds	r2, r7, r2
 8000be8:	7812      	ldrb	r2, [r2, #0]
 8000bea:	429a      	cmp	r2, r3
 8000bec:	d104      	bne.n	8000bf8 <MOTOR_Update+0x110>
	{
		direction_changed = false;
 8000bee:	230c      	movs	r3, #12
 8000bf0:	18fb      	adds	r3, r7, r3
 8000bf2:	2200      	movs	r2, #0
 8000bf4:	701a      	strb	r2, [r3, #0]
 8000bf6:	e003      	b.n	8000c00 <MOTOR_Update+0x118>
	}
	else
	{
		direction_changed = true;
 8000bf8:	230c      	movs	r3, #12
 8000bfa:	18fb      	adds	r3, r7, r3
 8000bfc:	2201      	movs	r2, #1
 8000bfe:	701a      	strb	r2, [r3, #0]
	}

	// SET THE SPEED CHANGE FLAG
	if (duty == duty_p)
 8000c00:	4b2c      	ldr	r3, [pc, #176]	; (8000cb4 <MOTOR_Update+0x1cc>)
 8000c02:	681b      	ldr	r3, [r3, #0]
 8000c04:	68ba      	ldr	r2, [r7, #8]
 8000c06:	429a      	cmp	r2, r3
 8000c08:	d103      	bne.n	8000c12 <MOTOR_Update+0x12a>
	{
		speed_changed = false;
 8000c0a:	1dfb      	adds	r3, r7, #7
 8000c0c:	2200      	movs	r2, #0
 8000c0e:	701a      	strb	r2, [r3, #0]
 8000c10:	e002      	b.n	8000c18 <MOTOR_Update+0x130>
	}
	else
	{
		speed_changed = true;
 8000c12:	1dfb      	adds	r3, r7, #7
 8000c14:	2201      	movs	r2, #1
 8000c16:	701a      	strb	r2, [r3, #0]
	}

	// UPDATE THE MOTOR
	if (speed_changed || direction_changed)
 8000c18:	1dfb      	adds	r3, r7, #7
 8000c1a:	781b      	ldrb	r3, [r3, #0]
 8000c1c:	2b00      	cmp	r3, #0
 8000c1e:	d104      	bne.n	8000c2a <MOTOR_Update+0x142>
 8000c20:	230c      	movs	r3, #12
 8000c22:	18fb      	adds	r3, r7, r3
 8000c24:	781b      	ldrb	r3, [r3, #0]
 8000c26:	2b00      	cmp	r3, #0
 8000c28:	d01e      	beq.n	8000c68 <MOTOR_Update+0x180>
	{
		if (duty == MOTOR_OFF)
 8000c2a:	68bb      	ldr	r3, [r7, #8]
 8000c2c:	2b00      	cmp	r3, #0
 8000c2e:	d102      	bne.n	8000c36 <MOTOR_Update+0x14e>
		{
			MOTOR_TurnOFF();
 8000c30:	f000 f844 	bl	8000cbc <MOTOR_TurnOFF>
 8000c34:	e018      	b.n	8000c68 <MOTOR_Update+0x180>
		}
		else if (speed_changed && !direction_changed)
 8000c36:	1dfb      	adds	r3, r7, #7
 8000c38:	781b      	ldrb	r3, [r3, #0]
 8000c3a:	2b00      	cmp	r3, #0
 8000c3c:	d00c      	beq.n	8000c58 <MOTOR_Update+0x170>
 8000c3e:	230c      	movs	r3, #12
 8000c40:	18fb      	adds	r3, r7, r3
 8000c42:	781b      	ldrb	r3, [r3, #0]
 8000c44:	2201      	movs	r2, #1
 8000c46:	4053      	eors	r3, r2
 8000c48:	b2db      	uxtb	r3, r3
 8000c4a:	2b00      	cmp	r3, #0
 8000c4c:	d004      	beq.n	8000c58 <MOTOR_Update+0x170>
		{
			MOTOR_UpdatePWM(duty);
 8000c4e:	68bb      	ldr	r3, [r7, #8]
 8000c50:	0018      	movs	r0, r3
 8000c52:	f000 f889 	bl	8000d68 <MOTOR_UpdatePWM>
 8000c56:	e007      	b.n	8000c68 <MOTOR_Update+0x180>
		}
		else //(direction_changed)
		{
			MOTOR_DirectionChanged(duty, fwd);
 8000c58:	230e      	movs	r3, #14
 8000c5a:	18fb      	adds	r3, r7, r3
 8000c5c:	781a      	ldrb	r2, [r3, #0]
 8000c5e:	68bb      	ldr	r3, [r7, #8]
 8000c60:	0011      	movs	r1, r2
 8000c62:	0018      	movs	r0, r3
 8000c64:	f000 f892 	bl	8000d8c <MOTOR_DirectionChanged>
		}
	}

	// UPDATE STATUS VARIABLES
	duty_p = duty;
 8000c68:	4b12      	ldr	r3, [pc, #72]	; (8000cb4 <MOTOR_Update+0x1cc>)
 8000c6a:	68ba      	ldr	r2, [r7, #8]
 8000c6c:	601a      	str	r2, [r3, #0]
	fwd_p = fwd;
 8000c6e:	4b10      	ldr	r3, [pc, #64]	; (8000cb0 <MOTOR_Update+0x1c8>)
 8000c70:	220e      	movs	r2, #14
 8000c72:	18ba      	adds	r2, r7, r2
 8000c74:	7812      	ldrb	r2, [r2, #0]
 8000c76:	701a      	strb	r2, [r3, #0]
	rvs_p = rvs;
 8000c78:	4b0c      	ldr	r3, [pc, #48]	; (8000cac <MOTOR_Update+0x1c4>)
 8000c7a:	220f      	movs	r2, #15
 8000c7c:	18ba      	adds	r2, r7, r2
 8000c7e:	7812      	ldrb	r2, [r2, #0]
 8000c80:	701a      	strb	r2, [r3, #0]
	stop_p = stop;
 8000c82:	4b0d      	ldr	r3, [pc, #52]	; (8000cb8 <MOTOR_Update+0x1d0>)
 8000c84:	220d      	movs	r2, #13
 8000c86:	18ba      	adds	r2, r7, r2
 8000c88:	7812      	ldrb	r2, [r2, #0]
 8000c8a:	701a      	strb	r2, [r3, #0]
}
 8000c8c:	46c0      	nop			; (mov r8, r8)
 8000c8e:	46bd      	mov	sp, r7
 8000c90:	b004      	add	sp, #16
 8000c92:	bd80      	pop	{r7, pc}
 8000c94:	20000140 	.word	0x20000140
 8000c98:	20000150 	.word	0x20000150
 8000c9c:	000005dc 	.word	0x000005dc
 8000ca0:	000005a9 	.word	0x000005a9
 8000ca4:	0000060e 	.word	0x0000060e
 8000ca8:	fffffa24 	.word	0xfffffa24
 8000cac:	20000130 	.word	0x20000130
 8000cb0:	20000131 	.word	0x20000131
 8000cb4:	20000134 	.word	0x20000134
 8000cb8:	20000000 	.word	0x20000000

08000cbc <MOTOR_TurnOFF>:
/*
 * PRIVATE FUNCTIONS
 */

void MOTOR_TurnOFF(void)
{
 8000cbc:	b580      	push	{r7, lr}
 8000cbe:	af00      	add	r7, sp, #0
	TIM_Stop(TIM_MOTOR);
 8000cc0:	4b27      	ldr	r3, [pc, #156]	; (8000d60 <MOTOR_TurnOFF+0xa4>)
 8000cc2:	681b      	ldr	r3, [r3, #0]
 8000cc4:	0018      	movs	r0, r3
 8000cc6:	f000 fcaf 	bl	8001628 <TIM_Stop>
	TIM_OnPulse(TIM_MOTOR, TIM_MOTOR_CH, MOTOR_TimerBlankIRQ);
 8000cca:	4b25      	ldr	r3, [pc, #148]	; (8000d60 <MOTOR_TurnOFF+0xa4>)
 8000ccc:	681b      	ldr	r3, [r3, #0]
 8000cce:	4a25      	ldr	r2, [pc, #148]	; (8000d64 <MOTOR_TurnOFF+0xa8>)
 8000cd0:	2100      	movs	r1, #0
 8000cd2:	0018      	movs	r0, r3
 8000cd4:	f000 fc3e 	bl	8001554 <TIM_OnPulse>
	TIM_OnReload(TIM_MOTOR, MOTOR_TimerBlankIRQ);
 8000cd8:	4b21      	ldr	r3, [pc, #132]	; (8000d60 <MOTOR_TurnOFF+0xa4>)
 8000cda:	681b      	ldr	r3, [r3, #0]
 8000cdc:	4a21      	ldr	r2, [pc, #132]	; (8000d64 <MOTOR_TurnOFF+0xa8>)
 8000cde:	0011      	movs	r1, r2
 8000ce0:	0018      	movs	r0, r3
 8000ce2:	f000 fc23 	bl	800152c <TIM_OnReload>
	TIM_SetPulse(TIM_MOTOR, TIM_MOTOR_CH, 0);
 8000ce6:	4b1e      	ldr	r3, [pc, #120]	; (8000d60 <MOTOR_TurnOFF+0xa4>)
 8000ce8:	681b      	ldr	r3, [r3, #0]
 8000cea:	2200      	movs	r2, #0
 8000cec:	2100      	movs	r1, #0
 8000cee:	0018      	movs	r0, r3
 8000cf0:	f000 fc57 	bl	80015a2 <TIM_SetPulse>
	TIM_Deinit(TIM_MOTOR);
 8000cf4:	4b1a      	ldr	r3, [pc, #104]	; (8000d60 <MOTOR_TurnOFF+0xa4>)
 8000cf6:	681b      	ldr	r3, [r3, #0]
 8000cf8:	0018      	movs	r0, r3
 8000cfa:	f000 fcad 	bl	8001658 <TIM_Deinit>

	GPIO_Reset(FET_P1_GPIO, FET_P1_PIN);
 8000cfe:	23a0      	movs	r3, #160	; 0xa0
 8000d00:	05db      	lsls	r3, r3, #23
 8000d02:	2102      	movs	r1, #2
 8000d04:	0018      	movs	r0, r3
 8000d06:	f7ff fec1 	bl	8000a8c <GPIO_Reset>
	GPIO_Reset(FET_N2_GPIO, FET_N2_PIN);
 8000d0a:	2380      	movs	r3, #128	; 0x80
 8000d0c:	00da      	lsls	r2, r3, #3
 8000d0e:	23a0      	movs	r3, #160	; 0xa0
 8000d10:	05db      	lsls	r3, r3, #23
 8000d12:	0011      	movs	r1, r2
 8000d14:	0018      	movs	r0, r3
 8000d16:	f7ff feb9 	bl	8000a8c <GPIO_Reset>
	GPIO_Reset(FET_P2_GPIO, FET_P2_PIN);
 8000d1a:	23a0      	movs	r3, #160	; 0xa0
 8000d1c:	05db      	lsls	r3, r3, #23
 8000d1e:	2108      	movs	r1, #8
 8000d20:	0018      	movs	r0, r3
 8000d22:	f7ff feb3 	bl	8000a8c <GPIO_Reset>
	GPIO_Reset(FET_N1_GPIO, FET_N1_PIN);
 8000d26:	23a0      	movs	r3, #160	; 0xa0
 8000d28:	05db      	lsls	r3, r3, #23
 8000d2a:	2101      	movs	r1, #1
 8000d2c:	0018      	movs	r0, r3
 8000d2e:	f7ff fead 	bl	8000a8c <GPIO_Reset>
	CORE_Delay(10);
 8000d32:	200a      	movs	r0, #10
 8000d34:	f7ff fc2a 	bl	800058c <CORE_Delay>

	if (MOTOR_BRAKING)
	{
		GPIO_Set(FET_N1_GPIO, FET_N1_PIN);
 8000d38:	23a0      	movs	r3, #160	; 0xa0
 8000d3a:	05db      	lsls	r3, r3, #23
 8000d3c:	2101      	movs	r1, #1
 8000d3e:	0018      	movs	r0, r3
 8000d40:	f7ff fe98 	bl	8000a74 <GPIO_Set>
		GPIO_Set(FET_N2_GPIO, FET_N2_PIN);
 8000d44:	2380      	movs	r3, #128	; 0x80
 8000d46:	00da      	lsls	r2, r3, #3
 8000d48:	23a0      	movs	r3, #160	; 0xa0
 8000d4a:	05db      	lsls	r3, r3, #23
 8000d4c:	0011      	movs	r1, r2
 8000d4e:	0018      	movs	r0, r3
 8000d50:	f7ff fe90 	bl	8000a74 <GPIO_Set>
		CORE_Delay(5);
 8000d54:	2005      	movs	r0, #5
 8000d56:	f7ff fc19 	bl	800058c <CORE_Delay>
	}
}
 8000d5a:	46c0      	nop			; (mov r8, r8)
 8000d5c:	46bd      	mov	sp, r7
 8000d5e:	bd80      	pop	{r7, pc}
 8000d60:	2000001c 	.word	0x2000001c
 8000d64:	08000fc5 	.word	0x08000fc5

08000d68 <MOTOR_UpdatePWM>:

void MOTOR_UpdatePWM(int32_t d)
{
 8000d68:	b580      	push	{r7, lr}
 8000d6a:	b082      	sub	sp, #8
 8000d6c:	af00      	add	r7, sp, #0
 8000d6e:	6078      	str	r0, [r7, #4]
	TIM_SetPulse(TIM_MOTOR, TIM_MOTOR_CH, d);
 8000d70:	4b05      	ldr	r3, [pc, #20]	; (8000d88 <MOTOR_UpdatePWM+0x20>)
 8000d72:	681b      	ldr	r3, [r3, #0]
 8000d74:	687a      	ldr	r2, [r7, #4]
 8000d76:	2100      	movs	r1, #0
 8000d78:	0018      	movs	r0, r3
 8000d7a:	f000 fc12 	bl	80015a2 <TIM_SetPulse>
}
 8000d7e:	46c0      	nop			; (mov r8, r8)
 8000d80:	46bd      	mov	sp, r7
 8000d82:	b002      	add	sp, #8
 8000d84:	bd80      	pop	{r7, pc}
 8000d86:	46c0      	nop			; (mov r8, r8)
 8000d88:	2000001c 	.word	0x2000001c

08000d8c <MOTOR_DirectionChanged>:

void MOTOR_DirectionChanged(int32_t d, bool fwd)
{
 8000d8c:	b580      	push	{r7, lr}
 8000d8e:	b082      	sub	sp, #8
 8000d90:	af00      	add	r7, sp, #0
 8000d92:	6078      	str	r0, [r7, #4]
 8000d94:	000a      	movs	r2, r1
 8000d96:	1cfb      	adds	r3, r7, #3
 8000d98:	701a      	strb	r2, [r3, #0]
	if (fwd) // going forward
 8000d9a:	1cfb      	adds	r3, r7, #3
 8000d9c:	781b      	ldrb	r3, [r3, #0]
 8000d9e:	2b00      	cmp	r3, #0
 8000da0:	d067      	beq.n	8000e72 <MOTOR_DirectionChanged+0xe6>
	{
		TIM_Stop(TIM_MOTOR);
 8000da2:	4b69      	ldr	r3, [pc, #420]	; (8000f48 <MOTOR_DirectionChanged+0x1bc>)
 8000da4:	681b      	ldr	r3, [r3, #0]
 8000da6:	0018      	movs	r0, r3
 8000da8:	f000 fc3e 	bl	8001628 <TIM_Stop>
		TIM_OnPulse(TIM_MOTOR, TIM_MOTOR_CH, MOTOR_TimerBlankIRQ);
 8000dac:	4b66      	ldr	r3, [pc, #408]	; (8000f48 <MOTOR_DirectionChanged+0x1bc>)
 8000dae:	681b      	ldr	r3, [r3, #0]
 8000db0:	4a66      	ldr	r2, [pc, #408]	; (8000f4c <MOTOR_DirectionChanged+0x1c0>)
 8000db2:	2100      	movs	r1, #0
 8000db4:	0018      	movs	r0, r3
 8000db6:	f000 fbcd 	bl	8001554 <TIM_OnPulse>
		TIM_OnReload(TIM_MOTOR, MOTOR_TimerBlankIRQ);
 8000dba:	4b63      	ldr	r3, [pc, #396]	; (8000f48 <MOTOR_DirectionChanged+0x1bc>)
 8000dbc:	681b      	ldr	r3, [r3, #0]
 8000dbe:	4a63      	ldr	r2, [pc, #396]	; (8000f4c <MOTOR_DirectionChanged+0x1c0>)
 8000dc0:	0011      	movs	r1, r2
 8000dc2:	0018      	movs	r0, r3
 8000dc4:	f000 fbb2 	bl	800152c <TIM_OnReload>
		TIM_SetPulse(TIM_MOTOR, TIM_MOTOR_CH, 0);
 8000dc8:	4b5f      	ldr	r3, [pc, #380]	; (8000f48 <MOTOR_DirectionChanged+0x1bc>)
 8000dca:	681b      	ldr	r3, [r3, #0]
 8000dcc:	2200      	movs	r2, #0
 8000dce:	2100      	movs	r1, #0
 8000dd0:	0018      	movs	r0, r3
 8000dd2:	f000 fbe6 	bl	80015a2 <TIM_SetPulse>
		TIM_Deinit(TIM_MOTOR);
 8000dd6:	4b5c      	ldr	r3, [pc, #368]	; (8000f48 <MOTOR_DirectionChanged+0x1bc>)
 8000dd8:	681b      	ldr	r3, [r3, #0]
 8000dda:	0018      	movs	r0, r3
 8000ddc:	f000 fc3c 	bl	8001658 <TIM_Deinit>

		GPIO_Reset(FET_P1_GPIO, FET_P1_PIN);
 8000de0:	23a0      	movs	r3, #160	; 0xa0
 8000de2:	05db      	lsls	r3, r3, #23
 8000de4:	2102      	movs	r1, #2
 8000de6:	0018      	movs	r0, r3
 8000de8:	f7ff fe50 	bl	8000a8c <GPIO_Reset>
		GPIO_Reset(FET_P2_GPIO, FET_P2_PIN);
 8000dec:	23a0      	movs	r3, #160	; 0xa0
 8000dee:	05db      	lsls	r3, r3, #23
 8000df0:	2108      	movs	r1, #8
 8000df2:	0018      	movs	r0, r3
 8000df4:	f7ff fe4a 	bl	8000a8c <GPIO_Reset>
		GPIO_Reset(FET_N1_GPIO, FET_N1_PIN);
 8000df8:	23a0      	movs	r3, #160	; 0xa0
 8000dfa:	05db      	lsls	r3, r3, #23
 8000dfc:	2101      	movs	r1, #1
 8000dfe:	0018      	movs	r0, r3
 8000e00:	f7ff fe44 	bl	8000a8c <GPIO_Reset>
		GPIO_Reset(FET_N2_GPIO, FET_N2_PIN);
 8000e04:	2380      	movs	r3, #128	; 0x80
 8000e06:	00da      	lsls	r2, r3, #3
 8000e08:	23a0      	movs	r3, #160	; 0xa0
 8000e0a:	05db      	lsls	r3, r3, #23
 8000e0c:	0011      	movs	r1, r2
 8000e0e:	0018      	movs	r0, r3
 8000e10:	f7ff fe3c 	bl	8000a8c <GPIO_Reset>
		CORE_Delay(10);
 8000e14:	200a      	movs	r0, #10
 8000e16:	f7ff fbb9 	bl	800058c <CORE_Delay>
		GPIO_Set(FET_P1_GPIO, FET_P1_PIN);
 8000e1a:	23a0      	movs	r3, #160	; 0xa0
 8000e1c:	05db      	lsls	r3, r3, #23
 8000e1e:	2102      	movs	r1, #2
 8000e20:	0018      	movs	r0, r3
 8000e22:	f7ff fe27 	bl	8000a74 <GPIO_Set>
		CORE_Delay(5);
 8000e26:	2005      	movs	r0, #5
 8000e28:	f7ff fbb0 	bl	800058c <CORE_Delay>

		TIM_Init(TIM_MOTOR, TIM_MOTOR_FREQ, TIM_MOTOR_RELOAD);
 8000e2c:	4b46      	ldr	r3, [pc, #280]	; (8000f48 <MOTOR_DirectionChanged+0x1bc>)
 8000e2e:	681b      	ldr	r3, [r3, #0]
 8000e30:	22fa      	movs	r2, #250	; 0xfa
 8000e32:	0052      	lsls	r2, r2, #1
 8000e34:	4946      	ldr	r1, [pc, #280]	; (8000f50 <MOTOR_DirectionChanged+0x1c4>)
 8000e36:	0018      	movs	r0, r3
 8000e38:	f000 fb28 	bl	800148c <TIM_Init>
		TIM_OnPulse(TIM_MOTOR, TIM_MOTOR_CH, MOTOR_N2TimerPulseISR);
 8000e3c:	4b42      	ldr	r3, [pc, #264]	; (8000f48 <MOTOR_DirectionChanged+0x1bc>)
 8000e3e:	681b      	ldr	r3, [r3, #0]
 8000e40:	4a44      	ldr	r2, [pc, #272]	; (8000f54 <MOTOR_DirectionChanged+0x1c8>)
 8000e42:	2100      	movs	r1, #0
 8000e44:	0018      	movs	r0, r3
 8000e46:	f000 fb85 	bl	8001554 <TIM_OnPulse>
		TIM_OnReload(TIM_MOTOR, MOTOR_N2TimerReloadISR);
 8000e4a:	4b3f      	ldr	r3, [pc, #252]	; (8000f48 <MOTOR_DirectionChanged+0x1bc>)
 8000e4c:	681b      	ldr	r3, [r3, #0]
 8000e4e:	4a42      	ldr	r2, [pc, #264]	; (8000f58 <MOTOR_DirectionChanged+0x1cc>)
 8000e50:	0011      	movs	r1, r2
 8000e52:	0018      	movs	r0, r3
 8000e54:	f000 fb6a 	bl	800152c <TIM_OnReload>
		TIM_SetPulse(TIM_MOTOR, TIM_MOTOR_CH, d);
 8000e58:	4b3b      	ldr	r3, [pc, #236]	; (8000f48 <MOTOR_DirectionChanged+0x1bc>)
 8000e5a:	681b      	ldr	r3, [r3, #0]
 8000e5c:	687a      	ldr	r2, [r7, #4]
 8000e5e:	2100      	movs	r1, #0
 8000e60:	0018      	movs	r0, r3
 8000e62:	f000 fb9e 	bl	80015a2 <TIM_SetPulse>
		TIM_Start(TIM_MOTOR);
 8000e66:	4b38      	ldr	r3, [pc, #224]	; (8000f48 <MOTOR_DirectionChanged+0x1bc>)
 8000e68:	681b      	ldr	r3, [r3, #0]
 8000e6a:	0018      	movs	r0, r3
 8000e6c:	f000 fbc7 	bl	80015fe <TIM_Start>
		TIM_OnPulse(TIM_MOTOR, TIM_MOTOR_CH, MOTOR_N1TimerPulseISR);
		TIM_OnReload(TIM_MOTOR, MOTOR_N1TimerReloadISR);
		TIM_SetPulse(TIM_MOTOR, TIM_MOTOR_CH, d);
		TIM_Start(TIM_MOTOR);
	}
}
 8000e70:	e066      	b.n	8000f40 <MOTOR_DirectionChanged+0x1b4>
		TIM_Stop(TIM_MOTOR);
 8000e72:	4b35      	ldr	r3, [pc, #212]	; (8000f48 <MOTOR_DirectionChanged+0x1bc>)
 8000e74:	681b      	ldr	r3, [r3, #0]
 8000e76:	0018      	movs	r0, r3
 8000e78:	f000 fbd6 	bl	8001628 <TIM_Stop>
		TIM_OnPulse(TIM_MOTOR, TIM_MOTOR_CH, MOTOR_TimerBlankIRQ);
 8000e7c:	4b32      	ldr	r3, [pc, #200]	; (8000f48 <MOTOR_DirectionChanged+0x1bc>)
 8000e7e:	681b      	ldr	r3, [r3, #0]
 8000e80:	4a32      	ldr	r2, [pc, #200]	; (8000f4c <MOTOR_DirectionChanged+0x1c0>)
 8000e82:	2100      	movs	r1, #0
 8000e84:	0018      	movs	r0, r3
 8000e86:	f000 fb65 	bl	8001554 <TIM_OnPulse>
		TIM_OnReload(TIM_MOTOR, MOTOR_TimerBlankIRQ);
 8000e8a:	4b2f      	ldr	r3, [pc, #188]	; (8000f48 <MOTOR_DirectionChanged+0x1bc>)
 8000e8c:	681b      	ldr	r3, [r3, #0]
 8000e8e:	4a2f      	ldr	r2, [pc, #188]	; (8000f4c <MOTOR_DirectionChanged+0x1c0>)
 8000e90:	0011      	movs	r1, r2
 8000e92:	0018      	movs	r0, r3
 8000e94:	f000 fb4a 	bl	800152c <TIM_OnReload>
		TIM_SetPulse(TIM_MOTOR, TIM_MOTOR_CH, 0);
 8000e98:	4b2b      	ldr	r3, [pc, #172]	; (8000f48 <MOTOR_DirectionChanged+0x1bc>)
 8000e9a:	681b      	ldr	r3, [r3, #0]
 8000e9c:	2200      	movs	r2, #0
 8000e9e:	2100      	movs	r1, #0
 8000ea0:	0018      	movs	r0, r3
 8000ea2:	f000 fb7e 	bl	80015a2 <TIM_SetPulse>
		TIM_Deinit(TIM_MOTOR);
 8000ea6:	4b28      	ldr	r3, [pc, #160]	; (8000f48 <MOTOR_DirectionChanged+0x1bc>)
 8000ea8:	681b      	ldr	r3, [r3, #0]
 8000eaa:	0018      	movs	r0, r3
 8000eac:	f000 fbd4 	bl	8001658 <TIM_Deinit>
		GPIO_Reset(FET_P1_GPIO, FET_P1_PIN);
 8000eb0:	23a0      	movs	r3, #160	; 0xa0
 8000eb2:	05db      	lsls	r3, r3, #23
 8000eb4:	2102      	movs	r1, #2
 8000eb6:	0018      	movs	r0, r3
 8000eb8:	f7ff fde8 	bl	8000a8c <GPIO_Reset>
		GPIO_Reset(FET_P2_GPIO, FET_P2_PIN);
 8000ebc:	23a0      	movs	r3, #160	; 0xa0
 8000ebe:	05db      	lsls	r3, r3, #23
 8000ec0:	2108      	movs	r1, #8
 8000ec2:	0018      	movs	r0, r3
 8000ec4:	f7ff fde2 	bl	8000a8c <GPIO_Reset>
		GPIO_Reset(FET_N1_GPIO, FET_N1_PIN);
 8000ec8:	23a0      	movs	r3, #160	; 0xa0
 8000eca:	05db      	lsls	r3, r3, #23
 8000ecc:	2101      	movs	r1, #1
 8000ece:	0018      	movs	r0, r3
 8000ed0:	f7ff fddc 	bl	8000a8c <GPIO_Reset>
		GPIO_Reset(FET_N2_GPIO, FET_N2_PIN);
 8000ed4:	2380      	movs	r3, #128	; 0x80
 8000ed6:	00da      	lsls	r2, r3, #3
 8000ed8:	23a0      	movs	r3, #160	; 0xa0
 8000eda:	05db      	lsls	r3, r3, #23
 8000edc:	0011      	movs	r1, r2
 8000ede:	0018      	movs	r0, r3
 8000ee0:	f7ff fdd4 	bl	8000a8c <GPIO_Reset>
		CORE_Delay(10);
 8000ee4:	200a      	movs	r0, #10
 8000ee6:	f7ff fb51 	bl	800058c <CORE_Delay>
		GPIO_Set(FET_P2_GPIO, FET_P2_PIN);
 8000eea:	23a0      	movs	r3, #160	; 0xa0
 8000eec:	05db      	lsls	r3, r3, #23
 8000eee:	2108      	movs	r1, #8
 8000ef0:	0018      	movs	r0, r3
 8000ef2:	f7ff fdbf 	bl	8000a74 <GPIO_Set>
		CORE_Delay(5);
 8000ef6:	2005      	movs	r0, #5
 8000ef8:	f7ff fb48 	bl	800058c <CORE_Delay>
		TIM_Init(TIM_MOTOR, TIM_MOTOR_FREQ, TIM_MOTOR_RELOAD);
 8000efc:	4b12      	ldr	r3, [pc, #72]	; (8000f48 <MOTOR_DirectionChanged+0x1bc>)
 8000efe:	681b      	ldr	r3, [r3, #0]
 8000f00:	22fa      	movs	r2, #250	; 0xfa
 8000f02:	0052      	lsls	r2, r2, #1
 8000f04:	4912      	ldr	r1, [pc, #72]	; (8000f50 <MOTOR_DirectionChanged+0x1c4>)
 8000f06:	0018      	movs	r0, r3
 8000f08:	f000 fac0 	bl	800148c <TIM_Init>
		TIM_OnPulse(TIM_MOTOR, TIM_MOTOR_CH, MOTOR_N1TimerPulseISR);
 8000f0c:	4b0e      	ldr	r3, [pc, #56]	; (8000f48 <MOTOR_DirectionChanged+0x1bc>)
 8000f0e:	681b      	ldr	r3, [r3, #0]
 8000f10:	4a12      	ldr	r2, [pc, #72]	; (8000f5c <MOTOR_DirectionChanged+0x1d0>)
 8000f12:	2100      	movs	r1, #0
 8000f14:	0018      	movs	r0, r3
 8000f16:	f000 fb1d 	bl	8001554 <TIM_OnPulse>
		TIM_OnReload(TIM_MOTOR, MOTOR_N1TimerReloadISR);
 8000f1a:	4b0b      	ldr	r3, [pc, #44]	; (8000f48 <MOTOR_DirectionChanged+0x1bc>)
 8000f1c:	681b      	ldr	r3, [r3, #0]
 8000f1e:	4a10      	ldr	r2, [pc, #64]	; (8000f60 <MOTOR_DirectionChanged+0x1d4>)
 8000f20:	0011      	movs	r1, r2
 8000f22:	0018      	movs	r0, r3
 8000f24:	f000 fb02 	bl	800152c <TIM_OnReload>
		TIM_SetPulse(TIM_MOTOR, TIM_MOTOR_CH, d);
 8000f28:	4b07      	ldr	r3, [pc, #28]	; (8000f48 <MOTOR_DirectionChanged+0x1bc>)
 8000f2a:	681b      	ldr	r3, [r3, #0]
 8000f2c:	687a      	ldr	r2, [r7, #4]
 8000f2e:	2100      	movs	r1, #0
 8000f30:	0018      	movs	r0, r3
 8000f32:	f000 fb36 	bl	80015a2 <TIM_SetPulse>
		TIM_Start(TIM_MOTOR);
 8000f36:	4b04      	ldr	r3, [pc, #16]	; (8000f48 <MOTOR_DirectionChanged+0x1bc>)
 8000f38:	681b      	ldr	r3, [r3, #0]
 8000f3a:	0018      	movs	r0, r3
 8000f3c:	f000 fb5f 	bl	80015fe <TIM_Start>
}
 8000f40:	46c0      	nop			; (mov r8, r8)
 8000f42:	46bd      	mov	sp, r7
 8000f44:	b002      	add	sp, #8
 8000f46:	bd80      	pop	{r7, pc}
 8000f48:	2000001c 	.word	0x2000001c
 8000f4c:	08000fc5 	.word	0x08000fc5
 8000f50:	0000c3b4 	.word	0x0000c3b4
 8000f54:	08000f65 	.word	0x08000f65
 8000f58:	08000f7f 	.word	0x08000f7f
 8000f5c:	08000f99 	.word	0x08000f99
 8000f60:	08000faf 	.word	0x08000faf

08000f64 <MOTOR_N2TimerPulseISR>:
/*
 * INTERRUPT ROUTINES
 */

void MOTOR_N2TimerPulseISR (void)
{
 8000f64:	b580      	push	{r7, lr}
 8000f66:	af00      	add	r7, sp, #0
	GPIO_Reset(FET_N2_GPIO, FET_N2_PIN);
 8000f68:	2380      	movs	r3, #128	; 0x80
 8000f6a:	00da      	lsls	r2, r3, #3
 8000f6c:	23a0      	movs	r3, #160	; 0xa0
 8000f6e:	05db      	lsls	r3, r3, #23
 8000f70:	0011      	movs	r1, r2
 8000f72:	0018      	movs	r0, r3
 8000f74:	f7ff fd8a 	bl	8000a8c <GPIO_Reset>
}
 8000f78:	46c0      	nop			; (mov r8, r8)
 8000f7a:	46bd      	mov	sp, r7
 8000f7c:	bd80      	pop	{r7, pc}

08000f7e <MOTOR_N2TimerReloadISR>:

void MOTOR_N2TimerReloadISR (void)
{
 8000f7e:	b580      	push	{r7, lr}
 8000f80:	af00      	add	r7, sp, #0
	GPIO_Set(FET_N2_GPIO, FET_N2_PIN);
 8000f82:	2380      	movs	r3, #128	; 0x80
 8000f84:	00da      	lsls	r2, r3, #3
 8000f86:	23a0      	movs	r3, #160	; 0xa0
 8000f88:	05db      	lsls	r3, r3, #23
 8000f8a:	0011      	movs	r1, r2
 8000f8c:	0018      	movs	r0, r3
 8000f8e:	f7ff fd71 	bl	8000a74 <GPIO_Set>
}
 8000f92:	46c0      	nop			; (mov r8, r8)
 8000f94:	46bd      	mov	sp, r7
 8000f96:	bd80      	pop	{r7, pc}

08000f98 <MOTOR_N1TimerPulseISR>:

void MOTOR_N1TimerPulseISR (void)
{
 8000f98:	b580      	push	{r7, lr}
 8000f9a:	af00      	add	r7, sp, #0
	GPIO_Reset(FET_N1_GPIO, FET_N1_PIN);
 8000f9c:	23a0      	movs	r3, #160	; 0xa0
 8000f9e:	05db      	lsls	r3, r3, #23
 8000fa0:	2101      	movs	r1, #1
 8000fa2:	0018      	movs	r0, r3
 8000fa4:	f7ff fd72 	bl	8000a8c <GPIO_Reset>
}
 8000fa8:	46c0      	nop			; (mov r8, r8)
 8000faa:	46bd      	mov	sp, r7
 8000fac:	bd80      	pop	{r7, pc}

08000fae <MOTOR_N1TimerReloadISR>:

void MOTOR_N1TimerReloadISR (void)
{
 8000fae:	b580      	push	{r7, lr}
 8000fb0:	af00      	add	r7, sp, #0
	GPIO_Set(FET_N1_GPIO, FET_N1_PIN);
 8000fb2:	23a0      	movs	r3, #160	; 0xa0
 8000fb4:	05db      	lsls	r3, r3, #23
 8000fb6:	2101      	movs	r1, #1
 8000fb8:	0018      	movs	r0, r3
 8000fba:	f7ff fd5b 	bl	8000a74 <GPIO_Set>
}
 8000fbe:	46c0      	nop			; (mov r8, r8)
 8000fc0:	46bd      	mov	sp, r7
 8000fc2:	bd80      	pop	{r7, pc}

08000fc4 <MOTOR_TimerBlankIRQ>:

void MOTOR_TimerBlankIRQ (void)
{
 8000fc4:	b580      	push	{r7, lr}
 8000fc6:	af00      	add	r7, sp, #0
	// Intentionally left blank
}
 8000fc8:	46c0      	nop			; (mov r8, r8)
 8000fca:	46bd      	mov	sp, r7
 8000fcc:	bd80      	pop	{r7, pc}

08000fce <GPIO_EnableInput>:
{
 8000fce:	b580      	push	{r7, lr}
 8000fd0:	b084      	sub	sp, #16
 8000fd2:	af00      	add	r7, sp, #0
 8000fd4:	60f8      	str	r0, [r7, #12]
 8000fd6:	60b9      	str	r1, [r7, #8]
 8000fd8:	1dfb      	adds	r3, r7, #7
 8000fda:	701a      	strb	r2, [r3, #0]
	GPIO_Init(gpio, pin, GPIO_Mode_Input | pull);
 8000fdc:	1dfb      	adds	r3, r7, #7
 8000fde:	781b      	ldrb	r3, [r3, #0]
 8000fe0:	b29a      	uxth	r2, r3
 8000fe2:	68b9      	ldr	r1, [r7, #8]
 8000fe4:	68fb      	ldr	r3, [r7, #12]
 8000fe6:	0018      	movs	r0, r3
 8000fe8:	f7ff fbb8 	bl	800075c <GPIO_Init>
}
 8000fec:	46c0      	nop			; (mov r8, r8)
 8000fee:	46bd      	mov	sp, r7
 8000ff0:	b004      	add	sp, #16
 8000ff2:	bd80      	pop	{r7, pc}

08000ff4 <GPIO_Read>:

static inline GPIO_State_t GPIO_Read(GPIO_t * gpio, uint32_t pin)
{
 8000ff4:	b580      	push	{r7, lr}
 8000ff6:	b082      	sub	sp, #8
 8000ff8:	af00      	add	r7, sp, #0
 8000ffa:	6078      	str	r0, [r7, #4]
 8000ffc:	6039      	str	r1, [r7, #0]
	return ((gpio->IDR & pin) > 0);
 8000ffe:	687b      	ldr	r3, [r7, #4]
 8001000:	691b      	ldr	r3, [r3, #16]
 8001002:	683a      	ldr	r2, [r7, #0]
 8001004:	4013      	ands	r3, r2
 8001006:	1e5a      	subs	r2, r3, #1
 8001008:	4193      	sbcs	r3, r2
 800100a:	b2db      	uxtb	r3, r3
}
 800100c:	0018      	movs	r0, r3
 800100e:	46bd      	mov	sp, r7
 8001010:	b002      	add	sp, #8
 8001012:	bd80      	pop	{r7, pc}

08001014 <TIM_Read>:
/*
 * INLINE FUNCTION DEFINITIONS
 */

static inline uint32_t TIM_Read(TIM_t * tim)
{
 8001014:	b580      	push	{r7, lr}
 8001016:	b082      	sub	sp, #8
 8001018:	af00      	add	r7, sp, #0
 800101a:	6078      	str	r0, [r7, #4]
	return tim->Instance->CNT;
 800101c:	687b      	ldr	r3, [r7, #4]
 800101e:	681b      	ldr	r3, [r3, #0]
 8001020:	6a5b      	ldr	r3, [r3, #36]	; 0x24
}
 8001022:	0018      	movs	r0, r3
 8001024:	46bd      	mov	sp, r7
 8001026:	b002      	add	sp, #8
 8001028:	bd80      	pop	{r7, pc}
	...

0800102c <CORE_GetTick>:
/*
 * INLINE FUNCTION DEFINITIONS
 */

static inline uint32_t CORE_GetTick(void)
{
 800102c:	b580      	push	{r7, lr}
 800102e:	af00      	add	r7, sp, #0
	return gTicks;
 8001030:	4b02      	ldr	r3, [pc, #8]	; (800103c <CORE_GetTick+0x10>)
 8001032:	681b      	ldr	r3, [r3, #0]
}
 8001034:	0018      	movs	r0, r3
 8001036:	46bd      	mov	sp, r7
 8001038:	bd80      	pop	{r7, pc}
 800103a:	46c0      	nop			; (mov r8, r8)
 800103c:	200000ec 	.word	0x200000ec

08001040 <RADIO_Init>:
/*
 * PUBLIC FUNCTIONS
 */

void RADIO_Init (void)
{
 8001040:	b580      	push	{r7, lr}
 8001042:	af00      	add	r7, sp, #0
	GPIO_EnableInput(RADIO_GPIO, RADIO_PIN, GPIO_Pull_None);
 8001044:	2380      	movs	r3, #128	; 0x80
 8001046:	0219      	lsls	r1, r3, #8
 8001048:	23a0      	movs	r3, #160	; 0xa0
 800104a:	05db      	lsls	r3, r3, #23
 800104c:	2200      	movs	r2, #0
 800104e:	0018      	movs	r0, r3
 8001050:	f7ff ffbd 	bl	8000fce <GPIO_EnableInput>
	GPIO_OnChange(RADIO_GPIO, RADIO_PIN, GPIO_IT_Both, RADIO_SPWM_IRQ);
 8001054:	4b0b      	ldr	r3, [pc, #44]	; (8001084 <RADIO_Init+0x44>)
 8001056:	2280      	movs	r2, #128	; 0x80
 8001058:	0211      	lsls	r1, r2, #8
 800105a:	22a0      	movs	r2, #160	; 0xa0
 800105c:	05d0      	lsls	r0, r2, #23
 800105e:	2203      	movs	r2, #3
 8001060:	f7ff fb50 	bl	8000704 <GPIO_OnChange>
	TIM_Init(TIM_RADIO, TIM_RADIO_FREQ, TIM_RADIO_RELOAD);
 8001064:	4b08      	ldr	r3, [pc, #32]	; (8001088 <RADIO_Init+0x48>)
 8001066:	681b      	ldr	r3, [r3, #0]
 8001068:	4a08      	ldr	r2, [pc, #32]	; (800108c <RADIO_Init+0x4c>)
 800106a:	4909      	ldr	r1, [pc, #36]	; (8001090 <RADIO_Init+0x50>)
 800106c:	0018      	movs	r0, r3
 800106e:	f000 fa0d 	bl	800148c <TIM_Init>
	TIM_Start(TIM_RADIO);
 8001072:	4b05      	ldr	r3, [pc, #20]	; (8001088 <RADIO_Init+0x48>)
 8001074:	681b      	ldr	r3, [r3, #0]
 8001076:	0018      	movs	r0, r3
 8001078:	f000 fac1 	bl	80015fe <TIM_Start>
}
 800107c:	46c0      	nop			; (mov r8, r8)
 800107e:	46bd      	mov	sp, r7
 8001080:	bd80      	pop	{r7, pc}
 8001082:	46c0      	nop			; (mov r8, r8)
 8001084:	08001095 	.word	0x08001095
 8001088:	20000038 	.word	0x20000038
 800108c:	0000ffff 	.word	0x0000ffff
 8001090:	000f4240 	.word	0x000f4240

08001094 <RADIO_SPWM_IRQ>:
/*
 * INTERRUPT ROUTINES
 */

void RADIO_SPWM_IRQ (void)
{
 8001094:	b580      	push	{r7, lr}
 8001096:	b082      	sub	sp, #8
 8001098:	af00      	add	r7, sp, #0
	uint16_t now = TIM_Read(TIM_RADIO);
 800109a:	4b1c      	ldr	r3, [pc, #112]	; (800110c <RADIO_SPWM_IRQ+0x78>)
 800109c:	681b      	ldr	r3, [r3, #0]
 800109e:	0018      	movs	r0, r3
 80010a0:	f7ff ffb8 	bl	8001014 <TIM_Read>
 80010a4:	0002      	movs	r2, r0
 80010a6:	1dbb      	adds	r3, r7, #6
 80010a8:	801a      	strh	r2, [r3, #0]
	uint16_t pulse = 0;
 80010aa:	1d3b      	adds	r3, r7, #4
 80010ac:	2200      	movs	r2, #0
 80010ae:	801a      	strh	r2, [r3, #0]
	static uint16_t tick;

	if (GPIO_Read(RADIO_GPIO, RADIO_PIN))
 80010b0:	2380      	movs	r3, #128	; 0x80
 80010b2:	021a      	lsls	r2, r3, #8
 80010b4:	23a0      	movs	r3, #160	; 0xa0
 80010b6:	05db      	lsls	r3, r3, #23
 80010b8:	0011      	movs	r1, r2
 80010ba:	0018      	movs	r0, r3
 80010bc:	f7ff ff9a 	bl	8000ff4 <GPIO_Read>
 80010c0:	1e03      	subs	r3, r0, #0
 80010c2:	d004      	beq.n	80010ce <RADIO_SPWM_IRQ+0x3a>
	{
		tick = now;
 80010c4:	4b12      	ldr	r3, [pc, #72]	; (8001110 <RADIO_SPWM_IRQ+0x7c>)
 80010c6:	1dba      	adds	r2, r7, #6
 80010c8:	8812      	ldrh	r2, [r2, #0]
 80010ca:	801a      	strh	r2, [r3, #0]
		{
			input = pulse;
			inputHeartbeat = CORE_GetTick();
		}
	}
}
 80010cc:	e01a      	b.n	8001104 <RADIO_SPWM_IRQ+0x70>
		pulse = now - tick;
 80010ce:	4b10      	ldr	r3, [pc, #64]	; (8001110 <RADIO_SPWM_IRQ+0x7c>)
 80010d0:	881a      	ldrh	r2, [r3, #0]
 80010d2:	1d3b      	adds	r3, r7, #4
 80010d4:	1db9      	adds	r1, r7, #6
 80010d6:	8809      	ldrh	r1, [r1, #0]
 80010d8:	1a8a      	subs	r2, r1, r2
 80010da:	801a      	strh	r2, [r3, #0]
		if (pulse <= (RADIO_MAX + RADIO_THRESH) && pulse >= (RADIO_MIN - RADIO_THRESH))
 80010dc:	1d3b      	adds	r3, r7, #4
 80010de:	881b      	ldrh	r3, [r3, #0]
 80010e0:	4a0c      	ldr	r2, [pc, #48]	; (8001114 <RADIO_SPWM_IRQ+0x80>)
 80010e2:	4293      	cmp	r3, r2
 80010e4:	d80e      	bhi.n	8001104 <RADIO_SPWM_IRQ+0x70>
 80010e6:	1d3b      	adds	r3, r7, #4
 80010e8:	881a      	ldrh	r2, [r3, #0]
 80010ea:	23c8      	movs	r3, #200	; 0xc8
 80010ec:	009b      	lsls	r3, r3, #2
 80010ee:	429a      	cmp	r2, r3
 80010f0:	d308      	bcc.n	8001104 <RADIO_SPWM_IRQ+0x70>
			input = pulse;
 80010f2:	4b09      	ldr	r3, [pc, #36]	; (8001118 <RADIO_SPWM_IRQ+0x84>)
 80010f4:	1d3a      	adds	r2, r7, #4
 80010f6:	8812      	ldrh	r2, [r2, #0]
 80010f8:	801a      	strh	r2, [r3, #0]
			inputHeartbeat = CORE_GetTick();
 80010fa:	f7ff ff97 	bl	800102c <CORE_GetTick>
 80010fe:	0002      	movs	r2, r0
 8001100:	4b06      	ldr	r3, [pc, #24]	; (800111c <RADIO_SPWM_IRQ+0x88>)
 8001102:	601a      	str	r2, [r3, #0]
}
 8001104:	46c0      	nop			; (mov r8, r8)
 8001106:	46bd      	mov	sp, r7
 8001108:	b002      	add	sp, #8
 800110a:	bd80      	pop	{r7, pc}
 800110c:	20000038 	.word	0x20000038
 8001110:	20000138 	.word	0x20000138
 8001114:	00000898 	.word	0x00000898
 8001118:	20000140 	.word	0x20000140
 800111c:	20000144 	.word	0x20000144

08001120 <CORE_GetTick>:
{
 8001120:	b580      	push	{r7, lr}
 8001122:	af00      	add	r7, sp, #0
	return gTicks;
 8001124:	4b02      	ldr	r3, [pc, #8]	; (8001130 <CORE_GetTick+0x10>)
 8001126:	681b      	ldr	r3, [r3, #0]
}
 8001128:	0018      	movs	r0, r3
 800112a:	46bd      	mov	sp, r7
 800112c:	bd80      	pop	{r7, pc}
 800112e:	46c0      	nop			; (mov r8, r8)
 8001130:	200000ec 	.word	0x200000ec

08001134 <GPIO_EnableOutput>:
{
 8001134:	b580      	push	{r7, lr}
 8001136:	b084      	sub	sp, #16
 8001138:	af00      	add	r7, sp, #0
 800113a:	60f8      	str	r0, [r7, #12]
 800113c:	60b9      	str	r1, [r7, #8]
 800113e:	1dfb      	adds	r3, r7, #7
 8001140:	701a      	strb	r2, [r3, #0]
	GPIO_Write(gpio, pin, state);
 8001142:	1dfb      	adds	r3, r7, #7
 8001144:	781a      	ldrb	r2, [r3, #0]
 8001146:	68b9      	ldr	r1, [r7, #8]
 8001148:	68fb      	ldr	r3, [r7, #12]
 800114a:	0018      	movs	r0, r3
 800114c:	f7ff fabe 	bl	80006cc <GPIO_Write>
	GPIO_Init(gpio, pin, GPIO_Mode_Output);
 8001150:	68b9      	ldr	r1, [r7, #8]
 8001152:	68fb      	ldr	r3, [r7, #12]
 8001154:	2201      	movs	r2, #1
 8001156:	0018      	movs	r0, r3
 8001158:	f7ff fb00 	bl	800075c <GPIO_Init>
}
 800115c:	46c0      	nop			; (mov r8, r8)
 800115e:	46bd      	mov	sp, r7
 8001160:	b004      	add	sp, #16
 8001162:	bd80      	pop	{r7, pc}

08001164 <GPIO_Set>:
{
 8001164:	b580      	push	{r7, lr}
 8001166:	b082      	sub	sp, #8
 8001168:	af00      	add	r7, sp, #0
 800116a:	6078      	str	r0, [r7, #4]
 800116c:	6039      	str	r1, [r7, #0]
	gpio->BSRR = (uint32_t)pin;
 800116e:	687b      	ldr	r3, [r7, #4]
 8001170:	683a      	ldr	r2, [r7, #0]
 8001172:	619a      	str	r2, [r3, #24]
}
 8001174:	46c0      	nop			; (mov r8, r8)
 8001176:	46bd      	mov	sp, r7
 8001178:	b002      	add	sp, #8
 800117a:	bd80      	pop	{r7, pc}

0800117c <GPIO_Reset>:
{
 800117c:	b580      	push	{r7, lr}
 800117e:	b082      	sub	sp, #8
 8001180:	af00      	add	r7, sp, #0
 8001182:	6078      	str	r0, [r7, #4]
 8001184:	6039      	str	r1, [r7, #0]
	gpio->BRR = (uint32_t)pin;
 8001186:	687b      	ldr	r3, [r7, #4]
 8001188:	683a      	ldr	r2, [r7, #0]
 800118a:	629a      	str	r2, [r3, #40]	; 0x28
}
 800118c:	46c0      	nop			; (mov r8, r8)
 800118e:	46bd      	mov	sp, r7
 8001190:	b002      	add	sp, #8
 8001192:	bd80      	pop	{r7, pc}

08001194 <GPIO_Read>:
{
 8001194:	b580      	push	{r7, lr}
 8001196:	b082      	sub	sp, #8
 8001198:	af00      	add	r7, sp, #0
 800119a:	6078      	str	r0, [r7, #4]
 800119c:	6039      	str	r1, [r7, #0]
	return ((gpio->IDR & pin) > 0);
 800119e:	687b      	ldr	r3, [r7, #4]
 80011a0:	691b      	ldr	r3, [r3, #16]
 80011a2:	683a      	ldr	r2, [r7, #0]
 80011a4:	4013      	ands	r3, r2
 80011a6:	1e5a      	subs	r2, r3, #1
 80011a8:	4193      	sbcs	r3, r2
 80011aa:	b2db      	uxtb	r3, r3
}
 80011ac:	0018      	movs	r0, r3
 80011ae:	46bd      	mov	sp, r7
 80011b0:	b002      	add	sp, #8
 80011b2:	bd80      	pop	{r7, pc}

080011b4 <SYSTEM_Init>:
/*
 * PUBLIC FUNCTIONS
 */

void SYSTEM_Init (void)
{
 80011b4:	b580      	push	{r7, lr}
 80011b6:	b082      	sub	sp, #8
 80011b8:	af00      	add	r7, sp, #0
	GPIO_EnableOutput(LED_GRN_GPIO, LED_GRN_PIN, false);
 80011ba:	2380      	movs	r3, #128	; 0x80
 80011bc:	021b      	lsls	r3, r3, #8
 80011be:	4832      	ldr	r0, [pc, #200]	; (8001288 <SYSTEM_Init+0xd4>)
 80011c0:	2200      	movs	r2, #0
 80011c2:	0019      	movs	r1, r3
 80011c4:	f7ff ffb6 	bl	8001134 <GPIO_EnableOutput>
	GPIO_EnableOutput(LED_RED_GPIO, LED_RED_PIN, false);
 80011c8:	2380      	movs	r3, #128	; 0x80
 80011ca:	0159      	lsls	r1, r3, #5
 80011cc:	23a0      	movs	r3, #160	; 0xa0
 80011ce:	05db      	lsls	r3, r3, #23
 80011d0:	2200      	movs	r2, #0
 80011d2:	0018      	movs	r0, r3
 80011d4:	f7ff ffae 	bl	8001134 <GPIO_EnableOutput>

	ADC_Init();
 80011d8:	f7ff f822 	bl	8000220 <ADC_Init>
	CORE_Delay(10); // Let stabilize before taking reading
 80011dc:	200a      	movs	r0, #10
 80011de:	f7ff f9d5 	bl	800058c <CORE_Delay>
	uint32_t volt = AIN_AinToDivider(ADC_Read(BATTERY_CHANNEL),BATTERY_DET_RLOW, BATTERY_DET_RHIGH);
 80011e2:	4b2a      	ldr	r3, [pc, #168]	; (800128c <SYSTEM_Init+0xd8>)
 80011e4:	0018      	movs	r0, r3
 80011e6:	f7ff f879 	bl	80002dc <ADC_Read>
 80011ea:	4a29      	ldr	r2, [pc, #164]	; (8001290 <SYSTEM_Init+0xdc>)
 80011ec:	23e1      	movs	r3, #225	; 0xe1
 80011ee:	00db      	lsls	r3, r3, #3
 80011f0:	0019      	movs	r1, r3
 80011f2:	f7ff f895 	bl	8000320 <AIN_AinToDivider>
 80011f6:	0003      	movs	r3, r0
 80011f8:	607b      	str	r3, [r7, #4]

	if (volt >= BATT_1S_LOW && volt <= BATT_1S_HIGH)
 80011fa:	687b      	ldr	r3, [r7, #4]
 80011fc:	4a25      	ldr	r2, [pc, #148]	; (8001294 <SYSTEM_Init+0xe0>)
 80011fe:	4293      	cmp	r3, r2
 8001200:	d90a      	bls.n	8001218 <SYSTEM_Init+0x64>
 8001202:	687b      	ldr	r3, [r7, #4]
 8001204:	4a24      	ldr	r2, [pc, #144]	; (8001298 <SYSTEM_Init+0xe4>)
 8001206:	4293      	cmp	r3, r2
 8001208:	d806      	bhi.n	8001218 <SYSTEM_Init+0x64>
	{
		battery_fault = BATT_1S_LOW;
 800120a:	4b24      	ldr	r3, [pc, #144]	; (800129c <SYSTEM_Init+0xe8>)
 800120c:	4a24      	ldr	r2, [pc, #144]	; (80012a0 <SYSTEM_Init+0xec>)
 800120e:	601a      	str	r2, [r3, #0]
		battery_warn = BATT_1S_LOW + BATT_WARNING;
 8001210:	4b24      	ldr	r3, [pc, #144]	; (80012a4 <SYSTEM_Init+0xf0>)
 8001212:	4a25      	ldr	r2, [pc, #148]	; (80012a8 <SYSTEM_Init+0xf4>)
 8001214:	601a      	str	r2, [r3, #0]
 8001216:	e033      	b.n	8001280 <SYSTEM_Init+0xcc>
	}
	else if (volt >= BATT_2S_LOW && volt <= BATT_2S_HIGH)
 8001218:	687b      	ldr	r3, [r7, #4]
 800121a:	4a24      	ldr	r2, [pc, #144]	; (80012ac <SYSTEM_Init+0xf8>)
 800121c:	4293      	cmp	r3, r2
 800121e:	d90a      	bls.n	8001236 <SYSTEM_Init+0x82>
 8001220:	687b      	ldr	r3, [r7, #4]
 8001222:	4a23      	ldr	r2, [pc, #140]	; (80012b0 <SYSTEM_Init+0xfc>)
 8001224:	4293      	cmp	r3, r2
 8001226:	d806      	bhi.n	8001236 <SYSTEM_Init+0x82>
	{
		battery_fault = BATT_2S_LOW;
 8001228:	4b1c      	ldr	r3, [pc, #112]	; (800129c <SYSTEM_Init+0xe8>)
 800122a:	4a22      	ldr	r2, [pc, #136]	; (80012b4 <SYSTEM_Init+0x100>)
 800122c:	601a      	str	r2, [r3, #0]
		battery_warn = BATT_2S_LOW + BATT_WARNING;
 800122e:	4b1d      	ldr	r3, [pc, #116]	; (80012a4 <SYSTEM_Init+0xf0>)
 8001230:	4a21      	ldr	r2, [pc, #132]	; (80012b8 <SYSTEM_Init+0x104>)
 8001232:	601a      	str	r2, [r3, #0]
 8001234:	e024      	b.n	8001280 <SYSTEM_Init+0xcc>
	}
	else if (volt >= BATT_3S_LOW && volt <= BATT_3S_HIGH)
 8001236:	687b      	ldr	r3, [r7, #4]
 8001238:	4a20      	ldr	r2, [pc, #128]	; (80012bc <SYSTEM_Init+0x108>)
 800123a:	4293      	cmp	r3, r2
 800123c:	d90a      	bls.n	8001254 <SYSTEM_Init+0xa0>
 800123e:	687b      	ldr	r3, [r7, #4]
 8001240:	4a1f      	ldr	r2, [pc, #124]	; (80012c0 <SYSTEM_Init+0x10c>)
 8001242:	4293      	cmp	r3, r2
 8001244:	d806      	bhi.n	8001254 <SYSTEM_Init+0xa0>
	{
		battery_fault = BATT_3S_LOW;
 8001246:	4b15      	ldr	r3, [pc, #84]	; (800129c <SYSTEM_Init+0xe8>)
 8001248:	4a1e      	ldr	r2, [pc, #120]	; (80012c4 <SYSTEM_Init+0x110>)
 800124a:	601a      	str	r2, [r3, #0]
		battery_warn = BATT_3S_LOW + BATT_WARNING;
 800124c:	4b15      	ldr	r3, [pc, #84]	; (80012a4 <SYSTEM_Init+0xf0>)
 800124e:	4a1e      	ldr	r2, [pc, #120]	; (80012c8 <SYSTEM_Init+0x114>)
 8001250:	601a      	str	r2, [r3, #0]
 8001252:	e015      	b.n	8001280 <SYSTEM_Init+0xcc>
	}
	else if (volt >= BATT_4S_LOW && volt <= BATT_4S_HIGH)
 8001254:	687b      	ldr	r3, [r7, #4]
 8001256:	4a1d      	ldr	r2, [pc, #116]	; (80012cc <SYSTEM_Init+0x118>)
 8001258:	4293      	cmp	r3, r2
 800125a:	d90a      	bls.n	8001272 <SYSTEM_Init+0xbe>
 800125c:	687b      	ldr	r3, [r7, #4]
 800125e:	4a1c      	ldr	r2, [pc, #112]	; (80012d0 <SYSTEM_Init+0x11c>)
 8001260:	4293      	cmp	r3, r2
 8001262:	d806      	bhi.n	8001272 <SYSTEM_Init+0xbe>
	{
		battery_fault = BATT_4S_LOW;
 8001264:	4b0d      	ldr	r3, [pc, #52]	; (800129c <SYSTEM_Init+0xe8>)
 8001266:	4a1b      	ldr	r2, [pc, #108]	; (80012d4 <SYSTEM_Init+0x120>)
 8001268:	601a      	str	r2, [r3, #0]
		battery_warn = BATT_4S_LOW + BATT_WARNING;
 800126a:	4b0e      	ldr	r3, [pc, #56]	; (80012a4 <SYSTEM_Init+0xf0>)
 800126c:	4a1a      	ldr	r2, [pc, #104]	; (80012d8 <SYSTEM_Init+0x124>)
 800126e:	601a      	str	r2, [r3, #0]
 8001270:	e006      	b.n	8001280 <SYSTEM_Init+0xcc>
	}
	else
	{
		battery_fault = BATT_1S_LOW;
 8001272:	4b0a      	ldr	r3, [pc, #40]	; (800129c <SYSTEM_Init+0xe8>)
 8001274:	4a0a      	ldr	r2, [pc, #40]	; (80012a0 <SYSTEM_Init+0xec>)
 8001276:	601a      	str	r2, [r3, #0]
		battery_warn = BATT_1S_LOW + BATT_WARNING;
 8001278:	4b0a      	ldr	r3, [pc, #40]	; (80012a4 <SYSTEM_Init+0xf0>)
 800127a:	4a0b      	ldr	r2, [pc, #44]	; (80012a8 <SYSTEM_Init+0xf4>)
 800127c:	601a      	str	r2, [r3, #0]
	}

}
 800127e:	46c0      	nop			; (mov r8, r8)
 8001280:	46c0      	nop			; (mov r8, r8)
 8001282:	46bd      	mov	sp, r7
 8001284:	b002      	add	sp, #8
 8001286:	bd80      	pop	{r7, pc}
 8001288:	50000800 	.word	0x50000800
 800128c:	20000100 	.word	0x20000100
 8001290:	00002710 	.word	0x00002710
 8001294:	00000ce3 	.word	0x00000ce3
 8001298:	00001068 	.word	0x00001068
 800129c:	2000014c 	.word	0x2000014c
 80012a0:	00000ce4 	.word	0x00000ce4
 80012a4:	20000148 	.word	0x20000148
 80012a8:	00000dac 	.word	0x00000dac
 80012ac:	000019c7 	.word	0x000019c7
 80012b0:	000020d0 	.word	0x000020d0
 80012b4:	000019c8 	.word	0x000019c8
 80012b8:	00001a90 	.word	0x00001a90
 80012bc:	000026ab 	.word	0x000026ab
 80012c0:	00003138 	.word	0x00003138
 80012c4:	000026ac 	.word	0x000026ac
 80012c8:	00002774 	.word	0x00002774
 80012cc:	0000338f 	.word	0x0000338f
 80012d0:	000041a0 	.word	0x000041a0
 80012d4:	00003390 	.word	0x00003390
 80012d8:	00003458 	.word	0x00003458

080012dc <SYSTEM_Update>:

void SYSTEM_Update (void)
{
 80012dc:	b580      	push	{r7, lr}
 80012de:	b082      	sub	sp, #8
 80012e0:	af00      	add	r7, sp, #0
	uint32_t SystemVolt = AIN_AinToDivider(ADC_Read(BATTERY_CHANNEL),BATTERY_DET_RLOW, BATTERY_DET_RHIGH);
 80012e2:	4b5e      	ldr	r3, [pc, #376]	; (800145c <SYSTEM_Update+0x180>)
 80012e4:	0018      	movs	r0, r3
 80012e6:	f7fe fff9 	bl	80002dc <ADC_Read>
 80012ea:	4a5d      	ldr	r2, [pc, #372]	; (8001460 <SYSTEM_Update+0x184>)
 80012ec:	23e1      	movs	r3, #225	; 0xe1
 80012ee:	00db      	lsls	r3, r3, #3
 80012f0:	0019      	movs	r1, r3
 80012f2:	f7ff f815 	bl	8000320 <AIN_AinToDivider>
 80012f6:	0003      	movs	r3, r0
 80012f8:	607b      	str	r3, [r7, #4]

	if (status.faultBatt == false) {
 80012fa:	4b5a      	ldr	r3, [pc, #360]	; (8001464 <SYSTEM_Update+0x188>)
 80012fc:	785b      	ldrb	r3, [r3, #1]
 80012fe:	2201      	movs	r2, #1
 8001300:	4053      	eors	r3, r2
 8001302:	b2db      	uxtb	r3, r3
 8001304:	2b00      	cmp	r3, #0
 8001306:	d008      	beq.n	800131a <SYSTEM_Update+0x3e>
		if (SystemVolt <= battery_fault) { status.faultBatt = true; }
 8001308:	4b57      	ldr	r3, [pc, #348]	; (8001468 <SYSTEM_Update+0x18c>)
 800130a:	681b      	ldr	r3, [r3, #0]
 800130c:	687a      	ldr	r2, [r7, #4]
 800130e:	429a      	cmp	r2, r3
 8001310:	d80c      	bhi.n	800132c <SYSTEM_Update+0x50>
 8001312:	4b54      	ldr	r3, [pc, #336]	; (8001464 <SYSTEM_Update+0x188>)
 8001314:	2201      	movs	r2, #1
 8001316:	705a      	strb	r2, [r3, #1]
 8001318:	e008      	b.n	800132c <SYSTEM_Update+0x50>
	}
	else { //status.faultBatt == true
		if (SystemVolt >= (battery_fault + BATT_HYST)) { status.faultBatt = false; }
 800131a:	4b53      	ldr	r3, [pc, #332]	; (8001468 <SYSTEM_Update+0x18c>)
 800131c:	681b      	ldr	r3, [r3, #0]
 800131e:	3364      	adds	r3, #100	; 0x64
 8001320:	687a      	ldr	r2, [r7, #4]
 8001322:	429a      	cmp	r2, r3
 8001324:	d302      	bcc.n	800132c <SYSTEM_Update+0x50>
 8001326:	4b4f      	ldr	r3, [pc, #316]	; (8001464 <SYSTEM_Update+0x188>)
 8001328:	2200      	movs	r2, #0
 800132a:	705a      	strb	r2, [r3, #1]
	}

	if (status.warnBatt == false) {
 800132c:	4b4d      	ldr	r3, [pc, #308]	; (8001464 <SYSTEM_Update+0x188>)
 800132e:	789b      	ldrb	r3, [r3, #2]
 8001330:	2201      	movs	r2, #1
 8001332:	4053      	eors	r3, r2
 8001334:	b2db      	uxtb	r3, r3
 8001336:	2b00      	cmp	r3, #0
 8001338:	d008      	beq.n	800134c <SYSTEM_Update+0x70>
		if (SystemVolt <= battery_warn) { status.warnBatt = true; }
 800133a:	4b4c      	ldr	r3, [pc, #304]	; (800146c <SYSTEM_Update+0x190>)
 800133c:	681b      	ldr	r3, [r3, #0]
 800133e:	687a      	ldr	r2, [r7, #4]
 8001340:	429a      	cmp	r2, r3
 8001342:	d80c      	bhi.n	800135e <SYSTEM_Update+0x82>
 8001344:	4b47      	ldr	r3, [pc, #284]	; (8001464 <SYSTEM_Update+0x188>)
 8001346:	2201      	movs	r2, #1
 8001348:	709a      	strb	r2, [r3, #2]
 800134a:	e008      	b.n	800135e <SYSTEM_Update+0x82>
	}
	else { //status.warnBatt == true
		if (SystemVolt >= (battery_warn + BATT_HYST)) { status.warnBatt = false; }
 800134c:	4b47      	ldr	r3, [pc, #284]	; (800146c <SYSTEM_Update+0x190>)
 800134e:	681b      	ldr	r3, [r3, #0]
 8001350:	3364      	adds	r3, #100	; 0x64
 8001352:	687a      	ldr	r2, [r7, #4]
 8001354:	429a      	cmp	r2, r3
 8001356:	d302      	bcc.n	800135e <SYSTEM_Update+0x82>
 8001358:	4b42      	ldr	r3, [pc, #264]	; (8001464 <SYSTEM_Update+0x188>)
 800135a:	2200      	movs	r2, #0
 800135c:	709a      	strb	r2, [r3, #2]
	}

	if (INPUT_TIMEOUT <= CORE_GetTick() - inputHeartbeat)
 800135e:	f7ff fedf 	bl	8001120 <CORE_GetTick>
 8001362:	0002      	movs	r2, r0
 8001364:	4b42      	ldr	r3, [pc, #264]	; (8001470 <SYSTEM_Update+0x194>)
 8001366:	681b      	ldr	r3, [r3, #0]
 8001368:	1ad3      	subs	r3, r2, r3
 800136a:	2b31      	cmp	r3, #49	; 0x31
 800136c:	d903      	bls.n	8001376 <SYSTEM_Update+0x9a>
	{
		status.faultInput = true;
 800136e:	4b3d      	ldr	r3, [pc, #244]	; (8001464 <SYSTEM_Update+0x188>)
 8001370:	2201      	movs	r2, #1
 8001372:	701a      	strb	r2, [r3, #0]
 8001374:	e002      	b.n	800137c <SYSTEM_Update+0xa0>
	}
	else
	{
		status.faultInput = false;
 8001376:	4b3b      	ldr	r3, [pc, #236]	; (8001464 <SYSTEM_Update+0x188>)
 8001378:	2200      	movs	r2, #0
 800137a:	701a      	strb	r2, [r3, #0]
	}


	static uint32_t tick;
	uint32_t now = CORE_GetTick();
 800137c:	f7ff fed0 	bl	8001120 <CORE_GetTick>
 8001380:	0003      	movs	r3, r0
 8001382:	603b      	str	r3, [r7, #0]

	if (status.faultBatt)
 8001384:	4b37      	ldr	r3, [pc, #220]	; (8001464 <SYSTEM_Update+0x188>)
 8001386:	785b      	ldrb	r3, [r3, #1]
 8001388:	2b00      	cmp	r3, #0
 800138a:	d00f      	beq.n	80013ac <SYSTEM_Update+0xd0>
	{
		GPIO_Set(LED_GRN_GPIO, LED_GRN_PIN);
 800138c:	2380      	movs	r3, #128	; 0x80
 800138e:	021b      	lsls	r3, r3, #8
 8001390:	4a38      	ldr	r2, [pc, #224]	; (8001474 <SYSTEM_Update+0x198>)
 8001392:	0019      	movs	r1, r3
 8001394:	0010      	movs	r0, r2
 8001396:	f7ff fee5 	bl	8001164 <GPIO_Set>
		GPIO_Reset(LED_RED_GPIO, LED_RED_PIN);
 800139a:	2380      	movs	r3, #128	; 0x80
 800139c:	015a      	lsls	r2, r3, #5
 800139e:	23a0      	movs	r3, #160	; 0xa0
 80013a0:	05db      	lsls	r3, r3, #23
 80013a2:	0011      	movs	r1, r2
 80013a4:	0018      	movs	r0, r3
 80013a6:	f7ff fee9 	bl	800117c <GPIO_Reset>
	else
	{
		GPIO_Reset(LED_GRN_GPIO, LED_GRN_PIN);
		GPIO_Set(LED_RED_GPIO, LED_RED_PIN);
	}
}
 80013aa:	e052      	b.n	8001452 <SYSTEM_Update+0x176>
	else if (status.faultInput)
 80013ac:	4b2d      	ldr	r3, [pc, #180]	; (8001464 <SYSTEM_Update+0x188>)
 80013ae:	781b      	ldrb	r3, [r3, #0]
 80013b0:	2b00      	cmp	r3, #0
 80013b2:	d02b      	beq.n	800140c <SYSTEM_Update+0x130>
		GPIO_Reset(LED_RED_GPIO, LED_RED_PIN);
 80013b4:	2380      	movs	r3, #128	; 0x80
 80013b6:	015a      	lsls	r2, r3, #5
 80013b8:	23a0      	movs	r3, #160	; 0xa0
 80013ba:	05db      	lsls	r3, r3, #23
 80013bc:	0011      	movs	r1, r2
 80013be:	0018      	movs	r0, r3
 80013c0:	f7ff fedc 	bl	800117c <GPIO_Reset>
		if (FAULT_LED_FLASH <= (now - tick))
 80013c4:	4b2c      	ldr	r3, [pc, #176]	; (8001478 <SYSTEM_Update+0x19c>)
 80013c6:	681b      	ldr	r3, [r3, #0]
 80013c8:	683a      	ldr	r2, [r7, #0]
 80013ca:	1ad2      	subs	r2, r2, r3
 80013cc:	23fa      	movs	r3, #250	; 0xfa
 80013ce:	005b      	lsls	r3, r3, #1
 80013d0:	429a      	cmp	r2, r3
 80013d2:	d33e      	bcc.n	8001452 <SYSTEM_Update+0x176>
			if (GPIO_Read(LED_GRN_GPIO, LED_GRN_PIN))
 80013d4:	2380      	movs	r3, #128	; 0x80
 80013d6:	021b      	lsls	r3, r3, #8
 80013d8:	4a26      	ldr	r2, [pc, #152]	; (8001474 <SYSTEM_Update+0x198>)
 80013da:	0019      	movs	r1, r3
 80013dc:	0010      	movs	r0, r2
 80013de:	f7ff fed9 	bl	8001194 <GPIO_Read>
 80013e2:	1e03      	subs	r3, r0, #0
 80013e4:	d007      	beq.n	80013f6 <SYSTEM_Update+0x11a>
				GPIO_Reset(LED_GRN_GPIO, LED_GRN_PIN);
 80013e6:	2380      	movs	r3, #128	; 0x80
 80013e8:	021b      	lsls	r3, r3, #8
 80013ea:	4a22      	ldr	r2, [pc, #136]	; (8001474 <SYSTEM_Update+0x198>)
 80013ec:	0019      	movs	r1, r3
 80013ee:	0010      	movs	r0, r2
 80013f0:	f7ff fec4 	bl	800117c <GPIO_Reset>
 80013f4:	e006      	b.n	8001404 <SYSTEM_Update+0x128>
				GPIO_Set(LED_GRN_GPIO, LED_GRN_PIN);
 80013f6:	2380      	movs	r3, #128	; 0x80
 80013f8:	021b      	lsls	r3, r3, #8
 80013fa:	4a1e      	ldr	r2, [pc, #120]	; (8001474 <SYSTEM_Update+0x198>)
 80013fc:	0019      	movs	r1, r3
 80013fe:	0010      	movs	r0, r2
 8001400:	f7ff feb0 	bl	8001164 <GPIO_Set>
			tick = now;
 8001404:	4b1c      	ldr	r3, [pc, #112]	; (8001478 <SYSTEM_Update+0x19c>)
 8001406:	683a      	ldr	r2, [r7, #0]
 8001408:	601a      	str	r2, [r3, #0]
}
 800140a:	e022      	b.n	8001452 <SYSTEM_Update+0x176>
	else if (status.warnBatt)
 800140c:	4b15      	ldr	r3, [pc, #84]	; (8001464 <SYSTEM_Update+0x188>)
 800140e:	789b      	ldrb	r3, [r3, #2]
 8001410:	2b00      	cmp	r3, #0
 8001412:	d00f      	beq.n	8001434 <SYSTEM_Update+0x158>
		GPIO_Set(LED_GRN_GPIO, LED_GRN_PIN);
 8001414:	2380      	movs	r3, #128	; 0x80
 8001416:	021b      	lsls	r3, r3, #8
 8001418:	4a16      	ldr	r2, [pc, #88]	; (8001474 <SYSTEM_Update+0x198>)
 800141a:	0019      	movs	r1, r3
 800141c:	0010      	movs	r0, r2
 800141e:	f7ff fea1 	bl	8001164 <GPIO_Set>
		GPIO_Set(LED_RED_GPIO, LED_RED_PIN);
 8001422:	2380      	movs	r3, #128	; 0x80
 8001424:	015a      	lsls	r2, r3, #5
 8001426:	23a0      	movs	r3, #160	; 0xa0
 8001428:	05db      	lsls	r3, r3, #23
 800142a:	0011      	movs	r1, r2
 800142c:	0018      	movs	r0, r3
 800142e:	f7ff fe99 	bl	8001164 <GPIO_Set>
}
 8001432:	e00e      	b.n	8001452 <SYSTEM_Update+0x176>
		GPIO_Reset(LED_GRN_GPIO, LED_GRN_PIN);
 8001434:	2380      	movs	r3, #128	; 0x80
 8001436:	021b      	lsls	r3, r3, #8
 8001438:	4a0e      	ldr	r2, [pc, #56]	; (8001474 <SYSTEM_Update+0x198>)
 800143a:	0019      	movs	r1, r3
 800143c:	0010      	movs	r0, r2
 800143e:	f7ff fe9d 	bl	800117c <GPIO_Reset>
		GPIO_Set(LED_RED_GPIO, LED_RED_PIN);
 8001442:	2380      	movs	r3, #128	; 0x80
 8001444:	015a      	lsls	r2, r3, #5
 8001446:	23a0      	movs	r3, #160	; 0xa0
 8001448:	05db      	lsls	r3, r3, #23
 800144a:	0011      	movs	r1, r2
 800144c:	0018      	movs	r0, r3
 800144e:	f7ff fe89 	bl	8001164 <GPIO_Set>
}
 8001452:	46c0      	nop			; (mov r8, r8)
 8001454:	46bd      	mov	sp, r7
 8001456:	b002      	add	sp, #8
 8001458:	bd80      	pop	{r7, pc}
 800145a:	46c0      	nop			; (mov r8, r8)
 800145c:	20000100 	.word	0x20000100
 8001460:	00002710 	.word	0x00002710
 8001464:	20000150 	.word	0x20000150
 8001468:	2000014c 	.word	0x2000014c
 800146c:	20000148 	.word	0x20000148
 8001470:	20000144 	.word	0x20000144
 8001474:	50000800 	.word	0x50000800
 8001478:	2000013c 	.word	0x2000013c

0800147c <CLK_GetPCLKFreq>:
 800147c:	b580      	push	{r7, lr}
 800147e:	af00      	add	r7, sp, #0
 8001480:	4b01      	ldr	r3, [pc, #4]	; (8001488 <CLK_GetPCLKFreq+0xc>)
 8001482:	0018      	movs	r0, r3
 8001484:	46bd      	mov	sp, r7
 8001486:	bd80      	pop	{r7, pc}
 8001488:	01e84800 	.word	0x01e84800

0800148c <TIM_Init>:
 800148c:	b580      	push	{r7, lr}
 800148e:	b086      	sub	sp, #24
 8001490:	af00      	add	r7, sp, #0
 8001492:	60f8      	str	r0, [r7, #12]
 8001494:	60b9      	str	r1, [r7, #8]
 8001496:	607a      	str	r2, [r7, #4]
 8001498:	68fb      	ldr	r3, [r7, #12]
 800149a:	0018      	movs	r0, r3
 800149c:	f000 f9ac 	bl	80017f8 <TIMx_Init>
 80014a0:	68fb      	ldr	r3, [r7, #12]
 80014a2:	681b      	ldr	r3, [r3, #0]
 80014a4:	681b      	ldr	r3, [r3, #0]
 80014a6:	617b      	str	r3, [r7, #20]
 80014a8:	697b      	ldr	r3, [r7, #20]
 80014aa:	4a0d      	ldr	r2, [pc, #52]	; (80014e0 <TIM_Init+0x54>)
 80014ac:	4013      	ands	r3, r2
 80014ae:	617b      	str	r3, [r7, #20]
 80014b0:	697b      	ldr	r3, [r7, #20]
 80014b2:	2280      	movs	r2, #128	; 0x80
 80014b4:	4313      	orrs	r3, r2
 80014b6:	617b      	str	r3, [r7, #20]
 80014b8:	68fb      	ldr	r3, [r7, #12]
 80014ba:	681b      	ldr	r3, [r3, #0]
 80014bc:	697a      	ldr	r2, [r7, #20]
 80014be:	601a      	str	r2, [r3, #0]
 80014c0:	68ba      	ldr	r2, [r7, #8]
 80014c2:	68fb      	ldr	r3, [r7, #12]
 80014c4:	0011      	movs	r1, r2
 80014c6:	0018      	movs	r0, r3
 80014c8:	f000 f80c 	bl	80014e4 <TIM_SetFreq>
 80014cc:	687a      	ldr	r2, [r7, #4]
 80014ce:	68fb      	ldr	r3, [r7, #12]
 80014d0:	0011      	movs	r1, r2
 80014d2:	0018      	movs	r0, r3
 80014d4:	f000 f81d 	bl	8001512 <TIM_SetReload>
 80014d8:	46c0      	nop			; (mov r8, r8)
 80014da:	46bd      	mov	sp, r7
 80014dc:	b006      	add	sp, #24
 80014de:	bd80      	pop	{r7, pc}
 80014e0:	fffffc0f 	.word	0xfffffc0f

080014e4 <TIM_SetFreq>:
 80014e4:	b580      	push	{r7, lr}
 80014e6:	b084      	sub	sp, #16
 80014e8:	af00      	add	r7, sp, #0
 80014ea:	6078      	str	r0, [r7, #4]
 80014ec:	6039      	str	r1, [r7, #0]
 80014ee:	f7ff ffc5 	bl	800147c <CLK_GetPCLKFreq>
 80014f2:	0003      	movs	r3, r0
 80014f4:	60fb      	str	r3, [r7, #12]
 80014f6:	6839      	ldr	r1, [r7, #0]
 80014f8:	68f8      	ldr	r0, [r7, #12]
 80014fa:	f7fe fe05 	bl	8000108 <__udivsi3>
 80014fe:	0003      	movs	r3, r0
 8001500:	001a      	movs	r2, r3
 8001502:	687b      	ldr	r3, [r7, #4]
 8001504:	681b      	ldr	r3, [r3, #0]
 8001506:	3a01      	subs	r2, #1
 8001508:	629a      	str	r2, [r3, #40]	; 0x28
 800150a:	46c0      	nop			; (mov r8, r8)
 800150c:	46bd      	mov	sp, r7
 800150e:	b004      	add	sp, #16
 8001510:	bd80      	pop	{r7, pc}

08001512 <TIM_SetReload>:
 8001512:	b580      	push	{r7, lr}
 8001514:	b082      	sub	sp, #8
 8001516:	af00      	add	r7, sp, #0
 8001518:	6078      	str	r0, [r7, #4]
 800151a:	6039      	str	r1, [r7, #0]
 800151c:	687b      	ldr	r3, [r7, #4]
 800151e:	681b      	ldr	r3, [r3, #0]
 8001520:	683a      	ldr	r2, [r7, #0]
 8001522:	62da      	str	r2, [r3, #44]	; 0x2c
 8001524:	46c0      	nop			; (mov r8, r8)
 8001526:	46bd      	mov	sp, r7
 8001528:	b002      	add	sp, #8
 800152a:	bd80      	pop	{r7, pc}

0800152c <TIM_OnReload>:
 800152c:	b580      	push	{r7, lr}
 800152e:	b082      	sub	sp, #8
 8001530:	af00      	add	r7, sp, #0
 8001532:	6078      	str	r0, [r7, #4]
 8001534:	6039      	str	r1, [r7, #0]
 8001536:	687b      	ldr	r3, [r7, #4]
 8001538:	681b      	ldr	r3, [r3, #0]
 800153a:	68da      	ldr	r2, [r3, #12]
 800153c:	687b      	ldr	r3, [r7, #4]
 800153e:	681b      	ldr	r3, [r3, #0]
 8001540:	2101      	movs	r1, #1
 8001542:	430a      	orrs	r2, r1
 8001544:	60da      	str	r2, [r3, #12]
 8001546:	687b      	ldr	r3, [r7, #4]
 8001548:	683a      	ldr	r2, [r7, #0]
 800154a:	605a      	str	r2, [r3, #4]
 800154c:	46c0      	nop			; (mov r8, r8)
 800154e:	46bd      	mov	sp, r7
 8001550:	b002      	add	sp, #8
 8001552:	bd80      	pop	{r7, pc}

08001554 <TIM_OnPulse>:
 8001554:	b590      	push	{r4, r7, lr}
 8001556:	b085      	sub	sp, #20
 8001558:	af00      	add	r7, sp, #0
 800155a:	60f8      	str	r0, [r7, #12]
 800155c:	607a      	str	r2, [r7, #4]
 800155e:	240b      	movs	r4, #11
 8001560:	193b      	adds	r3, r7, r4
 8001562:	1c0a      	adds	r2, r1, #0
 8001564:	701a      	strb	r2, [r3, #0]
 8001566:	193b      	adds	r3, r7, r4
 8001568:	7819      	ldrb	r1, [r3, #0]
 800156a:	68fb      	ldr	r3, [r7, #12]
 800156c:	2210      	movs	r2, #16
 800156e:	0018      	movs	r0, r3
 8001570:	f000 f896 	bl	80016a0 <TIM_EnableOCx>
 8001574:	68fb      	ldr	r3, [r7, #12]
 8001576:	681b      	ldr	r3, [r3, #0]
 8001578:	68d9      	ldr	r1, [r3, #12]
 800157a:	0020      	movs	r0, r4
 800157c:	183b      	adds	r3, r7, r0
 800157e:	781b      	ldrb	r3, [r3, #0]
 8001580:	2202      	movs	r2, #2
 8001582:	409a      	lsls	r2, r3
 8001584:	68fb      	ldr	r3, [r7, #12]
 8001586:	681b      	ldr	r3, [r3, #0]
 8001588:	430a      	orrs	r2, r1
 800158a:	60da      	str	r2, [r3, #12]
 800158c:	183b      	adds	r3, r7, r0
 800158e:	781a      	ldrb	r2, [r3, #0]
 8001590:	68fb      	ldr	r3, [r7, #12]
 8001592:	3202      	adds	r2, #2
 8001594:	0092      	lsls	r2, r2, #2
 8001596:	6879      	ldr	r1, [r7, #4]
 8001598:	50d1      	str	r1, [r2, r3]
 800159a:	46c0      	nop			; (mov r8, r8)
 800159c:	46bd      	mov	sp, r7
 800159e:	b005      	add	sp, #20
 80015a0:	bd90      	pop	{r4, r7, pc}

080015a2 <TIM_SetPulse>:
 80015a2:	b580      	push	{r7, lr}
 80015a4:	b084      	sub	sp, #16
 80015a6:	af00      	add	r7, sp, #0
 80015a8:	60f8      	str	r0, [r7, #12]
 80015aa:	607a      	str	r2, [r7, #4]
 80015ac:	200b      	movs	r0, #11
 80015ae:	183b      	adds	r3, r7, r0
 80015b0:	1c0a      	adds	r2, r1, #0
 80015b2:	701a      	strb	r2, [r3, #0]
 80015b4:	183b      	adds	r3, r7, r0
 80015b6:	781b      	ldrb	r3, [r3, #0]
 80015b8:	2b03      	cmp	r3, #3
 80015ba:	d017      	beq.n	80015ec <TIM_SetPulse+0x4a>
 80015bc:	dc1b      	bgt.n	80015f6 <TIM_SetPulse+0x54>
 80015be:	2b02      	cmp	r3, #2
 80015c0:	d00f      	beq.n	80015e2 <TIM_SetPulse+0x40>
 80015c2:	dc18      	bgt.n	80015f6 <TIM_SetPulse+0x54>
 80015c4:	2b00      	cmp	r3, #0
 80015c6:	d002      	beq.n	80015ce <TIM_SetPulse+0x2c>
 80015c8:	2b01      	cmp	r3, #1
 80015ca:	d005      	beq.n	80015d8 <TIM_SetPulse+0x36>
 80015cc:	e013      	b.n	80015f6 <TIM_SetPulse+0x54>
 80015ce:	68fb      	ldr	r3, [r7, #12]
 80015d0:	681b      	ldr	r3, [r3, #0]
 80015d2:	687a      	ldr	r2, [r7, #4]
 80015d4:	635a      	str	r2, [r3, #52]	; 0x34
 80015d6:	e00e      	b.n	80015f6 <TIM_SetPulse+0x54>
 80015d8:	68fb      	ldr	r3, [r7, #12]
 80015da:	681b      	ldr	r3, [r3, #0]
 80015dc:	687a      	ldr	r2, [r7, #4]
 80015de:	639a      	str	r2, [r3, #56]	; 0x38
 80015e0:	e009      	b.n	80015f6 <TIM_SetPulse+0x54>
 80015e2:	68fb      	ldr	r3, [r7, #12]
 80015e4:	681b      	ldr	r3, [r3, #0]
 80015e6:	687a      	ldr	r2, [r7, #4]
 80015e8:	63da      	str	r2, [r3, #60]	; 0x3c
 80015ea:	e004      	b.n	80015f6 <TIM_SetPulse+0x54>
 80015ec:	68fb      	ldr	r3, [r7, #12]
 80015ee:	681b      	ldr	r3, [r3, #0]
 80015f0:	687a      	ldr	r2, [r7, #4]
 80015f2:	641a      	str	r2, [r3, #64]	; 0x40
 80015f4:	46c0      	nop			; (mov r8, r8)
 80015f6:	46c0      	nop			; (mov r8, r8)
 80015f8:	46bd      	mov	sp, r7
 80015fa:	b004      	add	sp, #16
 80015fc:	bd80      	pop	{r7, pc}

080015fe <TIM_Start>:
 80015fe:	b580      	push	{r7, lr}
 8001600:	b082      	sub	sp, #8
 8001602:	af00      	add	r7, sp, #0
 8001604:	6078      	str	r0, [r7, #4]
 8001606:	687b      	ldr	r3, [r7, #4]
 8001608:	0018      	movs	r0, r3
 800160a:	f000 f8d7 	bl	80017bc <TIM_Reload>
 800160e:	687b      	ldr	r3, [r7, #4]
 8001610:	681b      	ldr	r3, [r3, #0]
 8001612:	681a      	ldr	r2, [r3, #0]
 8001614:	687b      	ldr	r3, [r7, #4]
 8001616:	681b      	ldr	r3, [r3, #0]
 8001618:	2101      	movs	r1, #1
 800161a:	430a      	orrs	r2, r1
 800161c:	601a      	str	r2, [r3, #0]
 800161e:	46c0      	nop			; (mov r8, r8)
 8001620:	46bd      	mov	sp, r7
 8001622:	b002      	add	sp, #8
 8001624:	bd80      	pop	{r7, pc}
	...

08001628 <TIM_Stop>:
 8001628:	b580      	push	{r7, lr}
 800162a:	b082      	sub	sp, #8
 800162c:	af00      	add	r7, sp, #0
 800162e:	6078      	str	r0, [r7, #4]
 8001630:	687b      	ldr	r3, [r7, #4]
 8001632:	681b      	ldr	r3, [r3, #0]
 8001634:	6a1b      	ldr	r3, [r3, #32]
 8001636:	4a07      	ldr	r2, [pc, #28]	; (8001654 <TIM_Stop+0x2c>)
 8001638:	4013      	ands	r3, r2
 800163a:	d107      	bne.n	800164c <TIM_Stop+0x24>
 800163c:	687b      	ldr	r3, [r7, #4]
 800163e:	681b      	ldr	r3, [r3, #0]
 8001640:	681a      	ldr	r2, [r3, #0]
 8001642:	687b      	ldr	r3, [r7, #4]
 8001644:	681b      	ldr	r3, [r3, #0]
 8001646:	2101      	movs	r1, #1
 8001648:	438a      	bics	r2, r1
 800164a:	601a      	str	r2, [r3, #0]
 800164c:	46c0      	nop			; (mov r8, r8)
 800164e:	46bd      	mov	sp, r7
 8001650:	b002      	add	sp, #8
 8001652:	bd80      	pop	{r7, pc}
 8001654:	00001111 	.word	0x00001111

08001658 <TIM_Deinit>:
 8001658:	b580      	push	{r7, lr}
 800165a:	b082      	sub	sp, #8
 800165c:	af00      	add	r7, sp, #0
 800165e:	6078      	str	r0, [r7, #4]
 8001660:	687b      	ldr	r3, [r7, #4]
 8001662:	681b      	ldr	r3, [r3, #0]
 8001664:	6a1b      	ldr	r3, [r3, #32]
 8001666:	4a0d      	ldr	r2, [pc, #52]	; (800169c <TIM_Deinit+0x44>)
 8001668:	4013      	ands	r3, r2
 800166a:	d107      	bne.n	800167c <TIM_Deinit+0x24>
 800166c:	687b      	ldr	r3, [r7, #4]
 800166e:	681b      	ldr	r3, [r3, #0]
 8001670:	681a      	ldr	r2, [r3, #0]
 8001672:	687b      	ldr	r3, [r7, #4]
 8001674:	681b      	ldr	r3, [r3, #0]
 8001676:	2101      	movs	r1, #1
 8001678:	438a      	bics	r2, r1
 800167a:	601a      	str	r2, [r3, #0]
 800167c:	687b      	ldr	r3, [r7, #4]
 800167e:	681b      	ldr	r3, [r3, #0]
 8001680:	68da      	ldr	r2, [r3, #12]
 8001682:	687b      	ldr	r3, [r7, #4]
 8001684:	681b      	ldr	r3, [r3, #0]
 8001686:	211f      	movs	r1, #31
 8001688:	438a      	bics	r2, r1
 800168a:	60da      	str	r2, [r3, #12]
 800168c:	687b      	ldr	r3, [r7, #4]
 800168e:	0018      	movs	r0, r3
 8001690:	f000 f8dc 	bl	800184c <TIMx_Deinit>
 8001694:	46c0      	nop			; (mov r8, r8)
 8001696:	46bd      	mov	sp, r7
 8001698:	b002      	add	sp, #8
 800169a:	bd80      	pop	{r7, pc}
 800169c:	00001111 	.word	0x00001111

080016a0 <TIM_EnableOCx>:
 80016a0:	b580      	push	{r7, lr}
 80016a2:	b084      	sub	sp, #16
 80016a4:	af00      	add	r7, sp, #0
 80016a6:	60f8      	str	r0, [r7, #12]
 80016a8:	60b9      	str	r1, [r7, #8]
 80016aa:	607a      	str	r2, [r7, #4]
 80016ac:	68fb      	ldr	r3, [r7, #12]
 80016ae:	681b      	ldr	r3, [r3, #0]
 80016b0:	6a1a      	ldr	r2, [r3, #32]
 80016b2:	68bb      	ldr	r3, [r7, #8]
 80016b4:	009b      	lsls	r3, r3, #2
 80016b6:	2101      	movs	r1, #1
 80016b8:	4099      	lsls	r1, r3
 80016ba:	000b      	movs	r3, r1
 80016bc:	43d9      	mvns	r1, r3
 80016be:	68fb      	ldr	r3, [r7, #12]
 80016c0:	681b      	ldr	r3, [r3, #0]
 80016c2:	400a      	ands	r2, r1
 80016c4:	621a      	str	r2, [r3, #32]
 80016c6:	68bb      	ldr	r3, [r7, #8]
 80016c8:	2b03      	cmp	r3, #3
 80016ca:	d04c      	beq.n	8001766 <TIM_EnableOCx+0xc6>
 80016cc:	68bb      	ldr	r3, [r7, #8]
 80016ce:	2b03      	cmp	r3, #3
 80016d0:	d85e      	bhi.n	8001790 <TIM_EnableOCx+0xf0>
 80016d2:	68bb      	ldr	r3, [r7, #8]
 80016d4:	2b02      	cmp	r3, #2
 80016d6:	d032      	beq.n	800173e <TIM_EnableOCx+0x9e>
 80016d8:	68bb      	ldr	r3, [r7, #8]
 80016da:	2b02      	cmp	r3, #2
 80016dc:	d858      	bhi.n	8001790 <TIM_EnableOCx+0xf0>
 80016de:	68bb      	ldr	r3, [r7, #8]
 80016e0:	2b00      	cmp	r3, #0
 80016e2:	d003      	beq.n	80016ec <TIM_EnableOCx+0x4c>
 80016e4:	68bb      	ldr	r3, [r7, #8]
 80016e6:	2b01      	cmp	r3, #1
 80016e8:	d014      	beq.n	8001714 <TIM_EnableOCx+0x74>
 80016ea:	e051      	b.n	8001790 <TIM_EnableOCx+0xf0>
 80016ec:	68fb      	ldr	r3, [r7, #12]
 80016ee:	681b      	ldr	r3, [r3, #0]
 80016f0:	699b      	ldr	r3, [r3, #24]
 80016f2:	227f      	movs	r2, #127	; 0x7f
 80016f4:	4393      	bics	r3, r2
 80016f6:	0019      	movs	r1, r3
 80016f8:	68fb      	ldr	r3, [r7, #12]
 80016fa:	681b      	ldr	r3, [r3, #0]
 80016fc:	687a      	ldr	r2, [r7, #4]
 80016fe:	430a      	orrs	r2, r1
 8001700:	619a      	str	r2, [r3, #24]
 8001702:	68fb      	ldr	r3, [r7, #12]
 8001704:	681b      	ldr	r3, [r3, #0]
 8001706:	6a1a      	ldr	r2, [r3, #32]
 8001708:	68fb      	ldr	r3, [r7, #12]
 800170a:	681b      	ldr	r3, [r3, #0]
 800170c:	2102      	movs	r1, #2
 800170e:	438a      	bics	r2, r1
 8001710:	621a      	str	r2, [r3, #32]
 8001712:	e03d      	b.n	8001790 <TIM_EnableOCx+0xf0>
 8001714:	68fb      	ldr	r3, [r7, #12]
 8001716:	681b      	ldr	r3, [r3, #0]
 8001718:	699b      	ldr	r3, [r3, #24]
 800171a:	4a25      	ldr	r2, [pc, #148]	; (80017b0 <TIM_EnableOCx+0x110>)
 800171c:	4013      	ands	r3, r2
 800171e:	0019      	movs	r1, r3
 8001720:	687b      	ldr	r3, [r7, #4]
 8001722:	021a      	lsls	r2, r3, #8
 8001724:	68fb      	ldr	r3, [r7, #12]
 8001726:	681b      	ldr	r3, [r3, #0]
 8001728:	430a      	orrs	r2, r1
 800172a:	619a      	str	r2, [r3, #24]
 800172c:	68fb      	ldr	r3, [r7, #12]
 800172e:	681b      	ldr	r3, [r3, #0]
 8001730:	6a1a      	ldr	r2, [r3, #32]
 8001732:	68fb      	ldr	r3, [r7, #12]
 8001734:	681b      	ldr	r3, [r3, #0]
 8001736:	2120      	movs	r1, #32
 8001738:	438a      	bics	r2, r1
 800173a:	621a      	str	r2, [r3, #32]
 800173c:	e028      	b.n	8001790 <TIM_EnableOCx+0xf0>
 800173e:	68fb      	ldr	r3, [r7, #12]
 8001740:	681b      	ldr	r3, [r3, #0]
 8001742:	69db      	ldr	r3, [r3, #28]
 8001744:	227f      	movs	r2, #127	; 0x7f
 8001746:	4393      	bics	r3, r2
 8001748:	0019      	movs	r1, r3
 800174a:	68fb      	ldr	r3, [r7, #12]
 800174c:	681b      	ldr	r3, [r3, #0]
 800174e:	687a      	ldr	r2, [r7, #4]
 8001750:	430a      	orrs	r2, r1
 8001752:	61da      	str	r2, [r3, #28]
 8001754:	68fb      	ldr	r3, [r7, #12]
 8001756:	681b      	ldr	r3, [r3, #0]
 8001758:	6a1a      	ldr	r2, [r3, #32]
 800175a:	68fb      	ldr	r3, [r7, #12]
 800175c:	681b      	ldr	r3, [r3, #0]
 800175e:	4915      	ldr	r1, [pc, #84]	; (80017b4 <TIM_EnableOCx+0x114>)
 8001760:	400a      	ands	r2, r1
 8001762:	621a      	str	r2, [r3, #32]
 8001764:	e014      	b.n	8001790 <TIM_EnableOCx+0xf0>
 8001766:	68fb      	ldr	r3, [r7, #12]
 8001768:	681b      	ldr	r3, [r3, #0]
 800176a:	69db      	ldr	r3, [r3, #28]
 800176c:	4a10      	ldr	r2, [pc, #64]	; (80017b0 <TIM_EnableOCx+0x110>)
 800176e:	4013      	ands	r3, r2
 8001770:	0019      	movs	r1, r3
 8001772:	687b      	ldr	r3, [r7, #4]
 8001774:	021a      	lsls	r2, r3, #8
 8001776:	68fb      	ldr	r3, [r7, #12]
 8001778:	681b      	ldr	r3, [r3, #0]
 800177a:	430a      	orrs	r2, r1
 800177c:	61da      	str	r2, [r3, #28]
 800177e:	68fb      	ldr	r3, [r7, #12]
 8001780:	681b      	ldr	r3, [r3, #0]
 8001782:	6a1a      	ldr	r2, [r3, #32]
 8001784:	68fb      	ldr	r3, [r7, #12]
 8001786:	681b      	ldr	r3, [r3, #0]
 8001788:	490b      	ldr	r1, [pc, #44]	; (80017b8 <TIM_EnableOCx+0x118>)
 800178a:	400a      	ands	r2, r1
 800178c:	621a      	str	r2, [r3, #32]
 800178e:	46c0      	nop			; (mov r8, r8)
 8001790:	68fb      	ldr	r3, [r7, #12]
 8001792:	681b      	ldr	r3, [r3, #0]
 8001794:	6a19      	ldr	r1, [r3, #32]
 8001796:	68bb      	ldr	r3, [r7, #8]
 8001798:	009b      	lsls	r3, r3, #2
 800179a:	2201      	movs	r2, #1
 800179c:	409a      	lsls	r2, r3
 800179e:	68fb      	ldr	r3, [r7, #12]
 80017a0:	681b      	ldr	r3, [r3, #0]
 80017a2:	430a      	orrs	r2, r1
 80017a4:	621a      	str	r2, [r3, #32]
 80017a6:	46c0      	nop			; (mov r8, r8)
 80017a8:	46bd      	mov	sp, r7
 80017aa:	b004      	add	sp, #16
 80017ac:	bd80      	pop	{r7, pc}
 80017ae:	46c0      	nop			; (mov r8, r8)
 80017b0:	ffff80ff 	.word	0xffff80ff
 80017b4:	fffffdff 	.word	0xfffffdff
 80017b8:	ffffdfff 	.word	0xffffdfff

080017bc <TIM_Reload>:
 80017bc:	b580      	push	{r7, lr}
 80017be:	b084      	sub	sp, #16
 80017c0:	af00      	add	r7, sp, #0
 80017c2:	6078      	str	r0, [r7, #4]
 80017c4:	687b      	ldr	r3, [r7, #4]
 80017c6:	681b      	ldr	r3, [r3, #0]
 80017c8:	68db      	ldr	r3, [r3, #12]
 80017ca:	60fb      	str	r3, [r7, #12]
 80017cc:	687b      	ldr	r3, [r7, #4]
 80017ce:	681b      	ldr	r3, [r3, #0]
 80017d0:	2200      	movs	r2, #0
 80017d2:	60da      	str	r2, [r3, #12]
 80017d4:	687b      	ldr	r3, [r7, #4]
 80017d6:	681b      	ldr	r3, [r3, #0]
 80017d8:	2201      	movs	r2, #1
 80017da:	615a      	str	r2, [r3, #20]
 80017dc:	687b      	ldr	r3, [r7, #4]
 80017de:	681b      	ldr	r3, [r3, #0]
 80017e0:	2202      	movs	r2, #2
 80017e2:	4252      	negs	r2, r2
 80017e4:	611a      	str	r2, [r3, #16]
 80017e6:	687b      	ldr	r3, [r7, #4]
 80017e8:	681b      	ldr	r3, [r3, #0]
 80017ea:	68fa      	ldr	r2, [r7, #12]
 80017ec:	60da      	str	r2, [r3, #12]
 80017ee:	46c0      	nop			; (mov r8, r8)
 80017f0:	46bd      	mov	sp, r7
 80017f2:	b004      	add	sp, #16
 80017f4:	bd80      	pop	{r7, pc}
	...

080017f8 <TIMx_Init>:
 80017f8:	b580      	push	{r7, lr}
 80017fa:	b082      	sub	sp, #8
 80017fc:	af00      	add	r7, sp, #0
 80017fe:	6078      	str	r0, [r7, #4]
 8001800:	4b0f      	ldr	r3, [pc, #60]	; (8001840 <TIMx_Init+0x48>)
 8001802:	681b      	ldr	r3, [r3, #0]
 8001804:	687a      	ldr	r2, [r7, #4]
 8001806:	429a      	cmp	r2, r3
 8001808:	d108      	bne.n	800181c <TIMx_Init+0x24>
 800180a:	200f      	movs	r0, #15
 800180c:	f000 fbc9 	bl	8001fa2 <HAL_NVIC_EnableIRQ>
 8001810:	4b0c      	ldr	r3, [pc, #48]	; (8001844 <TIMx_Init+0x4c>)
 8001812:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001814:	4b0b      	ldr	r3, [pc, #44]	; (8001844 <TIMx_Init+0x4c>)
 8001816:	2101      	movs	r1, #1
 8001818:	430a      	orrs	r2, r1
 800181a:	639a      	str	r2, [r3, #56]	; 0x38
 800181c:	4b0a      	ldr	r3, [pc, #40]	; (8001848 <TIMx_Init+0x50>)
 800181e:	681b      	ldr	r3, [r3, #0]
 8001820:	687a      	ldr	r2, [r7, #4]
 8001822:	429a      	cmp	r2, r3
 8001824:	d108      	bne.n	8001838 <TIMx_Init+0x40>
 8001826:	2014      	movs	r0, #20
 8001828:	f000 fbbb 	bl	8001fa2 <HAL_NVIC_EnableIRQ>
 800182c:	4b05      	ldr	r3, [pc, #20]	; (8001844 <TIMx_Init+0x4c>)
 800182e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8001830:	4b04      	ldr	r3, [pc, #16]	; (8001844 <TIMx_Init+0x4c>)
 8001832:	2104      	movs	r1, #4
 8001834:	430a      	orrs	r2, r1
 8001836:	635a      	str	r2, [r3, #52]	; 0x34
 8001838:	46c0      	nop			; (mov r8, r8)
 800183a:	46bd      	mov	sp, r7
 800183c:	b002      	add	sp, #8
 800183e:	bd80      	pop	{r7, pc}
 8001840:	2000001c 	.word	0x2000001c
 8001844:	40021000 	.word	0x40021000
 8001848:	20000038 	.word	0x20000038

0800184c <TIMx_Deinit>:
 800184c:	b580      	push	{r7, lr}
 800184e:	b082      	sub	sp, #8
 8001850:	af00      	add	r7, sp, #0
 8001852:	6078      	str	r0, [r7, #4]
 8001854:	4b0f      	ldr	r3, [pc, #60]	; (8001894 <TIMx_Deinit+0x48>)
 8001856:	681b      	ldr	r3, [r3, #0]
 8001858:	687a      	ldr	r2, [r7, #4]
 800185a:	429a      	cmp	r2, r3
 800185c:	d108      	bne.n	8001870 <TIMx_Deinit+0x24>
 800185e:	200f      	movs	r0, #15
 8001860:	f000 fbaf 	bl	8001fc2 <HAL_NVIC_DisableIRQ>
 8001864:	4b0c      	ldr	r3, [pc, #48]	; (8001898 <TIMx_Deinit+0x4c>)
 8001866:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001868:	4b0b      	ldr	r3, [pc, #44]	; (8001898 <TIMx_Deinit+0x4c>)
 800186a:	2101      	movs	r1, #1
 800186c:	438a      	bics	r2, r1
 800186e:	639a      	str	r2, [r3, #56]	; 0x38
 8001870:	4b0a      	ldr	r3, [pc, #40]	; (800189c <TIMx_Deinit+0x50>)
 8001872:	681b      	ldr	r3, [r3, #0]
 8001874:	687a      	ldr	r2, [r7, #4]
 8001876:	429a      	cmp	r2, r3
 8001878:	d108      	bne.n	800188c <TIMx_Deinit+0x40>
 800187a:	2014      	movs	r0, #20
 800187c:	f000 fba1 	bl	8001fc2 <HAL_NVIC_DisableIRQ>
 8001880:	4b05      	ldr	r3, [pc, #20]	; (8001898 <TIMx_Deinit+0x4c>)
 8001882:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8001884:	4b04      	ldr	r3, [pc, #16]	; (8001898 <TIMx_Deinit+0x4c>)
 8001886:	2104      	movs	r1, #4
 8001888:	438a      	bics	r2, r1
 800188a:	635a      	str	r2, [r3, #52]	; 0x34
 800188c:	46c0      	nop			; (mov r8, r8)
 800188e:	46bd      	mov	sp, r7
 8001890:	b002      	add	sp, #8
 8001892:	bd80      	pop	{r7, pc}
 8001894:	2000001c 	.word	0x2000001c
 8001898:	40021000 	.word	0x40021000
 800189c:	20000038 	.word	0x20000038

080018a0 <TIM_IRQHandler>:
 80018a0:	b580      	push	{r7, lr}
 80018a2:	b084      	sub	sp, #16
 80018a4:	af00      	add	r7, sp, #0
 80018a6:	6078      	str	r0, [r7, #4]
 80018a8:	687b      	ldr	r3, [r7, #4]
 80018aa:	681b      	ldr	r3, [r3, #0]
 80018ac:	691a      	ldr	r2, [r3, #16]
 80018ae:	687b      	ldr	r3, [r7, #4]
 80018b0:	681b      	ldr	r3, [r3, #0]
 80018b2:	68db      	ldr	r3, [r3, #12]
 80018b4:	4013      	ands	r3, r2
 80018b6:	60fb      	str	r3, [r7, #12]
 80018b8:	68fb      	ldr	r3, [r7, #12]
 80018ba:	2202      	movs	r2, #2
 80018bc:	4013      	ands	r3, r2
 80018be:	d007      	beq.n	80018d0 <TIM_IRQHandler+0x30>
 80018c0:	687b      	ldr	r3, [r7, #4]
 80018c2:	681b      	ldr	r3, [r3, #0]
 80018c4:	2203      	movs	r2, #3
 80018c6:	4252      	negs	r2, r2
 80018c8:	611a      	str	r2, [r3, #16]
 80018ca:	687b      	ldr	r3, [r7, #4]
 80018cc:	689b      	ldr	r3, [r3, #8]
 80018ce:	4798      	blx	r3
 80018d0:	68fb      	ldr	r3, [r7, #12]
 80018d2:	2204      	movs	r2, #4
 80018d4:	4013      	ands	r3, r2
 80018d6:	d007      	beq.n	80018e8 <TIM_IRQHandler+0x48>
 80018d8:	687b      	ldr	r3, [r7, #4]
 80018da:	681b      	ldr	r3, [r3, #0]
 80018dc:	2205      	movs	r2, #5
 80018de:	4252      	negs	r2, r2
 80018e0:	611a      	str	r2, [r3, #16]
 80018e2:	687b      	ldr	r3, [r7, #4]
 80018e4:	68db      	ldr	r3, [r3, #12]
 80018e6:	4798      	blx	r3
 80018e8:	68fb      	ldr	r3, [r7, #12]
 80018ea:	2208      	movs	r2, #8
 80018ec:	4013      	ands	r3, r2
 80018ee:	d007      	beq.n	8001900 <TIM_IRQHandler+0x60>
 80018f0:	687b      	ldr	r3, [r7, #4]
 80018f2:	681b      	ldr	r3, [r3, #0]
 80018f4:	2209      	movs	r2, #9
 80018f6:	4252      	negs	r2, r2
 80018f8:	611a      	str	r2, [r3, #16]
 80018fa:	687b      	ldr	r3, [r7, #4]
 80018fc:	691b      	ldr	r3, [r3, #16]
 80018fe:	4798      	blx	r3
 8001900:	68fb      	ldr	r3, [r7, #12]
 8001902:	2210      	movs	r2, #16
 8001904:	4013      	ands	r3, r2
 8001906:	d007      	beq.n	8001918 <TIM_IRQHandler+0x78>
 8001908:	687b      	ldr	r3, [r7, #4]
 800190a:	681b      	ldr	r3, [r3, #0]
 800190c:	2211      	movs	r2, #17
 800190e:	4252      	negs	r2, r2
 8001910:	611a      	str	r2, [r3, #16]
 8001912:	687b      	ldr	r3, [r7, #4]
 8001914:	695b      	ldr	r3, [r3, #20]
 8001916:	4798      	blx	r3
 8001918:	68fb      	ldr	r3, [r7, #12]
 800191a:	2201      	movs	r2, #1
 800191c:	4013      	ands	r3, r2
 800191e:	d007      	beq.n	8001930 <TIM_IRQHandler+0x90>
 8001920:	687b      	ldr	r3, [r7, #4]
 8001922:	681b      	ldr	r3, [r3, #0]
 8001924:	2202      	movs	r2, #2
 8001926:	4252      	negs	r2, r2
 8001928:	611a      	str	r2, [r3, #16]
 800192a:	687b      	ldr	r3, [r7, #4]
 800192c:	685b      	ldr	r3, [r3, #4]
 800192e:	4798      	blx	r3
 8001930:	46c0      	nop			; (mov r8, r8)
 8001932:	46bd      	mov	sp, r7
 8001934:	b004      	add	sp, #16
 8001936:	bd80      	pop	{r7, pc}

08001938 <TIM2_IRQHandler>:
 8001938:	b580      	push	{r7, lr}
 800193a:	af00      	add	r7, sp, #0
 800193c:	4b03      	ldr	r3, [pc, #12]	; (800194c <TIM2_IRQHandler+0x14>)
 800193e:	681b      	ldr	r3, [r3, #0]
 8001940:	0018      	movs	r0, r3
 8001942:	f7ff ffad 	bl	80018a0 <TIM_IRQHandler>
 8001946:	46c0      	nop			; (mov r8, r8)
 8001948:	46bd      	mov	sp, r7
 800194a:	bd80      	pop	{r7, pc}
 800194c:	2000001c 	.word	0x2000001c

08001950 <TIM21_IRQHandler>:
 8001950:	b580      	push	{r7, lr}
 8001952:	af00      	add	r7, sp, #0
 8001954:	4b03      	ldr	r3, [pc, #12]	; (8001964 <TIM21_IRQHandler+0x14>)
 8001956:	681b      	ldr	r3, [r3, #0]
 8001958:	0018      	movs	r0, r3
 800195a:	f7ff ffa1 	bl	80018a0 <TIM_IRQHandler>
 800195e:	46c0      	nop			; (mov r8, r8)
 8001960:	46bd      	mov	sp, r7
 8001962:	bd80      	pop	{r7, pc}
 8001964:	20000038 	.word	0x20000038

08001968 <UART_IRQHandler>:
 8001968:	b580      	push	{r7, lr}
 800196a:	b084      	sub	sp, #16
 800196c:	af00      	add	r7, sp, #0
 800196e:	6078      	str	r0, [r7, #4]
 8001970:	687b      	ldr	r3, [r7, #4]
 8001972:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001974:	69db      	ldr	r3, [r3, #28]
 8001976:	60fb      	str	r3, [r7, #12]
 8001978:	68fb      	ldr	r3, [r7, #12]
 800197a:	2220      	movs	r2, #32
 800197c:	4013      	ands	r3, r2
 800197e:	d01d      	beq.n	80019bc <UART_IRQHandler+0x54>
 8001980:	687b      	ldr	r3, [r7, #4]
 8001982:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001984:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8001986:	687b      	ldr	r3, [r7, #4]
 8001988:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800198a:	b2d1      	uxtb	r1, r2
 800198c:	687a      	ldr	r2, [r7, #4]
 800198e:	18d3      	adds	r3, r2, r3
 8001990:	1c0a      	adds	r2, r1, #0
 8001992:	761a      	strb	r2, [r3, #24]
 8001994:	687b      	ldr	r3, [r7, #4]
 8001996:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001998:	3301      	adds	r3, #1
 800199a:	220f      	movs	r2, #15
 800199c:	401a      	ands	r2, r3
 800199e:	687b      	ldr	r3, [r7, #4]
 80019a0:	629a      	str	r2, [r3, #40]	; 0x28
 80019a2:	687b      	ldr	r3, [r7, #4]
 80019a4:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80019a6:	687b      	ldr	r3, [r7, #4]
 80019a8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80019aa:	429a      	cmp	r2, r3
 80019ac:	d106      	bne.n	80019bc <UART_IRQHandler+0x54>
 80019ae:	687b      	ldr	r3, [r7, #4]
 80019b0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80019b2:	3301      	adds	r3, #1
 80019b4:	220f      	movs	r2, #15
 80019b6:	401a      	ands	r2, r3
 80019b8:	687b      	ldr	r3, [r7, #4]
 80019ba:	62da      	str	r2, [r3, #44]	; 0x2c
 80019bc:	68fb      	ldr	r3, [r7, #12]
 80019be:	2280      	movs	r2, #128	; 0x80
 80019c0:	4013      	ands	r3, r2
 80019c2:	d01c      	beq.n	80019fe <UART_IRQHandler+0x96>
 80019c4:	687b      	ldr	r3, [r7, #4]
 80019c6:	691a      	ldr	r2, [r3, #16]
 80019c8:	687b      	ldr	r3, [r7, #4]
 80019ca:	695b      	ldr	r3, [r3, #20]
 80019cc:	429a      	cmp	r2, r3
 80019ce:	d00e      	beq.n	80019ee <UART_IRQHandler+0x86>
 80019d0:	687b      	ldr	r3, [r7, #4]
 80019d2:	695b      	ldr	r3, [r3, #20]
 80019d4:	687a      	ldr	r2, [r7, #4]
 80019d6:	5cd2      	ldrb	r2, [r2, r3]
 80019d8:	687b      	ldr	r3, [r7, #4]
 80019da:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80019dc:	629a      	str	r2, [r3, #40]	; 0x28
 80019de:	687b      	ldr	r3, [r7, #4]
 80019e0:	695b      	ldr	r3, [r3, #20]
 80019e2:	3301      	adds	r3, #1
 80019e4:	220f      	movs	r2, #15
 80019e6:	401a      	ands	r2, r3
 80019e8:	687b      	ldr	r3, [r7, #4]
 80019ea:	615a      	str	r2, [r3, #20]
 80019ec:	e007      	b.n	80019fe <UART_IRQHandler+0x96>
 80019ee:	687b      	ldr	r3, [r7, #4]
 80019f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80019f2:	681a      	ldr	r2, [r3, #0]
 80019f4:	687b      	ldr	r3, [r7, #4]
 80019f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80019f8:	2180      	movs	r1, #128	; 0x80
 80019fa:	438a      	bics	r2, r1
 80019fc:	601a      	str	r2, [r3, #0]
 80019fe:	68fb      	ldr	r3, [r7, #12]
 8001a00:	220f      	movs	r2, #15
 8001a02:	4013      	ands	r3, r2
 8001a04:	d007      	beq.n	8001a16 <UART_IRQHandler+0xae>
 8001a06:	687b      	ldr	r3, [r7, #4]
 8001a08:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a0a:	6a1a      	ldr	r2, [r3, #32]
 8001a0c:	687b      	ldr	r3, [r7, #4]
 8001a0e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a10:	210f      	movs	r1, #15
 8001a12:	430a      	orrs	r2, r1
 8001a14:	621a      	str	r2, [r3, #32]
 8001a16:	46c0      	nop			; (mov r8, r8)
 8001a18:	46bd      	mov	sp, r7
 8001a1a:	b004      	add	sp, #16
 8001a1c:	bd80      	pop	{r7, pc}
	...

08001a20 <USART2_IRQHandler>:
 8001a20:	b580      	push	{r7, lr}
 8001a22:	af00      	add	r7, sp, #0
 8001a24:	4b03      	ldr	r3, [pc, #12]	; (8001a34 <USART2_IRQHandler+0x14>)
 8001a26:	681b      	ldr	r3, [r3, #0]
 8001a28:	0018      	movs	r0, r3
 8001a2a:	f7ff ff9d 	bl	8001968 <UART_IRQHandler>
 8001a2e:	46c0      	nop			; (mov r8, r8)
 8001a30:	46bd      	mov	sp, r7
 8001a32:	bd80      	pop	{r7, pc}
 8001a34:	20000070 	.word	0x20000070

08001a38 <main>:
#include "Motor.h"
#include "Core.h"
#include "UART.h"

int main(void)
{
 8001a38:	b580      	push	{r7, lr}
 8001a3a:	af00      	add	r7, sp, #0
	CORE_Init();
 8001a3c:	f7fe fd6a 	bl	8000514 <CORE_Init>
	SYSTEM_Init();
 8001a40:	f7ff fbb8 	bl	80011b4 <SYSTEM_Init>
	RADIO_Init();
 8001a44:	f7ff fafc 	bl	8001040 <RADIO_Init>
	MOTOR_Init();
 8001a48:	f7ff f82c 	bl	8000aa4 <MOTOR_Init>
	while (1)
	{
		SYSTEM_Update();
 8001a4c:	f7ff fc46 	bl	80012dc <SYSTEM_Update>
		MOTOR_Update();
 8001a50:	f7ff f84a 	bl	8000ae8 <MOTOR_Update>
		SYSTEM_Update();
 8001a54:	e7fa      	b.n	8001a4c <main+0x14>

08001a56 <SystemInit>:
 8001a56:	b580      	push	{r7, lr}
 8001a58:	af00      	add	r7, sp, #0
 8001a5a:	46c0      	nop			; (mov r8, r8)
 8001a5c:	46bd      	mov	sp, r7
 8001a5e:	bd80      	pop	{r7, pc}

08001a60 <Reset_Handler>:
 8001a60:	4813      	ldr	r0, [pc, #76]	; (8001ab0 <LoopForever+0x2>)
 8001a62:	4685      	mov	sp, r0
 8001a64:	4813      	ldr	r0, [pc, #76]	; (8001ab4 <LoopForever+0x6>)
 8001a66:	6801      	ldr	r1, [r0, #0]
 8001a68:	0e09      	lsrs	r1, r1, #24
 8001a6a:	4a13      	ldr	r2, [pc, #76]	; (8001ab8 <LoopForever+0xa>)
 8001a6c:	4291      	cmp	r1, r2
 8001a6e:	d105      	bne.n	8001a7c <ApplicationStart>
 8001a70:	4812      	ldr	r0, [pc, #72]	; (8001abc <LoopForever+0xe>)
 8001a72:	4913      	ldr	r1, [pc, #76]	; (8001ac0 <LoopForever+0x12>)
 8001a74:	6001      	str	r1, [r0, #0]
 8001a76:	4813      	ldr	r0, [pc, #76]	; (8001ac4 <LoopForever+0x16>)
 8001a78:	4913      	ldr	r1, [pc, #76]	; (8001ac8 <LoopForever+0x1a>)
 8001a7a:	6001      	str	r1, [r0, #0]

08001a7c <ApplicationStart>:
 8001a7c:	4813      	ldr	r0, [pc, #76]	; (8001acc <LoopForever+0x1e>)
 8001a7e:	4914      	ldr	r1, [pc, #80]	; (8001ad0 <LoopForever+0x22>)
 8001a80:	4a14      	ldr	r2, [pc, #80]	; (8001ad4 <LoopForever+0x26>)
 8001a82:	2300      	movs	r3, #0
 8001a84:	e002      	b.n	8001a8c <LoopCopyDataInit>

08001a86 <CopyDataInit>:
 8001a86:	58d4      	ldr	r4, [r2, r3]
 8001a88:	50c4      	str	r4, [r0, r3]
 8001a8a:	3304      	adds	r3, #4

08001a8c <LoopCopyDataInit>:
 8001a8c:	18c4      	adds	r4, r0, r3
 8001a8e:	428c      	cmp	r4, r1
 8001a90:	d3f9      	bcc.n	8001a86 <CopyDataInit>
 8001a92:	4a11      	ldr	r2, [pc, #68]	; (8001ad8 <LoopForever+0x2a>)
 8001a94:	4c11      	ldr	r4, [pc, #68]	; (8001adc <LoopForever+0x2e>)
 8001a96:	2300      	movs	r3, #0
 8001a98:	e001      	b.n	8001a9e <LoopFillZerobss>

08001a9a <FillZerobss>:
 8001a9a:	6013      	str	r3, [r2, #0]
 8001a9c:	3204      	adds	r2, #4

08001a9e <LoopFillZerobss>:
 8001a9e:	42a2      	cmp	r2, r4
 8001aa0:	d3fb      	bcc.n	8001a9a <FillZerobss>
 8001aa2:	f7ff ffd8 	bl	8001a56 <SystemInit>
 8001aa6:	f000 faa9 	bl	8001ffc <__libc_init_array>
 8001aaa:	f7ff ffc5 	bl	8001a38 <main>

08001aae <LoopForever>:
 8001aae:	e7fe      	b.n	8001aae <LoopForever>
 8001ab0:	20000800 	.word	0x20000800
 8001ab4:	00000004 	.word	0x00000004
 8001ab8:	0000001f 	.word	0x0000001f
 8001abc:	40021034 	.word	0x40021034
 8001ac0:	00000001 	.word	0x00000001
 8001ac4:	40010000 	.word	0x40010000
 8001ac8:	00000000 	.word	0x00000000
 8001acc:	20000000 	.word	0x20000000
 8001ad0:	20000074 	.word	0x20000074
 8001ad4:	08002064 	.word	0x08002064
 8001ad8:	20000074 	.word	0x20000074
 8001adc:	20000154 	.word	0x20000154

08001ae0 <ADC1_IRQHandler>:
 8001ae0:	e7fe      	b.n	8001ae0 <ADC1_IRQHandler>
	...

08001ae4 <HAL_ADC_Init>:
 8001ae4:	b580      	push	{r7, lr}
 8001ae6:	b082      	sub	sp, #8
 8001ae8:	af00      	add	r7, sp, #0
 8001aea:	6078      	str	r0, [r7, #4]
 8001aec:	687b      	ldr	r3, [r7, #4]
 8001aee:	2b00      	cmp	r3, #0
 8001af0:	d101      	bne.n	8001af6 <HAL_ADC_Init+0x12>
 8001af2:	2301      	movs	r3, #1
 8001af4:	e159      	b.n	8001daa <HAL_ADC_Init+0x2c6>
 8001af6:	687b      	ldr	r3, [r7, #4]
 8001af8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8001afa:	2b00      	cmp	r3, #0
 8001afc:	d10a      	bne.n	8001b14 <HAL_ADC_Init+0x30>
 8001afe:	687b      	ldr	r3, [r7, #4]
 8001b00:	2200      	movs	r2, #0
 8001b02:	659a      	str	r2, [r3, #88]	; 0x58
 8001b04:	687b      	ldr	r3, [r7, #4]
 8001b06:	2250      	movs	r2, #80	; 0x50
 8001b08:	2100      	movs	r1, #0
 8001b0a:	5499      	strb	r1, [r3, r2]
 8001b0c:	687b      	ldr	r3, [r7, #4]
 8001b0e:	0018      	movs	r0, r3
 8001b10:	f000 f95c 	bl	8001dcc <HAL_ADC_MspInit>
 8001b14:	687b      	ldr	r3, [r7, #4]
 8001b16:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8001b18:	2210      	movs	r2, #16
 8001b1a:	4013      	ands	r3, r2
 8001b1c:	2b10      	cmp	r3, #16
 8001b1e:	d005      	beq.n	8001b2c <HAL_ADC_Init+0x48>
 8001b20:	687b      	ldr	r3, [r7, #4]
 8001b22:	681b      	ldr	r3, [r3, #0]
 8001b24:	689b      	ldr	r3, [r3, #8]
 8001b26:	2204      	movs	r2, #4
 8001b28:	4013      	ands	r3, r2
 8001b2a:	d00b      	beq.n	8001b44 <HAL_ADC_Init+0x60>
 8001b2c:	687b      	ldr	r3, [r7, #4]
 8001b2e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8001b30:	2210      	movs	r2, #16
 8001b32:	431a      	orrs	r2, r3
 8001b34:	687b      	ldr	r3, [r7, #4]
 8001b36:	655a      	str	r2, [r3, #84]	; 0x54
 8001b38:	687b      	ldr	r3, [r7, #4]
 8001b3a:	2250      	movs	r2, #80	; 0x50
 8001b3c:	2100      	movs	r1, #0
 8001b3e:	5499      	strb	r1, [r3, r2]
 8001b40:	2301      	movs	r3, #1
 8001b42:	e132      	b.n	8001daa <HAL_ADC_Init+0x2c6>
 8001b44:	687b      	ldr	r3, [r7, #4]
 8001b46:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8001b48:	4a9a      	ldr	r2, [pc, #616]	; (8001db4 <HAL_ADC_Init+0x2d0>)
 8001b4a:	4013      	ands	r3, r2
 8001b4c:	2202      	movs	r2, #2
 8001b4e:	431a      	orrs	r2, r3
 8001b50:	687b      	ldr	r3, [r7, #4]
 8001b52:	655a      	str	r2, [r3, #84]	; 0x54
 8001b54:	687b      	ldr	r3, [r7, #4]
 8001b56:	681b      	ldr	r3, [r3, #0]
 8001b58:	689b      	ldr	r3, [r3, #8]
 8001b5a:	2203      	movs	r2, #3
 8001b5c:	4013      	ands	r3, r2
 8001b5e:	2b01      	cmp	r3, #1
 8001b60:	d108      	bne.n	8001b74 <HAL_ADC_Init+0x90>
 8001b62:	687b      	ldr	r3, [r7, #4]
 8001b64:	681b      	ldr	r3, [r3, #0]
 8001b66:	681b      	ldr	r3, [r3, #0]
 8001b68:	2201      	movs	r2, #1
 8001b6a:	4013      	ands	r3, r2
 8001b6c:	2b01      	cmp	r3, #1
 8001b6e:	d101      	bne.n	8001b74 <HAL_ADC_Init+0x90>
 8001b70:	2301      	movs	r3, #1
 8001b72:	e000      	b.n	8001b76 <HAL_ADC_Init+0x92>
 8001b74:	2300      	movs	r3, #0
 8001b76:	2b00      	cmp	r3, #0
 8001b78:	d149      	bne.n	8001c0e <HAL_ADC_Init+0x12a>
 8001b7a:	687b      	ldr	r3, [r7, #4]
 8001b7c:	685a      	ldr	r2, [r3, #4]
 8001b7e:	23c0      	movs	r3, #192	; 0xc0
 8001b80:	061b      	lsls	r3, r3, #24
 8001b82:	429a      	cmp	r2, r3
 8001b84:	d00b      	beq.n	8001b9e <HAL_ADC_Init+0xba>
 8001b86:	687b      	ldr	r3, [r7, #4]
 8001b88:	685a      	ldr	r2, [r3, #4]
 8001b8a:	2380      	movs	r3, #128	; 0x80
 8001b8c:	05db      	lsls	r3, r3, #23
 8001b8e:	429a      	cmp	r2, r3
 8001b90:	d005      	beq.n	8001b9e <HAL_ADC_Init+0xba>
 8001b92:	687b      	ldr	r3, [r7, #4]
 8001b94:	685a      	ldr	r2, [r3, #4]
 8001b96:	2380      	movs	r3, #128	; 0x80
 8001b98:	061b      	lsls	r3, r3, #24
 8001b9a:	429a      	cmp	r2, r3
 8001b9c:	d111      	bne.n	8001bc2 <HAL_ADC_Init+0xde>
 8001b9e:	687b      	ldr	r3, [r7, #4]
 8001ba0:	681b      	ldr	r3, [r3, #0]
 8001ba2:	691a      	ldr	r2, [r3, #16]
 8001ba4:	687b      	ldr	r3, [r7, #4]
 8001ba6:	681b      	ldr	r3, [r3, #0]
 8001ba8:	0092      	lsls	r2, r2, #2
 8001baa:	0892      	lsrs	r2, r2, #2
 8001bac:	611a      	str	r2, [r3, #16]
 8001bae:	687b      	ldr	r3, [r7, #4]
 8001bb0:	681b      	ldr	r3, [r3, #0]
 8001bb2:	6919      	ldr	r1, [r3, #16]
 8001bb4:	687b      	ldr	r3, [r7, #4]
 8001bb6:	685a      	ldr	r2, [r3, #4]
 8001bb8:	687b      	ldr	r3, [r7, #4]
 8001bba:	681b      	ldr	r3, [r3, #0]
 8001bbc:	430a      	orrs	r2, r1
 8001bbe:	611a      	str	r2, [r3, #16]
 8001bc0:	e014      	b.n	8001bec <HAL_ADC_Init+0x108>
 8001bc2:	687b      	ldr	r3, [r7, #4]
 8001bc4:	681b      	ldr	r3, [r3, #0]
 8001bc6:	691a      	ldr	r2, [r3, #16]
 8001bc8:	687b      	ldr	r3, [r7, #4]
 8001bca:	681b      	ldr	r3, [r3, #0]
 8001bcc:	0092      	lsls	r2, r2, #2
 8001bce:	0892      	lsrs	r2, r2, #2
 8001bd0:	611a      	str	r2, [r3, #16]
 8001bd2:	4b79      	ldr	r3, [pc, #484]	; (8001db8 <HAL_ADC_Init+0x2d4>)
 8001bd4:	681a      	ldr	r2, [r3, #0]
 8001bd6:	4b78      	ldr	r3, [pc, #480]	; (8001db8 <HAL_ADC_Init+0x2d4>)
 8001bd8:	4978      	ldr	r1, [pc, #480]	; (8001dbc <HAL_ADC_Init+0x2d8>)
 8001bda:	400a      	ands	r2, r1
 8001bdc:	601a      	str	r2, [r3, #0]
 8001bde:	4b76      	ldr	r3, [pc, #472]	; (8001db8 <HAL_ADC_Init+0x2d4>)
 8001be0:	6819      	ldr	r1, [r3, #0]
 8001be2:	687b      	ldr	r3, [r7, #4]
 8001be4:	685a      	ldr	r2, [r3, #4]
 8001be6:	4b74      	ldr	r3, [pc, #464]	; (8001db8 <HAL_ADC_Init+0x2d4>)
 8001be8:	430a      	orrs	r2, r1
 8001bea:	601a      	str	r2, [r3, #0]
 8001bec:	687b      	ldr	r3, [r7, #4]
 8001bee:	681b      	ldr	r3, [r3, #0]
 8001bf0:	68da      	ldr	r2, [r3, #12]
 8001bf2:	687b      	ldr	r3, [r7, #4]
 8001bf4:	681b      	ldr	r3, [r3, #0]
 8001bf6:	2118      	movs	r1, #24
 8001bf8:	438a      	bics	r2, r1
 8001bfa:	60da      	str	r2, [r3, #12]
 8001bfc:	687b      	ldr	r3, [r7, #4]
 8001bfe:	681b      	ldr	r3, [r3, #0]
 8001c00:	68d9      	ldr	r1, [r3, #12]
 8001c02:	687b      	ldr	r3, [r7, #4]
 8001c04:	689a      	ldr	r2, [r3, #8]
 8001c06:	687b      	ldr	r3, [r7, #4]
 8001c08:	681b      	ldr	r3, [r3, #0]
 8001c0a:	430a      	orrs	r2, r1
 8001c0c:	60da      	str	r2, [r3, #12]
 8001c0e:	4b6a      	ldr	r3, [pc, #424]	; (8001db8 <HAL_ADC_Init+0x2d4>)
 8001c10:	681a      	ldr	r2, [r3, #0]
 8001c12:	4b69      	ldr	r3, [pc, #420]	; (8001db8 <HAL_ADC_Init+0x2d4>)
 8001c14:	496a      	ldr	r1, [pc, #424]	; (8001dc0 <HAL_ADC_Init+0x2dc>)
 8001c16:	400a      	ands	r2, r1
 8001c18:	601a      	str	r2, [r3, #0]
 8001c1a:	4b67      	ldr	r3, [pc, #412]	; (8001db8 <HAL_ADC_Init+0x2d4>)
 8001c1c:	6819      	ldr	r1, [r3, #0]
 8001c1e:	687b      	ldr	r3, [r7, #4]
 8001c20:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8001c22:	065a      	lsls	r2, r3, #25
 8001c24:	4b64      	ldr	r3, [pc, #400]	; (8001db8 <HAL_ADC_Init+0x2d4>)
 8001c26:	430a      	orrs	r2, r1
 8001c28:	601a      	str	r2, [r3, #0]
 8001c2a:	687b      	ldr	r3, [r7, #4]
 8001c2c:	681b      	ldr	r3, [r3, #0]
 8001c2e:	689a      	ldr	r2, [r3, #8]
 8001c30:	2380      	movs	r3, #128	; 0x80
 8001c32:	055b      	lsls	r3, r3, #21
 8001c34:	4013      	ands	r3, r2
 8001c36:	d108      	bne.n	8001c4a <HAL_ADC_Init+0x166>
 8001c38:	687b      	ldr	r3, [r7, #4]
 8001c3a:	681b      	ldr	r3, [r3, #0]
 8001c3c:	689a      	ldr	r2, [r3, #8]
 8001c3e:	687b      	ldr	r3, [r7, #4]
 8001c40:	681b      	ldr	r3, [r3, #0]
 8001c42:	2180      	movs	r1, #128	; 0x80
 8001c44:	0549      	lsls	r1, r1, #21
 8001c46:	430a      	orrs	r2, r1
 8001c48:	609a      	str	r2, [r3, #8]
 8001c4a:	687b      	ldr	r3, [r7, #4]
 8001c4c:	681b      	ldr	r3, [r3, #0]
 8001c4e:	68da      	ldr	r2, [r3, #12]
 8001c50:	687b      	ldr	r3, [r7, #4]
 8001c52:	681b      	ldr	r3, [r3, #0]
 8001c54:	495b      	ldr	r1, [pc, #364]	; (8001dc4 <HAL_ADC_Init+0x2e0>)
 8001c56:	400a      	ands	r2, r1
 8001c58:	60da      	str	r2, [r3, #12]
 8001c5a:	687b      	ldr	r3, [r7, #4]
 8001c5c:	681b      	ldr	r3, [r3, #0]
 8001c5e:	68d9      	ldr	r1, [r3, #12]
 8001c60:	687b      	ldr	r3, [r7, #4]
 8001c62:	68da      	ldr	r2, [r3, #12]
 8001c64:	687b      	ldr	r3, [r7, #4]
 8001c66:	691b      	ldr	r3, [r3, #16]
 8001c68:	2b02      	cmp	r3, #2
 8001c6a:	d101      	bne.n	8001c70 <HAL_ADC_Init+0x18c>
 8001c6c:	2304      	movs	r3, #4
 8001c6e:	e000      	b.n	8001c72 <HAL_ADC_Init+0x18e>
 8001c70:	2300      	movs	r3, #0
 8001c72:	431a      	orrs	r2, r3
 8001c74:	687b      	ldr	r3, [r7, #4]
 8001c76:	2020      	movs	r0, #32
 8001c78:	5c1b      	ldrb	r3, [r3, r0]
 8001c7a:	035b      	lsls	r3, r3, #13
 8001c7c:	431a      	orrs	r2, r3
 8001c7e:	687b      	ldr	r3, [r7, #4]
 8001c80:	202c      	movs	r0, #44	; 0x2c
 8001c82:	5c1b      	ldrb	r3, [r3, r0]
 8001c84:	005b      	lsls	r3, r3, #1
 8001c86:	431a      	orrs	r2, r3
 8001c88:	687b      	ldr	r3, [r7, #4]
 8001c8a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c8c:	431a      	orrs	r2, r3
 8001c8e:	687b      	ldr	r3, [r7, #4]
 8001c90:	699b      	ldr	r3, [r3, #24]
 8001c92:	039b      	lsls	r3, r3, #14
 8001c94:	431a      	orrs	r2, r3
 8001c96:	687b      	ldr	r3, [r7, #4]
 8001c98:	69db      	ldr	r3, [r3, #28]
 8001c9a:	03db      	lsls	r3, r3, #15
 8001c9c:	431a      	orrs	r2, r3
 8001c9e:	687b      	ldr	r3, [r7, #4]
 8001ca0:	681b      	ldr	r3, [r3, #0]
 8001ca2:	430a      	orrs	r2, r1
 8001ca4:	60da      	str	r2, [r3, #12]
 8001ca6:	687b      	ldr	r3, [r7, #4]
 8001ca8:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8001caa:	23c2      	movs	r3, #194	; 0xc2
 8001cac:	33ff      	adds	r3, #255	; 0xff
 8001cae:	429a      	cmp	r2, r3
 8001cb0:	d00b      	beq.n	8001cca <HAL_ADC_Init+0x1e6>
 8001cb2:	687b      	ldr	r3, [r7, #4]
 8001cb4:	681b      	ldr	r3, [r3, #0]
 8001cb6:	68d9      	ldr	r1, [r3, #12]
 8001cb8:	687b      	ldr	r3, [r7, #4]
 8001cba:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8001cbc:	687b      	ldr	r3, [r7, #4]
 8001cbe:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001cc0:	431a      	orrs	r2, r3
 8001cc2:	687b      	ldr	r3, [r7, #4]
 8001cc4:	681b      	ldr	r3, [r3, #0]
 8001cc6:	430a      	orrs	r2, r1
 8001cc8:	60da      	str	r2, [r3, #12]
 8001cca:	687b      	ldr	r3, [r7, #4]
 8001ccc:	2221      	movs	r2, #33	; 0x21
 8001cce:	5c9b      	ldrb	r3, [r3, r2]
 8001cd0:	2b01      	cmp	r3, #1
 8001cd2:	d11a      	bne.n	8001d0a <HAL_ADC_Init+0x226>
 8001cd4:	687b      	ldr	r3, [r7, #4]
 8001cd6:	2220      	movs	r2, #32
 8001cd8:	5c9b      	ldrb	r3, [r3, r2]
 8001cda:	2b00      	cmp	r3, #0
 8001cdc:	d109      	bne.n	8001cf2 <HAL_ADC_Init+0x20e>
 8001cde:	687b      	ldr	r3, [r7, #4]
 8001ce0:	681b      	ldr	r3, [r3, #0]
 8001ce2:	68da      	ldr	r2, [r3, #12]
 8001ce4:	687b      	ldr	r3, [r7, #4]
 8001ce6:	681b      	ldr	r3, [r3, #0]
 8001ce8:	2180      	movs	r1, #128	; 0x80
 8001cea:	0249      	lsls	r1, r1, #9
 8001cec:	430a      	orrs	r2, r1
 8001cee:	60da      	str	r2, [r3, #12]
 8001cf0:	e00b      	b.n	8001d0a <HAL_ADC_Init+0x226>
 8001cf2:	687b      	ldr	r3, [r7, #4]
 8001cf4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8001cf6:	2220      	movs	r2, #32
 8001cf8:	431a      	orrs	r2, r3
 8001cfa:	687b      	ldr	r3, [r7, #4]
 8001cfc:	655a      	str	r2, [r3, #84]	; 0x54
 8001cfe:	687b      	ldr	r3, [r7, #4]
 8001d00:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8001d02:	2201      	movs	r2, #1
 8001d04:	431a      	orrs	r2, r3
 8001d06:	687b      	ldr	r3, [r7, #4]
 8001d08:	659a      	str	r2, [r3, #88]	; 0x58
 8001d0a:	687b      	ldr	r3, [r7, #4]
 8001d0c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8001d0e:	2b01      	cmp	r3, #1
 8001d10:	d11f      	bne.n	8001d52 <HAL_ADC_Init+0x26e>
 8001d12:	687b      	ldr	r3, [r7, #4]
 8001d14:	681b      	ldr	r3, [r3, #0]
 8001d16:	691a      	ldr	r2, [r3, #16]
 8001d18:	687b      	ldr	r3, [r7, #4]
 8001d1a:	681b      	ldr	r3, [r3, #0]
 8001d1c:	492a      	ldr	r1, [pc, #168]	; (8001dc8 <HAL_ADC_Init+0x2e4>)
 8001d1e:	400a      	ands	r2, r1
 8001d20:	611a      	str	r2, [r3, #16]
 8001d22:	687b      	ldr	r3, [r7, #4]
 8001d24:	681b      	ldr	r3, [r3, #0]
 8001d26:	6919      	ldr	r1, [r3, #16]
 8001d28:	687b      	ldr	r3, [r7, #4]
 8001d2a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001d2c:	687b      	ldr	r3, [r7, #4]
 8001d2e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001d30:	431a      	orrs	r2, r3
 8001d32:	687b      	ldr	r3, [r7, #4]
 8001d34:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8001d36:	431a      	orrs	r2, r3
 8001d38:	687b      	ldr	r3, [r7, #4]
 8001d3a:	681b      	ldr	r3, [r3, #0]
 8001d3c:	430a      	orrs	r2, r1
 8001d3e:	611a      	str	r2, [r3, #16]
 8001d40:	687b      	ldr	r3, [r7, #4]
 8001d42:	681b      	ldr	r3, [r3, #0]
 8001d44:	691a      	ldr	r2, [r3, #16]
 8001d46:	687b      	ldr	r3, [r7, #4]
 8001d48:	681b      	ldr	r3, [r3, #0]
 8001d4a:	2101      	movs	r1, #1
 8001d4c:	430a      	orrs	r2, r1
 8001d4e:	611a      	str	r2, [r3, #16]
 8001d50:	e00e      	b.n	8001d70 <HAL_ADC_Init+0x28c>
 8001d52:	687b      	ldr	r3, [r7, #4]
 8001d54:	681b      	ldr	r3, [r3, #0]
 8001d56:	691b      	ldr	r3, [r3, #16]
 8001d58:	2201      	movs	r2, #1
 8001d5a:	4013      	ands	r3, r2
 8001d5c:	2b01      	cmp	r3, #1
 8001d5e:	d107      	bne.n	8001d70 <HAL_ADC_Init+0x28c>
 8001d60:	687b      	ldr	r3, [r7, #4]
 8001d62:	681b      	ldr	r3, [r3, #0]
 8001d64:	691a      	ldr	r2, [r3, #16]
 8001d66:	687b      	ldr	r3, [r7, #4]
 8001d68:	681b      	ldr	r3, [r3, #0]
 8001d6a:	2101      	movs	r1, #1
 8001d6c:	438a      	bics	r2, r1
 8001d6e:	611a      	str	r2, [r3, #16]
 8001d70:	687b      	ldr	r3, [r7, #4]
 8001d72:	681b      	ldr	r3, [r3, #0]
 8001d74:	695a      	ldr	r2, [r3, #20]
 8001d76:	687b      	ldr	r3, [r7, #4]
 8001d78:	681b      	ldr	r3, [r3, #0]
 8001d7a:	2107      	movs	r1, #7
 8001d7c:	438a      	bics	r2, r1
 8001d7e:	615a      	str	r2, [r3, #20]
 8001d80:	687b      	ldr	r3, [r7, #4]
 8001d82:	681b      	ldr	r3, [r3, #0]
 8001d84:	6959      	ldr	r1, [r3, #20]
 8001d86:	687b      	ldr	r3, [r7, #4]
 8001d88:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001d8a:	687b      	ldr	r3, [r7, #4]
 8001d8c:	681b      	ldr	r3, [r3, #0]
 8001d8e:	430a      	orrs	r2, r1
 8001d90:	615a      	str	r2, [r3, #20]
 8001d92:	687b      	ldr	r3, [r7, #4]
 8001d94:	2200      	movs	r2, #0
 8001d96:	659a      	str	r2, [r3, #88]	; 0x58
 8001d98:	687b      	ldr	r3, [r7, #4]
 8001d9a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8001d9c:	2203      	movs	r2, #3
 8001d9e:	4393      	bics	r3, r2
 8001da0:	2201      	movs	r2, #1
 8001da2:	431a      	orrs	r2, r3
 8001da4:	687b      	ldr	r3, [r7, #4]
 8001da6:	655a      	str	r2, [r3, #84]	; 0x54
 8001da8:	2300      	movs	r3, #0
 8001daa:	0018      	movs	r0, r3
 8001dac:	46bd      	mov	sp, r7
 8001dae:	b002      	add	sp, #8
 8001db0:	bd80      	pop	{r7, pc}
 8001db2:	46c0      	nop			; (mov r8, r8)
 8001db4:	fffffefd 	.word	0xfffffefd
 8001db8:	40012708 	.word	0x40012708
 8001dbc:	ffc3ffff 	.word	0xffc3ffff
 8001dc0:	fdffffff 	.word	0xfdffffff
 8001dc4:	fffe0219 	.word	0xfffe0219
 8001dc8:	fffffc03 	.word	0xfffffc03

08001dcc <HAL_ADC_MspInit>:
 8001dcc:	b580      	push	{r7, lr}
 8001dce:	b082      	sub	sp, #8
 8001dd0:	af00      	add	r7, sp, #0
 8001dd2:	6078      	str	r0, [r7, #4]
 8001dd4:	46c0      	nop			; (mov r8, r8)
 8001dd6:	46bd      	mov	sp, r7
 8001dd8:	b002      	add	sp, #8
 8001dda:	bd80      	pop	{r7, pc}

08001ddc <__NVIC_EnableIRQ>:
 8001ddc:	b580      	push	{r7, lr}
 8001dde:	b082      	sub	sp, #8
 8001de0:	af00      	add	r7, sp, #0
 8001de2:	0002      	movs	r2, r0
 8001de4:	1dfb      	adds	r3, r7, #7
 8001de6:	701a      	strb	r2, [r3, #0]
 8001de8:	1dfb      	adds	r3, r7, #7
 8001dea:	781b      	ldrb	r3, [r3, #0]
 8001dec:	2b7f      	cmp	r3, #127	; 0x7f
 8001dee:	d809      	bhi.n	8001e04 <__NVIC_EnableIRQ+0x28>
 8001df0:	1dfb      	adds	r3, r7, #7
 8001df2:	781b      	ldrb	r3, [r3, #0]
 8001df4:	001a      	movs	r2, r3
 8001df6:	231f      	movs	r3, #31
 8001df8:	401a      	ands	r2, r3
 8001dfa:	4b04      	ldr	r3, [pc, #16]	; (8001e0c <__NVIC_EnableIRQ+0x30>)
 8001dfc:	2101      	movs	r1, #1
 8001dfe:	4091      	lsls	r1, r2
 8001e00:	000a      	movs	r2, r1
 8001e02:	601a      	str	r2, [r3, #0]
 8001e04:	46c0      	nop			; (mov r8, r8)
 8001e06:	46bd      	mov	sp, r7
 8001e08:	b002      	add	sp, #8
 8001e0a:	bd80      	pop	{r7, pc}
 8001e0c:	e000e100 	.word	0xe000e100

08001e10 <__NVIC_DisableIRQ>:
 8001e10:	b580      	push	{r7, lr}
 8001e12:	b082      	sub	sp, #8
 8001e14:	af00      	add	r7, sp, #0
 8001e16:	0002      	movs	r2, r0
 8001e18:	1dfb      	adds	r3, r7, #7
 8001e1a:	701a      	strb	r2, [r3, #0]
 8001e1c:	1dfb      	adds	r3, r7, #7
 8001e1e:	781b      	ldrb	r3, [r3, #0]
 8001e20:	2b7f      	cmp	r3, #127	; 0x7f
 8001e22:	d810      	bhi.n	8001e46 <__NVIC_DisableIRQ+0x36>
 8001e24:	1dfb      	adds	r3, r7, #7
 8001e26:	781b      	ldrb	r3, [r3, #0]
 8001e28:	001a      	movs	r2, r3
 8001e2a:	231f      	movs	r3, #31
 8001e2c:	4013      	ands	r3, r2
 8001e2e:	4908      	ldr	r1, [pc, #32]	; (8001e50 <__NVIC_DisableIRQ+0x40>)
 8001e30:	2201      	movs	r2, #1
 8001e32:	409a      	lsls	r2, r3
 8001e34:	0013      	movs	r3, r2
 8001e36:	2280      	movs	r2, #128	; 0x80
 8001e38:	508b      	str	r3, [r1, r2]
 8001e3a:	f3bf 8f4f 	dsb	sy
 8001e3e:	46c0      	nop			; (mov r8, r8)
 8001e40:	f3bf 8f6f 	isb	sy
 8001e44:	46c0      	nop			; (mov r8, r8)
 8001e46:	46c0      	nop			; (mov r8, r8)
 8001e48:	46bd      	mov	sp, r7
 8001e4a:	b002      	add	sp, #8
 8001e4c:	bd80      	pop	{r7, pc}
 8001e4e:	46c0      	nop			; (mov r8, r8)
 8001e50:	e000e100 	.word	0xe000e100

08001e54 <__NVIC_SetPriority>:
 8001e54:	b590      	push	{r4, r7, lr}
 8001e56:	b083      	sub	sp, #12
 8001e58:	af00      	add	r7, sp, #0
 8001e5a:	0002      	movs	r2, r0
 8001e5c:	6039      	str	r1, [r7, #0]
 8001e5e:	1dfb      	adds	r3, r7, #7
 8001e60:	701a      	strb	r2, [r3, #0]
 8001e62:	1dfb      	adds	r3, r7, #7
 8001e64:	781b      	ldrb	r3, [r3, #0]
 8001e66:	2b7f      	cmp	r3, #127	; 0x7f
 8001e68:	d828      	bhi.n	8001ebc <__NVIC_SetPriority+0x68>
 8001e6a:	4a2f      	ldr	r2, [pc, #188]	; (8001f28 <__NVIC_SetPriority+0xd4>)
 8001e6c:	1dfb      	adds	r3, r7, #7
 8001e6e:	781b      	ldrb	r3, [r3, #0]
 8001e70:	b25b      	sxtb	r3, r3
 8001e72:	089b      	lsrs	r3, r3, #2
 8001e74:	33c0      	adds	r3, #192	; 0xc0
 8001e76:	009b      	lsls	r3, r3, #2
 8001e78:	589b      	ldr	r3, [r3, r2]
 8001e7a:	1dfa      	adds	r2, r7, #7
 8001e7c:	7812      	ldrb	r2, [r2, #0]
 8001e7e:	0011      	movs	r1, r2
 8001e80:	2203      	movs	r2, #3
 8001e82:	400a      	ands	r2, r1
 8001e84:	00d2      	lsls	r2, r2, #3
 8001e86:	21ff      	movs	r1, #255	; 0xff
 8001e88:	4091      	lsls	r1, r2
 8001e8a:	000a      	movs	r2, r1
 8001e8c:	43d2      	mvns	r2, r2
 8001e8e:	401a      	ands	r2, r3
 8001e90:	0011      	movs	r1, r2
 8001e92:	683b      	ldr	r3, [r7, #0]
 8001e94:	019b      	lsls	r3, r3, #6
 8001e96:	22ff      	movs	r2, #255	; 0xff
 8001e98:	401a      	ands	r2, r3
 8001e9a:	1dfb      	adds	r3, r7, #7
 8001e9c:	781b      	ldrb	r3, [r3, #0]
 8001e9e:	0018      	movs	r0, r3
 8001ea0:	2303      	movs	r3, #3
 8001ea2:	4003      	ands	r3, r0
 8001ea4:	00db      	lsls	r3, r3, #3
 8001ea6:	409a      	lsls	r2, r3
 8001ea8:	481f      	ldr	r0, [pc, #124]	; (8001f28 <__NVIC_SetPriority+0xd4>)
 8001eaa:	1dfb      	adds	r3, r7, #7
 8001eac:	781b      	ldrb	r3, [r3, #0]
 8001eae:	b25b      	sxtb	r3, r3
 8001eb0:	089b      	lsrs	r3, r3, #2
 8001eb2:	430a      	orrs	r2, r1
 8001eb4:	33c0      	adds	r3, #192	; 0xc0
 8001eb6:	009b      	lsls	r3, r3, #2
 8001eb8:	501a      	str	r2, [r3, r0]
 8001eba:	e031      	b.n	8001f20 <__NVIC_SetPriority+0xcc>
 8001ebc:	4a1b      	ldr	r2, [pc, #108]	; (8001f2c <__NVIC_SetPriority+0xd8>)
 8001ebe:	1dfb      	adds	r3, r7, #7
 8001ec0:	781b      	ldrb	r3, [r3, #0]
 8001ec2:	0019      	movs	r1, r3
 8001ec4:	230f      	movs	r3, #15
 8001ec6:	400b      	ands	r3, r1
 8001ec8:	3b08      	subs	r3, #8
 8001eca:	089b      	lsrs	r3, r3, #2
 8001ecc:	3306      	adds	r3, #6
 8001ece:	009b      	lsls	r3, r3, #2
 8001ed0:	18d3      	adds	r3, r2, r3
 8001ed2:	3304      	adds	r3, #4
 8001ed4:	681b      	ldr	r3, [r3, #0]
 8001ed6:	1dfa      	adds	r2, r7, #7
 8001ed8:	7812      	ldrb	r2, [r2, #0]
 8001eda:	0011      	movs	r1, r2
 8001edc:	2203      	movs	r2, #3
 8001ede:	400a      	ands	r2, r1
 8001ee0:	00d2      	lsls	r2, r2, #3
 8001ee2:	21ff      	movs	r1, #255	; 0xff
 8001ee4:	4091      	lsls	r1, r2
 8001ee6:	000a      	movs	r2, r1
 8001ee8:	43d2      	mvns	r2, r2
 8001eea:	401a      	ands	r2, r3
 8001eec:	0011      	movs	r1, r2
 8001eee:	683b      	ldr	r3, [r7, #0]
 8001ef0:	019b      	lsls	r3, r3, #6
 8001ef2:	22ff      	movs	r2, #255	; 0xff
 8001ef4:	401a      	ands	r2, r3
 8001ef6:	1dfb      	adds	r3, r7, #7
 8001ef8:	781b      	ldrb	r3, [r3, #0]
 8001efa:	0018      	movs	r0, r3
 8001efc:	2303      	movs	r3, #3
 8001efe:	4003      	ands	r3, r0
 8001f00:	00db      	lsls	r3, r3, #3
 8001f02:	409a      	lsls	r2, r3
 8001f04:	4809      	ldr	r0, [pc, #36]	; (8001f2c <__NVIC_SetPriority+0xd8>)
 8001f06:	1dfb      	adds	r3, r7, #7
 8001f08:	781b      	ldrb	r3, [r3, #0]
 8001f0a:	001c      	movs	r4, r3
 8001f0c:	230f      	movs	r3, #15
 8001f0e:	4023      	ands	r3, r4
 8001f10:	3b08      	subs	r3, #8
 8001f12:	089b      	lsrs	r3, r3, #2
 8001f14:	430a      	orrs	r2, r1
 8001f16:	3306      	adds	r3, #6
 8001f18:	009b      	lsls	r3, r3, #2
 8001f1a:	18c3      	adds	r3, r0, r3
 8001f1c:	3304      	adds	r3, #4
 8001f1e:	601a      	str	r2, [r3, #0]
 8001f20:	46c0      	nop			; (mov r8, r8)
 8001f22:	46bd      	mov	sp, r7
 8001f24:	b003      	add	sp, #12
 8001f26:	bd90      	pop	{r4, r7, pc}
 8001f28:	e000e100 	.word	0xe000e100
 8001f2c:	e000ed00 	.word	0xe000ed00

08001f30 <SysTick_Config>:
 8001f30:	b580      	push	{r7, lr}
 8001f32:	b082      	sub	sp, #8
 8001f34:	af00      	add	r7, sp, #0
 8001f36:	6078      	str	r0, [r7, #4]
 8001f38:	687b      	ldr	r3, [r7, #4]
 8001f3a:	1e5a      	subs	r2, r3, #1
 8001f3c:	2380      	movs	r3, #128	; 0x80
 8001f3e:	045b      	lsls	r3, r3, #17
 8001f40:	429a      	cmp	r2, r3
 8001f42:	d301      	bcc.n	8001f48 <SysTick_Config+0x18>
 8001f44:	2301      	movs	r3, #1
 8001f46:	e010      	b.n	8001f6a <SysTick_Config+0x3a>
 8001f48:	4b0a      	ldr	r3, [pc, #40]	; (8001f74 <SysTick_Config+0x44>)
 8001f4a:	687a      	ldr	r2, [r7, #4]
 8001f4c:	3a01      	subs	r2, #1
 8001f4e:	605a      	str	r2, [r3, #4]
 8001f50:	2301      	movs	r3, #1
 8001f52:	425b      	negs	r3, r3
 8001f54:	2103      	movs	r1, #3
 8001f56:	0018      	movs	r0, r3
 8001f58:	f7ff ff7c 	bl	8001e54 <__NVIC_SetPriority>
 8001f5c:	4b05      	ldr	r3, [pc, #20]	; (8001f74 <SysTick_Config+0x44>)
 8001f5e:	2200      	movs	r2, #0
 8001f60:	609a      	str	r2, [r3, #8]
 8001f62:	4b04      	ldr	r3, [pc, #16]	; (8001f74 <SysTick_Config+0x44>)
 8001f64:	2207      	movs	r2, #7
 8001f66:	601a      	str	r2, [r3, #0]
 8001f68:	2300      	movs	r3, #0
 8001f6a:	0018      	movs	r0, r3
 8001f6c:	46bd      	mov	sp, r7
 8001f6e:	b002      	add	sp, #8
 8001f70:	bd80      	pop	{r7, pc}
 8001f72:	46c0      	nop			; (mov r8, r8)
 8001f74:	e000e010 	.word	0xe000e010

08001f78 <HAL_NVIC_SetPriority>:
 8001f78:	b580      	push	{r7, lr}
 8001f7a:	b084      	sub	sp, #16
 8001f7c:	af00      	add	r7, sp, #0
 8001f7e:	60b9      	str	r1, [r7, #8]
 8001f80:	607a      	str	r2, [r7, #4]
 8001f82:	210f      	movs	r1, #15
 8001f84:	187b      	adds	r3, r7, r1
 8001f86:	1c02      	adds	r2, r0, #0
 8001f88:	701a      	strb	r2, [r3, #0]
 8001f8a:	68ba      	ldr	r2, [r7, #8]
 8001f8c:	187b      	adds	r3, r7, r1
 8001f8e:	781b      	ldrb	r3, [r3, #0]
 8001f90:	b25b      	sxtb	r3, r3
 8001f92:	0011      	movs	r1, r2
 8001f94:	0018      	movs	r0, r3
 8001f96:	f7ff ff5d 	bl	8001e54 <__NVIC_SetPriority>
 8001f9a:	46c0      	nop			; (mov r8, r8)
 8001f9c:	46bd      	mov	sp, r7
 8001f9e:	b004      	add	sp, #16
 8001fa0:	bd80      	pop	{r7, pc}

08001fa2 <HAL_NVIC_EnableIRQ>:
 8001fa2:	b580      	push	{r7, lr}
 8001fa4:	b082      	sub	sp, #8
 8001fa6:	af00      	add	r7, sp, #0
 8001fa8:	0002      	movs	r2, r0
 8001faa:	1dfb      	adds	r3, r7, #7
 8001fac:	701a      	strb	r2, [r3, #0]
 8001fae:	1dfb      	adds	r3, r7, #7
 8001fb0:	781b      	ldrb	r3, [r3, #0]
 8001fb2:	b25b      	sxtb	r3, r3
 8001fb4:	0018      	movs	r0, r3
 8001fb6:	f7ff ff11 	bl	8001ddc <__NVIC_EnableIRQ>
 8001fba:	46c0      	nop			; (mov r8, r8)
 8001fbc:	46bd      	mov	sp, r7
 8001fbe:	b002      	add	sp, #8
 8001fc0:	bd80      	pop	{r7, pc}

08001fc2 <HAL_NVIC_DisableIRQ>:
 8001fc2:	b580      	push	{r7, lr}
 8001fc4:	b082      	sub	sp, #8
 8001fc6:	af00      	add	r7, sp, #0
 8001fc8:	0002      	movs	r2, r0
 8001fca:	1dfb      	adds	r3, r7, #7
 8001fcc:	701a      	strb	r2, [r3, #0]
 8001fce:	1dfb      	adds	r3, r7, #7
 8001fd0:	781b      	ldrb	r3, [r3, #0]
 8001fd2:	b25b      	sxtb	r3, r3
 8001fd4:	0018      	movs	r0, r3
 8001fd6:	f7ff ff1b 	bl	8001e10 <__NVIC_DisableIRQ>
 8001fda:	46c0      	nop			; (mov r8, r8)
 8001fdc:	46bd      	mov	sp, r7
 8001fde:	b002      	add	sp, #8
 8001fe0:	bd80      	pop	{r7, pc}

08001fe2 <HAL_SYSTICK_Config>:
 8001fe2:	b580      	push	{r7, lr}
 8001fe4:	b082      	sub	sp, #8
 8001fe6:	af00      	add	r7, sp, #0
 8001fe8:	6078      	str	r0, [r7, #4]
 8001fea:	687b      	ldr	r3, [r7, #4]
 8001fec:	0018      	movs	r0, r3
 8001fee:	f7ff ff9f 	bl	8001f30 <SysTick_Config>
 8001ff2:	0003      	movs	r3, r0
 8001ff4:	0018      	movs	r0, r3
 8001ff6:	46bd      	mov	sp, r7
 8001ff8:	b002      	add	sp, #8
 8001ffa:	bd80      	pop	{r7, pc}

08001ffc <__libc_init_array>:
 8001ffc:	b570      	push	{r4, r5, r6, lr}
 8001ffe:	2600      	movs	r6, #0
 8002000:	4d0c      	ldr	r5, [pc, #48]	; (8002034 <__libc_init_array+0x38>)
 8002002:	4c0d      	ldr	r4, [pc, #52]	; (8002038 <__libc_init_array+0x3c>)
 8002004:	1b64      	subs	r4, r4, r5
 8002006:	10a4      	asrs	r4, r4, #2
 8002008:	42a6      	cmp	r6, r4
 800200a:	d109      	bne.n	8002020 <__libc_init_array+0x24>
 800200c:	2600      	movs	r6, #0
 800200e:	f000 f819 	bl	8002044 <_init>
 8002012:	4d0a      	ldr	r5, [pc, #40]	; (800203c <__libc_init_array+0x40>)
 8002014:	4c0a      	ldr	r4, [pc, #40]	; (8002040 <__libc_init_array+0x44>)
 8002016:	1b64      	subs	r4, r4, r5
 8002018:	10a4      	asrs	r4, r4, #2
 800201a:	42a6      	cmp	r6, r4
 800201c:	d105      	bne.n	800202a <__libc_init_array+0x2e>
 800201e:	bd70      	pop	{r4, r5, r6, pc}
 8002020:	00b3      	lsls	r3, r6, #2
 8002022:	58eb      	ldr	r3, [r5, r3]
 8002024:	4798      	blx	r3
 8002026:	3601      	adds	r6, #1
 8002028:	e7ee      	b.n	8002008 <__libc_init_array+0xc>
 800202a:	00b3      	lsls	r3, r6, #2
 800202c:	58eb      	ldr	r3, [r5, r3]
 800202e:	4798      	blx	r3
 8002030:	3601      	adds	r6, #1
 8002032:	e7f2      	b.n	800201a <__libc_init_array+0x1e>
 8002034:	0800205c 	.word	0x0800205c
 8002038:	0800205c 	.word	0x0800205c
 800203c:	0800205c 	.word	0x0800205c
 8002040:	08002060 	.word	0x08002060

08002044 <_init>:
 8002044:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002046:	46c0      	nop			; (mov r8, r8)
 8002048:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800204a:	bc08      	pop	{r3}
 800204c:	469e      	mov	lr, r3
 800204e:	4770      	bx	lr

08002050 <_fini>:
 8002050:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002052:	46c0      	nop			; (mov r8, r8)
 8002054:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002056:	bc08      	pop	{r3}
 8002058:	469e      	mov	lr, r3
 800205a:	4770      	bx	lr
